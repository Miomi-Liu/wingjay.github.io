{"meta":{"version":1,"warehouse":"1.0.3"},"models":{"Asset":[{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","path":"vendors/velocity/velocity.ui.min.js","modified":0},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","path":"vendors/velocity/velocity.ui.js","modified":0},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","path":"vendors/velocity/velocity.min.js","modified":0},{"_id":"themes/next/source/vendors/velocity/velocity.js","path":"vendors/velocity/velocity.js","modified":0},{"_id":"themes/next/source/vendors/velocity/bower.json","path":"vendors/velocity/bower.json","modified":0},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","path":"vendors/jquery_lazyload/jquery.scrollstop.js","modified":0},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","path":"vendors/jquery_lazyload/jquery.lazyload.js","modified":0},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","path":"vendors/jquery_lazyload/bower.json","modified":0},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","path":"vendors/jquery_lazyload/README.md","modified":0},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","path":"vendors/jquery_lazyload/CONTRIBUTING.md","modified":0},{"_id":"themes/next/source/vendors/jquery/index.js","path":"vendors/jquery/index.js","modified":0},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff2","modified":0},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff","modified":0},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","path":"vendors/font-awesome/fonts/fontawesome-webfont.ttf","modified":0},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","path":"vendors/font-awesome/fonts/fontawesome-webfont.svg","modified":0},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","path":"vendors/font-awesome/fonts/fontawesome-webfont.eot","modified":0},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","path":"vendors/font-awesome/fonts/FontAwesome.otf","modified":0},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","path":"vendors/font-awesome/css/font-awesome.min.css","modified":0},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","path":"vendors/font-awesome/css/font-awesome.css.map","modified":0},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","path":"vendors/font-awesome/css/font-awesome.css","modified":0},{"_id":"themes/next/source/vendors/font-awesome/bower.json","path":"vendors/font-awesome/bower.json","modified":0},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","path":"vendors/font-awesome/HELP-US-OUT.txt","modified":0},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","path":"vendors/fastclick/lib/fastclick.min.js","modified":0},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","path":"vendors/fastclick/lib/fastclick.js","modified":0},{"_id":"themes/next/source/vendors/fastclick/bower.json","path":"vendors/fastclick/bower.json","modified":0},{"_id":"themes/next/source/vendors/fastclick/README.md","path":"vendors/fastclick/README.md","modified":0},{"_id":"themes/next/source/vendors/fastclick/LICENSE","path":"vendors/fastclick/LICENSE","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","path":"vendors/fancybox/source/jquery.fancybox.pack.js","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","path":"vendors/fancybox/source/jquery.fancybox.js","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","path":"vendors/fancybox/source/jquery.fancybox.css","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","path":"vendors/fancybox/source/helpers/fancybox_buttons.png","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","path":"vendors/fancybox/source/fancybox_sprite@2x.png","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","path":"vendors/fancybox/source/fancybox_sprite.png","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","path":"vendors/fancybox/source/fancybox_overlay.png","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","path":"vendors/fancybox/source/fancybox_loading@2x.gif","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","path":"vendors/fancybox/source/fancybox_loading.gif","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","path":"vendors/fancybox/source/blank.gif","modified":0},{"_id":"themes/next/source/js/ua-parser.min.js","path":"js/ua-parser.min.js","modified":0},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":0},{"_id":"themes/next/source/js/hook-duoshuo.js","path":"js/hook-duoshuo.js","modified":0},{"_id":"themes/next/source/js/helpers.js","path":"js/helpers.js","modified":0},{"_id":"themes/next/source/js/fancy-box.js","path":"js/fancy-box.js","modified":0},{"_id":"themes/next/source/js/bootstrap.scrollspy.js","path":"js/bootstrap.scrollspy.js","modified":0},{"_id":"themes/next/source/js/bootstrap.js","path":"js/bootstrap.js","modified":0},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0},{"_id":"themes/next/source/404.html","path":"404.html","modified":0},{"_id":"source/robots.txt","path":"robots.txt","modified":0},{"_id":"source/img/说一说我和博客.jpg","path":"img/说一说我和博客.jpg","modified":0},{"_id":"source/img/有趣的曲线在Android上的实现/ring.gif","path":"img/有趣的曲线在Android上的实现/ring.gif","modified":0},{"_id":"source/img/有趣的曲线在Android上的实现/box.gif","path":"img/有趣的曲线在Android上的实现/box.gif","modified":0},{"_id":"source/img/有趣的曲线在Android上的实现/9.jpg","path":"img/有趣的曲线在Android上的实现/9.jpg","modified":0},{"_id":"source/img/有趣的曲线在Android上的实现/8.png","path":"img/有趣的曲线在Android上的实现/8.png","modified":0},{"_id":"source/img/有趣的曲线在Android上的实现/7.png","path":"img/有趣的曲线在Android上的实现/7.png","modified":0},{"_id":"source/img/有趣的曲线在Android上的实现/6.png","path":"img/有趣的曲线在Android上的实现/6.png","modified":0},{"_id":"source/img/有趣的曲线在Android上的实现/5.png","path":"img/有趣的曲线在Android上的实现/5.png","modified":0},{"_id":"source/img/有趣的曲线在Android上的实现/4.png","path":"img/有趣的曲线在Android上的实现/4.png","modified":0},{"_id":"source/img/有趣的曲线在Android上的实现/3.png","path":"img/有趣的曲线在Android上的实现/3.png","modified":0},{"_id":"source/img/有趣的曲线在Android上的实现/2.png","path":"img/有趣的曲线在Android上的实现/2.png","modified":0},{"_id":"source/img/有趣的曲线在Android上的实现/11.png","path":"img/有趣的曲线在Android上的实现/11.png","modified":0},{"_id":"source/img/有趣的曲线在Android上的实现/10.png","path":"img/有趣的曲线在Android上的实现/10.png","modified":0},{"_id":"source/img/有趣的曲线在Android上的实现/1.png","path":"img/有趣的曲线在Android上的实现/1.png","modified":0},{"_id":"source/img/我的博客.png","path":"img/我的博客.png","modified":0},{"_id":"source/img/域名解析.png","path":"img/域名解析.png","modified":0},{"_id":"source/img/交大－影/tuya.jpg","path":"img/交大－影/tuya.jpg","modified":0},{"_id":"source/img/交大－影/love.jpg","path":"img/交大－影/love.jpg","modified":0},{"_id":"source/img/交大－影/library_outside.jpg","path":"img/交大－影/library_outside.jpg","modified":0},{"_id":"source/img/交大－影/library.jpg","path":"img/交大－影/library.jpg","modified":0},{"_id":"source/img/交大－影/laker.jpg","path":"img/交大－影/laker.jpg","modified":0},{"_id":"source/img/交大－影/huxiaohe.jpg","path":"img/交大－影/huxiaohe.jpg","modified":0},{"_id":"source/img/交大－影/hehua.jpg","path":"img/交大－影/hehua.jpg","modified":0},{"_id":"source/img/交大－影/dom.jpg","path":"img/交大－影/dom.jpg","modified":0},{"_id":"source/img/hey_folks.jpg","path":"img/hey_folks.jpg","modified":0},{"_id":"source/img/hexo目录.png","path":"img/hexo目录.png","modified":0},{"_id":"source/img/fastblur/timeconsume_statisic.png","path":"img/fastblur/timeconsume_statisic.png","modified":0},{"_id":"source/img/fastblur/test_pic.jpeg","path":"img/fastblur/test_pic.jpeg","modified":0},{"_id":"source/img/fastblur/memory_50.png","path":"img/fastblur/memory_50.png","modified":0},{"_id":"source/img/fastblur/memory_300.png","path":"img/fastblur/memory_300.png","modified":0},{"_id":"source/img/fastblur/memory_200.png","path":"img/fastblur/memory_200.png","modified":0},{"_id":"source/img/fastblur/memory_20.png","path":"img/fastblur/memory_20.png","modified":0},{"_id":"source/img/fastblur/memory_100.png","path":"img/fastblur/memory_100.png","modified":0},{"_id":"source/img/fastblur/memory_10.png","path":"img/fastblur/memory_10.png","modified":0},{"_id":"source/img/fastblur/memory_1.png","path":"img/fastblur/memory_1.png","modified":0},{"_id":"source/img/fastblur/iosblur.jpg","path":"img/fastblur/iosblur.jpg","modified":0},{"_id":"source/img/fastblur/fastblur_50.png","path":"img/fastblur/fastblur_50.png","modified":0},{"_id":"source/img/fastblur/fastblur_35.png","path":"img/fastblur/fastblur_35.png","modified":0},{"_id":"source/img/fastblur/fastblur_20.png","path":"img/fastblur/fastblur_20.png","modified":0},{"_id":"source/img/fastblur/fastblur_100.png","path":"img/fastblur/fastblur_100.png","modified":0},{"_id":"source/img/fastblur/fastblur_10.png","path":"img/fastblur/fastblur_10.png","modified":0},{"_id":"source/img/fastblur/androidblur_2.png","path":"img/fastblur/androidblur_2.png","modified":0},{"_id":"source/img/fastblur/androidblur_1.png","path":"img/fastblur/androidblur_1.png","modified":0},{"_id":"source/img/Disqus评论系统.png","path":"img/Disqus评论系统.png","modified":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":0}],"Cache":[{"_id":"source/_posts/30条Android开发建议.md","shasum":"ba48e05144778bf2a8c14c1abf01464b61a9e80c","modified":1458054018000},{"_id":"source/_posts/今年之计.md","shasum":"178c7a9dc5b7361b708b07c445d97fbf2873197e","modified":1455879544000},{"_id":"source/_posts/Hey folks.md","shasum":"6f66763ffdde3337e7b053a1c7935e319601fefe","modified":1451481982000},{"_id":"source/_posts/一种快速毛玻璃虚化效果实现.md","shasum":"d5f08ec1706dd7b54c448613c6b3d6616249e6e8","modified":1457759808000},{"_id":"source/_posts/交大－影.md","shasum":"1468d876a97a744255ce17efec7e692e7b5b0462","modified":1455967331000},{"_id":"source/_posts/如何在一天之内搭建以你自己名字为域名的很cool的个人博客.md","shasum":"0560971826d29df260e03e1d26b5b8f72cfa7874","modified":1453718583000},{"_id":"source/_posts/说一说博客.md","shasum":"cc72f8f8cc200df66593936d5d56a88c58a4cdba","modified":1451481982000},{"_id":"source/_posts/计划清单.md","shasum":"a1a29fdcbc5367774cb5e4b5f624a10129820aa7","modified":1456126635000},{"_id":"source/_posts/有趣的曲线在Android上的实现.md","shasum":"57281b8735bfdf1b1ab18d87a8f46c0795abd722","modified":1453718869000},{"_id":"source/_posts/我与代码的相知相遇.md","shasum":"56d51627e79052472ea04fa8028fcb2a58fe5b8b","modified":1451486983000},{"_id":"source/guestbook/index.md","shasum":"a367851e76c80c3e94afb026f9f22ba373b054c6","modified":1451481982000},{"_id":"source/favicon.ico","shasum":"bb38565775f52af7d2f1f0187ed9972a7b4f09a1","modified":1451481982000},{"_id":"source/img/fastblur/memory_1.png","shasum":"14e397afa644bcf3dac11daabd988cca961ad5d8","modified":1457752153000},{"_id":"source/img/fastblur/iosblur.jpg","shasum":"b7aad38c394a049c45cc60ddee04f916479d9ddc","modified":1457746431000},{"_id":"source/img/fastblur/memory_10.png","shasum":"935d56271c8d9304161cbcf5405b8a1ee0e87062","modified":1457752846000},{"_id":"source/img/fastblur/memory_200.png","shasum":"2a07afd6a2443e17461839dded0c279e8822d86b","modified":1457752904000},{"_id":"source/img/fastblur/memory_20.png","shasum":"db301fb4b555e31a64a77f4b1286310ea267ca58","modified":1457752798000},{"_id":"source/img/fastblur/memory_100.png","shasum":"3232f11fdac327635a82e22f009b776030c3bc89","modified":1457752540000},{"_id":"source/img/fastblur/memory_300.png","shasum":"89d3356a32b32962d364f83d5d82f6a8d7d83333","modified":1457752952000},{"_id":"source/img/fastblur/memory_50.png","shasum":"62b94351e2d50d256e83ec7ec3a854e084bceade","modified":1457752752000},{"_id":"source/img/域名解析.png","shasum":"e3cd6594465e22ed3b2a872e1b63212862097011","modified":1451481982000},{"_id":"source/img/有趣的曲线在Android上的实现/9.jpg","shasum":"02f5f09e3607c7421b0e3c35fb644cc1b32986a6","modified":1453648146000},{"_id":"source/tags/index.md","shasum":"c60250d4ddd679b6841a052c754d7756a2f0be52","modified":1451481982000},{"_id":"source/robots.txt","shasum":"6123a9417ecb039cb56a5b45c3e0450e30196e35","modified":1451481982000},{"_id":"source/img/Disqus评论系统.png","shasum":"e313d38101a7a49f717ff8964c9d125eef3b284d","modified":1451481982000},{"_id":"source/img/fastblur/androidblur_2.png","shasum":"6ea9cc7a4ce5338c9de262e064b129829d2d877a","modified":1457747187000},{"_id":"source/img/hexo目录.png","shasum":"826cebfed96a6407234bf963baf6921c398195e1","modified":1451481982000},{"_id":"source/img/fastblur/timeconsume_statisic.png","shasum":"bbff7161a608a488990613a9df5de6dcbf9162f9","modified":1457751571000},{"_id":"source/img/hey_folks.jpg","shasum":"b0a05bc1ed1669615ead2c5c9b7947f2b0d3968c","modified":1451481982000},{"_id":"source/img/有趣的曲线在Android上的实现/10.png","shasum":"901a86dc68fdb1e8c8d7e2c2ed30c03b73d565f8","modified":1453719331000},{"_id":"source/img/有趣的曲线在Android上的实现/3.png","shasum":"03d2eb9ef532d6b5606d89cf6c21748c317087ca","modified":1453719199000},{"_id":"source/img/fastblur/androidblur_1.png","shasum":"dfc1003232f2bc079ad507ad9fd29e37aba3dc5e","modified":1457747153000},{"_id":"source/img/fastblur/test_pic.jpeg","shasum":"19ca9f388ab26da2c071841baab3868bfba15569","modified":1451658547000},{"_id":"source/img/有趣的曲线在Android上的实现/5.png","shasum":"b3b915d72a8c9611c39b0bb12015f2757df2046f","modified":1453718278000},{"_id":"source/img/有趣的曲线在Android上的实现/4.png","shasum":"a54df53b47e84f7b452f8393b6b93ccb32721d08","modified":1453719225000},{"_id":"source/img/有趣的曲线在Android上的实现/8.png","shasum":"8556f52be9972440d4460018133ccb3a4dfbcf5e","modified":1453719295000},{"_id":"source/img/说一说我和博客.jpg","shasum":"0dee97f7d6615ad884b262e82982db52b2a29358","modified":1451481982000},{"_id":"source/img/fastblur/fastblur_100.png","shasum":"04082f0c83d266bc4a9c5051632fefb46d5b6c34","modified":1457749695000},{"_id":"source/img/fastblur/fastblur_20.png","shasum":"0516ef3fc7dd353991431d0ce06e574a170a7b43","modified":1457749489000},{"_id":"source/img/fastblur/fastblur_35.png","shasum":"8ed56cf4cb45e436f3c79d3d2d70763cd81febae","modified":1457749573000},{"_id":"source/img/fastblur/fastblur_50.png","shasum":"db1b1ecd90c506c2fe3cb44e3bdac1167821cb0d","modified":1457749619000},{"_id":"source/img/fastblur/fastblur_10.png","shasum":"8df2d8d76e47bed7600511197b4287bbd864946e","modified":1457749150000},{"_id":"themes/next/source/css/_common/_page/home.styl","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1451481299000},{"_id":"themes/next/source/css/_mixins/Mist.styl","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1451481299000},{"_id":"themes/next/source/css/_mixins/custom.styl","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1451481299000},{"_id":"themes/next/source/css/_mixins/default.styl","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1451481299000},{"_id":"themes/next/source/css/_variables/custom.styl","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1451481299000},{"_id":"source/img/有趣的曲线在Android上的实现/1.png","shasum":"6863d44d483aa141f977fb9d5a38af702b2cf231","modified":1453719149000},{"_id":"source/img/有趣的曲线在Android上的实现/11.png","shasum":"fd0038404392434605fb02142aa6a319f97351bd","modified":1453719345000},{"_id":"source/img/有趣的曲线在Android上的实现/2.png","shasum":"7fff0d4bfe989d410640542f73597c50288bf23a","modified":1453719174000},{"_id":"source/img/有趣的曲线在Android上的实现/6.png","shasum":"4f4156cb8c4c0199120511ff407218b20affb020","modified":1453719317000},{"_id":"themes/next/bower.json","shasum":"4a53cab758c7d69be2ce773b2afff7dd962b7cb0","modified":1451481299000},{"_id":"themes/next/README.en.md","shasum":"565ba52b3825b85a9f05b41183caca7f18b741d4","modified":1451481299000},{"_id":"themes/next/README.md","shasum":"0b709591995001cd860384d6c189e51d91690714","modified":1451481299000},{"_id":"themes/next/_config.yml","shasum":"d916017780880f2e9435290e1059752f8c76bf78","modified":1451481299000},{"_id":"themes/next/languages/de.yml","shasum":"7a8de0e5665c52a1bf168c1e7dd222c8a74fb0ab","modified":1451481299000},{"_id":"themes/next/languages/default.yml","shasum":"f57623e47f533c8d53d859628fa6a368a5298a00","modified":1451481299000},{"_id":"themes/next/languages/en.yml","shasum":"f57623e47f533c8d53d859628fa6a368a5298a00","modified":1451481299000},{"_id":"themes/next/languages/pt.yml","shasum":"8e38fdf3a5232b428d2e4a641666dbabab87c3d1","modified":1451481299000},{"_id":"themes/next/languages/fr-FR.yml","shasum":"2cec663601ac8d178e97aee91d967fa99a95ad4e","modified":1451481299000},{"_id":"themes/next/languages/ru.yml","shasum":"1d1b158f9cff1b38978086043f299b3fc590e007","modified":1451481299000},{"_id":"themes/next/languages/zh-Hans.yml","shasum":"a454bda967dbc97081e23f6b15d4b4c731ca80c1","modified":1451481299000},{"_id":"themes/next/languages/zh-tw.yml","shasum":"42ba1d0c6b6026ba1e613ad11efb75432a8132ac","modified":1451481299000},{"_id":"themes/next/languages/zh-hk.yml","shasum":"248b88c825fde8e35839f3954d38df4e72a0537c","modified":1451481299000},{"_id":"themes/next/layout/_macro/post-collapse.swig","shasum":"9032ae9056cb19b4c2d069d66ead7abf828f9922","modified":1451481299000},{"_id":"themes/next/layout/_macro/post.swig","shasum":"f32eaace2afb0450cf230f96ee8c87f20d6a9072","modified":1451481299000},{"_id":"themes/next/layout/_macro/sidebar.swig","shasum":"88e179ff660874135b17d0febc91d04749053a73","modified":1451481299000},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","shasum":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1451481299000},{"_id":"themes/next/layout/_layout.swig","shasum":"fc953f51e1ab385c25da98c7db7961733d9415c7","modified":1451481299000},{"_id":"themes/next/layout/_partials/comments.swig","shasum":"a612a4eca51ffc87b53a5470b451071a7ad6a031","modified":1451481299000},{"_id":"themes/next/layout/_partials/old-browsers.swig","shasum":"dbbfea810bf3a2ed9c83b9a6683037175aacfc67","modified":1451481299000},{"_id":"themes/next/layout/_partials/footer.swig","shasum":"00a723ae39974b45f42b81e7ba2af638978f0aa7","modified":1451481299000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","shasum":"00c2b49f6289198b0b2b4e157e4ee783277f32a7","modified":1451481299000},{"_id":"themes/next/layout/_partials/header.swig","shasum":"476333c49a1e7e0402a68a826f67527ac258969d","modified":1451481299000},{"_id":"themes/next/layout/_partials/pagination.swig","shasum":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1451481299000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","shasum":"eefe2388ff3d424694045eda21346989b123977c","modified":1451481299000},{"_id":"themes/next/layout/_partials/search.swig","shasum":"64f14da26792a17bc27836c4e9d83190175f36e6","modified":1451481299000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","shasum":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1451481299000},{"_id":"themes/next/layout/_partials/head.swig","shasum":"fcef099c268bd4964e65cfe3109e3fe99d0b925c","modified":1451481299000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","shasum":"63315fcf210799f894208c9f512737096df84962","modified":1451481299000},{"_id":"themes/next/layout/_scripts/analytics/facebook-sdk.swig","shasum":"334176d838ee528e58468d8bc74ff3a6d3f25b2b","modified":1451481299000},{"_id":"themes/next/layout/_scripts/analytics/google-analytics.swig","shasum":"30a23fa7e816496fdec0e932aa42e2d13098a9c2","modified":1451481299000},{"_id":"themes/next/layout/_scripts/analytics.swig","shasum":"33ca06b9bd9a15a19432d5396b85bd319f017319","modified":1451481299000},{"_id":"themes/next/layout/_scripts/analytics/baidu-analytics.swig","shasum":"7c43d66da93cde65b473a7d6db2a86f9a42647d6","modified":1451481299000},{"_id":"themes/next/layout/_scripts/baidushare.swig","shasum":"d726361945437cf6e48067b3dd041b7e36e98d85","modified":1451481299000},{"_id":"themes/next/layout/_scripts/bootstrap.scrollspy.swig","shasum":"85295f126836b95f0837d03e58228bb3cf8c4490","modified":1451481299000},{"_id":"themes/next/layout/_scripts/comments/disqus.swig","shasum":"3491d3cebabc8a28857200db28a1be65aad6adc2","modified":1451481299000},{"_id":"themes/next/layout/_scripts/fancy-box.swig","shasum":"41b4ff1446060c88c33bf666a32277dcf12129f0","modified":1451481299000},{"_id":"themes/next/layout/_scripts/comments/duoshuo.swig","shasum":"44e3d567fd49c2a093f4a0a8af9f00542c935a58","modified":1451481299000},{"_id":"themes/next/layout/_scripts/helpers.swig","shasum":"4d2cbfca0aaf546a2b5813288073e824c1498fdf","modified":1451481299000},{"_id":"themes/next/layout/_scripts/mathjax.swig","shasum":"df03220eb8526e17dc9c9f17780c2d6699367181","modified":1451481299000},{"_id":"themes/next/layout/_scripts/motion.swig","shasum":"0d9761e3b1bb9e666ccc71bad59f035deb5a88c6","modified":1451481299000},{"_id":"themes/next/layout/_scripts/tinysou.swig","shasum":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1451481299000},{"_id":"themes/next/layout/archive.swig","shasum":"0c3ce594759f347ea90a4ce592a7a18e2ae4cc5c","modified":1451481299000},{"_id":"themes/next/layout/category.swig","shasum":"d6b3e1dc5e0b8deade9a084c463126e70188ee9b","modified":1451481299000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","shasum":"7a34b02808f144ee4a11032ae3a149eb634a7e82","modified":1451481299000},{"_id":"themes/next/layout/page.swig","shasum":"8019d02232a6dd1a665b6a4d2daef8e5dd2f0049","modified":1451481299000},{"_id":"themes/next/layout/tag.swig","shasum":"aab44af54fcbc66fea4ad12b2767ffca3eadd451","modified":1451481299000},{"_id":"themes/next/scripts/filters/sticky.js","shasum":"6b1ea0c09105352813357d0fff4e1d3f4c821fa3","modified":1451481299000},{"_id":"themes/next/layout/post.swig","shasum":"a84457e8ced46e63bc7a8a9e0541a6ba53122a92","modified":1451481299000},{"_id":"themes/next/scripts/tags/center-quote.js","shasum":"535fc542781021c4326dec24d8495cbb1387634a","modified":1451481299000},{"_id":"themes/next/scripts/merge-configs.js","shasum":"0c56be2e85c694247cfa327ea6d627b99ca265e8","modified":1451481299000},{"_id":"themes/next/scripts/tags/full-image.js","shasum":"3acce36db0feb11a982c6c799aa6b6b47df2827c","modified":1451481299000},{"_id":"themes/next/layout/index.swig","shasum":"9224ad59d0f0d7d658b384d181100da742d6d097","modified":1451481299000},{"_id":"themes/next/scripts/tags/group-pictures.js","shasum":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1451481299000},{"_id":"themes/next/source/404.html","shasum":"92155185adcc84a9f4e7035a514cd622c379ae89","modified":1451481299000},{"_id":"themes/next/source/css/_common/_component/back-to-top.styl","shasum":"88cd66910260006aa8e9e795df4948d4b67bfa11","modified":1451481299000},{"_id":"themes/next/source/css/_common/_component/buttons.styl","shasum":"81063e0979f04a0f9af37f321d7321dda9abf593","modified":1451481299000},{"_id":"themes/next/source/css/_common/_component/blockquote-center.styl","shasum":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1451481299000},{"_id":"themes/next/source/css/_common/_component/group-pictures.styl","shasum":"1ee40743000173495728855f734081eb2b6167cc","modified":1451481299000},{"_id":"themes/next/source/css/_common/_component/gallery.styl","shasum":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1451481299000},{"_id":"themes/next/source/css/_common/_component/duoshuo.styl","shasum":"2d2da815ab0981b219ea1973a4aedede48801411","modified":1451481299000},{"_id":"themes/next/source/css/_common/_component/posts-collapse.styl","shasum":"6750b61236eb359028da8f2c4765f7c89b03dc9a","modified":1451481299000},{"_id":"themes/next/source/css/_common/_component/comments.styl","shasum":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1451481299000},{"_id":"themes/next/source/css/_common/_component/jiathis.styl","shasum":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1451481299000},{"_id":"themes/next/source/css/_common/_component/pagination.styl","shasum":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1451481299000},{"_id":"themes/next/source/css/_common/_component/posts-expand.styl","shasum":"672d5fa7e5b7642d86a4bda176b501508b54860f","modified":1451481299000},{"_id":"themes/next/source/css/_common/_component/posts-type.styl","shasum":"40b593134bf96d1d6095b3439d47820659d7f10b","modified":1451481299000},{"_id":"themes/next/source/css/_common/_component/posts.styl","shasum":"b05ac51dd266d27f12e39e59a94383fe6474b7b3","modified":1451481299000},{"_id":"themes/next/source/css/_common/_component/tag-cloud.styl","shasum":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1451481299000},{"_id":"themes/next/source/css/_common/_core/base.styl","shasum":"388aa7c69c97728c64941db01e0f29a88837120c","modified":1451481299000},{"_id":"themes/next/source/css/_common/_core/scaffolding.styl","shasum":"1f8acb3331300eec696a09e7859e11f191e16d7f","modified":1451481299000},{"_id":"themes/next/source/css/_common/_core/normalize.styl","shasum":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1451481299000},{"_id":"themes/next/source/css/_common/_core/tables.styl","shasum":"5f766cf26f966dbf9dcfe681f40ab9032e3e8a08","modified":1451481299000},{"_id":"themes/next/source/css/_common/_core/helpers.styl","shasum":"d339d114e52a9abbc797ec236a8a770c29e288a6","modified":1451481299000},{"_id":"themes/next/source/css/_common/_fonts/icon-default.styl","shasum":"8b809aef383bebaeb3f282b47675f3a364ce3569","modified":1451481299000},{"_id":"themes/next/source/css/_common/_fonts/icon-feather.styl","shasum":"80413afacfa656322100ce1900fed1ebcd8f8f44","modified":1451481299000},{"_id":"themes/next/source/css/_common/_fonts/icon-fifty-shades.styl","shasum":"249f75bafa26b99d272352c0646e7497ea680b39","modified":1451481299000},{"_id":"themes/next/source/css/_common/_fonts/icon-font.styl","shasum":"ec3f86739bede393cafcd3e31052c01115ae20d6","modified":1451481299000},{"_id":"themes/next/source/css/_common/_fonts/icon-linecons.styl","shasum":"9cdbedb3627ac941cfb063b152abe5a75c3c699a","modified":1451481299000},{"_id":"themes/next/source/css/_common/_page/archive.styl","shasum":"dff879f55ca65fa79c07e9098719e53eeea7ac88","modified":1451481299000},{"_id":"themes/next/source/css/_common/_page/categories.styl","shasum":"4f696a2eaeee2f214adcf273eab25c62a398077a","modified":1451481299000},{"_id":"themes/next/source/css/_common/_page/post-detail.styl","shasum":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1451481299000},{"_id":"themes/next/source/css/_common/_section/body.styl","shasum":"ca1a4766cbe25baac757c6b47a4858d221afdc40","modified":1451481299000},{"_id":"themes/next/source/css/_common/_section/footer.styl","shasum":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1451481299000},{"_id":"themes/next/source/css/_common/_section/header.styl","shasum":"a6aa8a56f9f645ae5a76a1034f79adf73b053aa0","modified":1451481299000},{"_id":"themes/next/source/css/_common/_section/layout.styl","shasum":"03ae7b808dde9065412968aa69916162e790455d","modified":1451481299000},{"_id":"themes/next/source/css/_common/_section/media.styl","shasum":"fa9809d2ecc753cf32f70803c1d0821c405211f4","modified":1451481299000},{"_id":"themes/next/source/css/_common/_section/sidebar.styl","shasum":"bc106c3e759cd752c2b4c53ac27bc5ef5e3b18ea","modified":1451481299000},{"_id":"themes/next/source/css/_common/_vendor/highlight/highlight.styl","shasum":"6242be4307a3b3dafc14e556f51c8875c41a1ddd","modified":1451481299000},{"_id":"themes/next/source/css/_custom/custom.styl","shasum":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1451481299000},{"_id":"themes/next/source/css/_common/_vendor/highlight/theme.styl","shasum":"ae19721ceee5ba460e131cb2427dae3c1ff39d6f","modified":1451481299000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","shasum":"d50c2a9ae363d26ed2e9bc226a9dc7abeb9ace1b","modified":1451481299000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","shasum":"1631a430655eadb485574d1a9bedd49460988b11","modified":1451481299000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","shasum":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1451481299000},{"_id":"themes/next/source/css/_mixins/base.styl","shasum":"4e49707c99c8bbcfa0a607dfdaff0fbb7dffd2a3","modified":1451481299000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","shasum":"5a8036fc61207ca0fe38c9782ed2f686fbf764be","modified":1451481299000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","shasum":"4303776991ef28f5742ca51c7dffe6f12f0acf34","modified":1451481299000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","shasum":"fc7d96b897290dbd93bc8c515a2058fc4c374ea7","modified":1451481299000},{"_id":"themes/next/source/css/_schemes/default/_logo.styl","shasum":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1451481299000},{"_id":"themes/next/source/css/_schemes/default/index.styl","shasum":"159464cb8a7e01e32db9ec70dec391ec70a72f9c","modified":1451481299000},{"_id":"themes/next/source/css/_variables/Mist.styl","shasum":"9f8791860cc1ca724d2dfe609e8cd6abc44d6926","modified":1451481299000},{"_id":"themes/next/source/css/_schemes/default/_menu.styl","shasum":"4bba29cece65ffc5122f4e052063dea4439fe4ae","modified":1451481299000},{"_id":"themes/next/source/css/_schemes/default/_search.styl","shasum":"c524bccdc554349106d1c8be9c3f275d4c0d4281","modified":1451481299000},{"_id":"themes/next/source/css/_variables/default.styl","shasum":"8ec3307fe42d738b1bbda4b6419d0995f5560222","modified":1451481299000},{"_id":"themes/next/source/css/main.styl","shasum":"56dacee56c5eaa4b2676d196452314fb50f758aa","modified":1451481299000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","shasum":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1451481299000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","shasum":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1451481299000},{"_id":"themes/next/source/images/cc-by-nc.svg","shasum":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1451481299000},{"_id":"themes/next/source/css/_variables/base.styl","shasum":"f532d6b0f961a8f3867c06e132233286f110180d","modified":1451481299000},{"_id":"themes/next/source/images/cc-by-sa.svg","shasum":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1451481299000},{"_id":"themes/next/source/images/cc-by-nd.svg","shasum":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1451481299000},{"_id":"themes/next/source/images/cc-by.svg","shasum":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1451481299000},{"_id":"themes/next/source/images/cc-zero.svg","shasum":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1451481299000},{"_id":"themes/next/source/images/quote-l.svg","shasum":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1451481299000},{"_id":"themes/next/source/images/placeholder.gif","shasum":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1451481299000},{"_id":"themes/next/source/images/loading.gif","shasum":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1451481299000},{"_id":"themes/next/source/images/quote-r.svg","shasum":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1451481299000},{"_id":"themes/next/source/js/bootstrap.js","shasum":"f9b637b6d064f728d7dc2b6b5058a006a4454299","modified":1451481299000},{"_id":"themes/next/source/images/searchicon.png","shasum":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1451481299000},{"_id":"themes/next/source/js/bootstrap.scrollspy.js","shasum":"ae7bdce88b515aade4eea8bf7407eec458bcd625","modified":1451481299000},{"_id":"themes/next/source/js/fancy-box.js","shasum":"b5fa638ed371b5f658b0826ec4afee25d9986ef2","modified":1451481299000},{"_id":"themes/next/source/js/helpers.js","shasum":"c15216ef897334362789ba37464298948b2eef95","modified":1451481299000},{"_id":"themes/next/source/js/hook-duoshuo.js","shasum":"ccb32e0a1acf798337c9697e1aab5484b52f9df4","modified":1451481299000},{"_id":"themes/next/source/js/motion.js","shasum":"b4132517fe499538ad725094593fb7ead8c04bf7","modified":1451481299000},{"_id":"themes/next/source/js/ua-parser.min.js","shasum":"1148fa2bcb8b2e40c31e5f597bf794a57369a2e6","modified":1451481299000},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1451481299000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1451481299000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1451481299000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","shasum":"17df19f97628e77be09c352bf27425faea248251","modified":1451481299000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1451481299000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","shasum":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1451481299000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","shasum":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1451481299000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","shasum":"273b123496a42ba45c3416adb027cd99745058b0","modified":1451481299000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","shasum":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1451481299000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","shasum":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1451481299000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","shasum":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1451481299000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","shasum":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1451481299000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","shasum":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1451481299000},{"_id":"themes/next/source/vendors/fastclick/LICENSE","shasum":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1451481299000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","shasum":"53360764b429c212f424399384417ccc233bb3be","modified":1451481299000},{"_id":"themes/next/source/vendors/fastclick/README.md","shasum":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1451481299000},{"_id":"themes/next/source/vendors/fastclick/bower.json","shasum":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1451481299000},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","shasum":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1451481299000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","shasum":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1451481299000},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","shasum":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1451481299000},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","shasum":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1451481299000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","shasum":"0189d278706509412bac4745f96c83984e1d59f4","modified":1451481299000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","shasum":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1451481299000},{"_id":"themes/next/source/vendors/font-awesome/bower.json","shasum":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1451481299000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","shasum":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1451481299000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","shasum":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1451481299000},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","shasum":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1451481299000},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","shasum":"895d50fa29759af7835256522e9dd7dac597765c","modified":1451481299000},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","shasum":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1451481299000},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","shasum":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1451481299000},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","shasum":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1451481299000},{"_id":"themes/next/source/vendors/velocity/bower.json","shasum":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1451481299000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","shasum":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1451481299000},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","shasum":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1451481299000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","shasum":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1451481299000},{"_id":"themes/next/test/helpers.js","shasum":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1451481299000},{"_id":"themes/next/test/intern.js","shasum":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1451481299000},{"_id":"source/img/有趣的曲线在Android上的实现/7.png","shasum":"c71371378f0f51e3259ab849216fca60b1d466cf","modified":1453718306000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","shasum":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1451481299000},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","shasum":"0112e96f327d413938d37c1693806f468ffdbace","modified":1451481299000},{"_id":"themes/next/source/vendors/jquery/index.js","shasum":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1451481299000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","shasum":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1451481299000},{"_id":"source/img/我的博客.png","shasum":"9239c9f1baa1d5073c98d07186fc791b2b466203","modified":1451481982000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","shasum":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1451481299000},{"_id":"themes/next/source/vendors/velocity/velocity.js","shasum":"e63dc7cea055ca60a95d286f32349d88b10c5a4d","modified":1451481299000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","shasum":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1451481299000},{"_id":"source/img/有趣的曲线在Android上的实现/box.gif","shasum":"bea87ba30f13bc86cf3f141cf4d9dc7bb81dd002","modified":1453650005000},{"_id":"source/img/有趣的曲线在Android上的实现/ring.gif","shasum":"b64e0003275db78257ed4e4df5f4898786fea760","modified":1453649693000},{"_id":"source/img/交大－影/library.jpg","shasum":"1f34b819a61c47596df0bbf5ba3c8fdb3c6edeb6","modified":1451721986000},{"_id":"source/img/交大－影/dom.jpg","shasum":"1414a03d5f7485b0627753581c611b84fa517729","modified":1451721993000},{"_id":"source/img/交大－影/laker.jpg","shasum":"ad8fe5ecb4c54a6a021c6c791c5db95185f8774b","modified":1451721991000},{"_id":"source/img/交大－影/tuya.jpg","shasum":"7c0ebc7343b8b67cb236cdaa3b04500b786f8648","modified":1451721992000},{"_id":"source/img/交大－影/huxiaohe.jpg","shasum":"a98b2882bdbff529ac1ed52cab05b954839c1eff","modified":1451721992000},{"_id":"source/img/交大－影/library_outside.jpg","shasum":"0accbf6acb3d34c9c1fd85ba06638c7cef9c6a39","modified":1451721990000},{"_id":"source/img/交大－影/love.jpg","shasum":"0f6157c87ed87542d84f35270f15d45cfd3483cb","modified":1451721992000},{"_id":"source/img/交大－影/hehua.jpg","shasum":"22559174b84cad1734e19b4765ade413ee13e438","modified":1451721991000},{"_id":"public/vendors/velocity/velocity.ui.min.js","modified":1458052051933,"shasum":"ed5e534cd680a25d8d14429af824f38a2c7d9908"},{"_id":"public/vendors/velocity/velocity.ui.js","modified":1458052051938,"shasum":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df"},{"_id":"public/vendors/velocity/velocity.min.js","modified":1458052051940,"shasum":"2f1afadc12e4cf59ef3b405308d21baa97e739c6"},{"_id":"public/vendors/velocity/velocity.js","modified":1458052051943,"shasum":"9f08181baea0cc0e906703b7e5df9111b9ef3373"},{"_id":"public/vendors/velocity/bower.json","modified":1458052051947,"shasum":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409"},{"_id":"public/vendors/jquery_lazyload/jquery.scrollstop.js","modified":1458052051948,"shasum":"0e9a81785a011c98be5ea821a8ed7d411818cfd1"},{"_id":"public/vendors/jquery_lazyload/jquery.lazyload.js","modified":1458052051949,"shasum":"481fd478650e12b67c201a0ea41e92743f8b45a3"},{"_id":"public/vendors/jquery_lazyload/bower.json","modified":1458052051951,"shasum":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53"},{"_id":"public/vendors/jquery_lazyload/README.html","modified":1458052051966,"shasum":"c593e16f0d63d24b5d3933f3b9297884867ce4a0"},{"_id":"public/vendors/jquery_lazyload/CONTRIBUTING.html","modified":1458052051974,"shasum":"bf8e477ee2d81833cff12572a8a5f61abffc187c"},{"_id":"public/vendors/jquery/index.js","modified":1458052051978,"shasum":"41b4bfbaa96be6d1440db6e78004ade1c134e276"},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff2","modified":1458052051983,"shasum":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea"},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff","modified":1458052051986,"shasum":"507970402e328b2baeb05bde73bf9ded4e2c3a2d"},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.ttf","modified":1458052051988,"shasum":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9"},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.svg","modified":1458052051998,"shasum":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824"},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.eot","modified":1458052052000,"shasum":"b3c2f08e73320135b69c23a3908b87a12053a2f6"},{"_id":"public/vendors/font-awesome/fonts/FontAwesome.otf","modified":1458052052002,"shasum":"0112e96f327d413938d37c1693806f468ffdbace"},{"_id":"public/vendors/font-awesome/css/font-awesome.min.css","modified":1458052052004,"shasum":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22"},{"_id":"public/vendors/font-awesome/css/font-awesome.css.map","modified":1458052052005,"shasum":"0189d278706509412bac4745f96c83984e1d59f4"},{"_id":"public/vendors/font-awesome/css/font-awesome.css","modified":1458052052007,"shasum":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7"},{"_id":"public/vendors/font-awesome/bower.json","modified":1458052052008,"shasum":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad"},{"_id":"public/vendors/font-awesome/HELP-US-OUT.txt","modified":1458052052009,"shasum":"69a4c537d167b68a0ccf1c6febd138aeffca60d6"},{"_id":"public/vendors/fastclick/lib/fastclick.min.js","modified":1458052052011,"shasum":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18"},{"_id":"public/vendors/fastclick/lib/fastclick.js","modified":1458052052012,"shasum":"06cef196733a710e77ad7e386ced6963f092dc55"},{"_id":"public/vendors/fastclick/bower.json","modified":1458052052013,"shasum":"4dcecf83afddba148464d5339c93f6d0aa9f42e9"},{"_id":"public/vendors/fastclick/README.html","modified":1458052052020,"shasum":"5bef8b8758435bc08129f6d374740527a6a9b942"},{"_id":"public/vendors/fastclick/LICENSE","modified":1458052052026,"shasum":"dcd5b6b43095d9e90353a28b09cb269de8d4838e"},{"_id":"public/vendors/fancybox/source/jquery.fancybox.pack.js","modified":1458052052028,"shasum":"53360764b429c212f424399384417ccc233bb3be"},{"_id":"public/vendors/fancybox/source/jquery.fancybox.js","modified":1458052052032,"shasum":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4"},{"_id":"public/vendors/fancybox/source/jquery.fancybox.css","modified":1458052052035,"shasum":"5f163444617b6cf267342f06ac166a237bb62df9"},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1458052052037,"shasum":"53e194f4a72e649c04fb586dd57762b8c022800b"},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1458052052038,"shasum":"4ac329c16a5277592fc12a37cca3d72ca4ec292f"},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":1458052052039,"shasum":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d"},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1458052052040,"shasum":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876"},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1458052052041,"shasum":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8"},{"_id":"public/vendors/fancybox/source/helpers/fancybox_buttons.png","modified":1458052052042,"shasum":"e385b139516c6813dcd64b8fc431c364ceafe5f3"},{"_id":"public/vendors/fancybox/source/fancybox_sprite@2x.png","modified":1458052052045,"shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8"},{"_id":"public/vendors/fancybox/source/fancybox_sprite.png","modified":1458052052048,"shasum":"17df19f97628e77be09c352bf27425faea248251"},{"_id":"public/vendors/fancybox/source/fancybox_overlay.png","modified":1458052052050,"shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0"},{"_id":"public/vendors/fancybox/source/fancybox_loading@2x.gif","modified":1458052052052,"shasum":"273b123496a42ba45c3416adb027cd99745058b0"},{"_id":"public/vendors/fancybox/source/fancybox_loading.gif","modified":1458052052054,"shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c"},{"_id":"public/vendors/fancybox/source/blank.gif","modified":1458052052056,"shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a"},{"_id":"public/js/ua-parser.min.js","modified":1458052052057,"shasum":"1148fa2bcb8b2e40c31e5f597bf794a57369a2e6"},{"_id":"public/js/motion.js","modified":1458052052059,"shasum":"b4132517fe499538ad725094593fb7ead8c04bf7"},{"_id":"public/js/hook-duoshuo.js","modified":1458052052063,"shasum":"eedaf52377991728f1e3e94f2bc4bf23ec41ecea"},{"_id":"public/js/helpers.js","modified":1458052052065,"shasum":"c15216ef897334362789ba37464298948b2eef95"},{"_id":"public/js/fancy-box.js","modified":1458052052066,"shasum":"b5fa638ed371b5f658b0826ec4afee25d9986ef2"},{"_id":"public/js/bootstrap.scrollspy.js","modified":1458052052068,"shasum":"ae7bdce88b515aade4eea8bf7407eec458bcd625"},{"_id":"public/js/bootstrap.js","modified":1458052052069,"shasum":"f9b637b6d064f728d7dc2b6b5058a006a4454299"},{"_id":"public/images/searchicon.png","modified":1458052052070,"shasum":"67727a6a969be0b2659b908518fa6706eed307b8"},{"_id":"public/images/quote-r.svg","modified":1458052052072,"shasum":"e60ae504f9d99b712c793c3740c6b100d057d4ec"},{"_id":"public/images/quote-l.svg","modified":1458052052073,"shasum":"94e870b4c8c48da61d09522196d4dd40e277a98f"},{"_id":"public/images/placeholder.gif","modified":1458052052074,"shasum":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b"},{"_id":"public/images/loading.gif","modified":1458052052075,"shasum":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b"},{"_id":"public/images/cc-zero.svg","modified":1458052052077,"shasum":"87669bf8ac268a91d027a0a4802c92a1473e9030"},{"_id":"public/images/cc-by.svg","modified":1458052052078,"shasum":"28a0a4fe355a974a5e42f68031652b76798d4f7e"},{"_id":"public/images/cc-by-sa.svg","modified":1458052052080,"shasum":"aa4742d733c8af8d38d4c183b8adbdcab045872e"},{"_id":"public/images/cc-by-nd.svg","modified":1458052052082,"shasum":"c563508ce9ced1e66948024ba1153400ac0e0621"},{"_id":"public/images/cc-by-nc.svg","modified":1458052052083,"shasum":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7"},{"_id":"public/images/cc-by-nc-sa.svg","modified":1458052052085,"shasum":"3031be41e8753c70508aa88e84ed8f4f653f157e"},{"_id":"public/images/cc-by-nc-nd.svg","modified":1458052052086,"shasum":"c6524ece3f8039a5f612feaf865d21ec8a794564"},{"_id":"public/css/main.css","modified":1458052052487,"shasum":"7831f7dd4b9108c05366c2b24c93925613b91f0c"},{"_id":"public/404.html","modified":1458052052587,"shasum":"92155185adcc84a9f4e7035a514cd622c379ae89"},{"_id":"public/robots.txt","modified":1458052052589,"shasum":"6123a9417ecb039cb56a5b45c3e0450e30196e35"},{"_id":"public/img/说一说我和博客.jpg","modified":1458052052592,"shasum":"0dee97f7d6615ad884b262e82982db52b2a29358"},{"_id":"public/img/有趣的曲线在Android上的实现/ring.gif","modified":1458052052598,"shasum":"b64e0003275db78257ed4e4df5f4898786fea760"},{"_id":"public/img/有趣的曲线在Android上的实现/box.gif","modified":1458052052608,"shasum":"bea87ba30f13bc86cf3f141cf4d9dc7bb81dd002"},{"_id":"public/img/有趣的曲线在Android上的实现/9.jpg","modified":1458052052612,"shasum":"02f5f09e3607c7421b0e3c35fb644cc1b32986a6"},{"_id":"public/img/有趣的曲线在Android上的实现/8.png","modified":1458052052614,"shasum":"8556f52be9972440d4460018133ccb3a4dfbcf5e"},{"_id":"public/img/有趣的曲线在Android上的实现/7.png","modified":1458052052617,"shasum":"c71371378f0f51e3259ab849216fca60b1d466cf"},{"_id":"public/img/有趣的曲线在Android上的实现/6.png","modified":1458052052621,"shasum":"4f4156cb8c4c0199120511ff407218b20affb020"},{"_id":"public/img/有趣的曲线在Android上的实现/5.png","modified":1458052052624,"shasum":"b3b915d72a8c9611c39b0bb12015f2757df2046f"},{"_id":"public/img/有趣的曲线在Android上的实现/4.png","modified":1458052052626,"shasum":"a54df53b47e84f7b452f8393b6b93ccb32721d08"},{"_id":"public/img/有趣的曲线在Android上的实现/3.png","modified":1458052052628,"shasum":"03d2eb9ef532d6b5606d89cf6c21748c317087ca"},{"_id":"public/img/有趣的曲线在Android上的实现/2.png","modified":1458052052630,"shasum":"7fff0d4bfe989d410640542f73597c50288bf23a"},{"_id":"public/img/有趣的曲线在Android上的实现/11.png","modified":1458052052636,"shasum":"fd0038404392434605fb02142aa6a319f97351bd"},{"_id":"public/img/有趣的曲线在Android上的实现/10.png","modified":1458052052639,"shasum":"901a86dc68fdb1e8c8d7e2c2ed30c03b73d565f8"},{"_id":"public/img/有趣的曲线在Android上的实现/1.png","modified":1458052052643,"shasum":"6863d44d483aa141f977fb9d5a38af702b2cf231"},{"_id":"public/img/我的博客.png","modified":1458052052647,"shasum":"9239c9f1baa1d5073c98d07186fc791b2b466203"},{"_id":"public/img/域名解析.png","modified":1458052052649,"shasum":"e3cd6594465e22ed3b2a872e1b63212862097011"},{"_id":"public/img/交大－影/tuya.jpg","modified":1458052052661,"shasum":"7c0ebc7343b8b67cb236cdaa3b04500b786f8648"},{"_id":"public/img/交大－影/love.jpg","modified":1458052052677,"shasum":"0f6157c87ed87542d84f35270f15d45cfd3483cb"},{"_id":"public/img/交大－影/library_outside.jpg","modified":1458052052689,"shasum":"0accbf6acb3d34c9c1fd85ba06638c7cef9c6a39"},{"_id":"public/img/交大－影/library.jpg","modified":1458052052702,"shasum":"1f34b819a61c47596df0bbf5ba3c8fdb3c6edeb6"},{"_id":"public/img/交大－影/laker.jpg","modified":1458052052715,"shasum":"ad8fe5ecb4c54a6a021c6c791c5db95185f8774b"},{"_id":"public/img/交大－影/huxiaohe.jpg","modified":1458052052736,"shasum":"a98b2882bdbff529ac1ed52cab05b954839c1eff"},{"_id":"public/img/交大－影/hehua.jpg","modified":1458052052767,"shasum":"22559174b84cad1734e19b4765ade413ee13e438"},{"_id":"public/img/交大－影/dom.jpg","modified":1458052052781,"shasum":"1414a03d5f7485b0627753581c611b84fa517729"},{"_id":"public/img/hey_folks.jpg","modified":1458052052788,"shasum":"b0a05bc1ed1669615ead2c5c9b7947f2b0d3968c"},{"_id":"public/img/hexo目录.png","modified":1458052052790,"shasum":"826cebfed96a6407234bf963baf6921c398195e1"},{"_id":"public/img/fastblur/timeconsume_statisic.png","modified":1458052052791,"shasum":"bbff7161a608a488990613a9df5de6dcbf9162f9"},{"_id":"public/img/fastblur/test_pic.jpeg","modified":1458052052794,"shasum":"19ca9f388ab26da2c071841baab3868bfba15569"},{"_id":"public/img/fastblur/memory_50.png","modified":1458052052796,"shasum":"62b94351e2d50d256e83ec7ec3a854e084bceade"},{"_id":"public/img/fastblur/memory_300.png","modified":1458052052797,"shasum":"89d3356a32b32962d364f83d5d82f6a8d7d83333"},{"_id":"public/img/fastblur/memory_200.png","modified":1458052052799,"shasum":"2a07afd6a2443e17461839dded0c279e8822d86b"},{"_id":"public/img/fastblur/memory_20.png","modified":1458052052801,"shasum":"db301fb4b555e31a64a77f4b1286310ea267ca58"},{"_id":"public/img/fastblur/memory_100.png","modified":1458052052803,"shasum":"3232f11fdac327635a82e22f009b776030c3bc89"},{"_id":"public/img/fastblur/memory_10.png","modified":1458052052805,"shasum":"935d56271c8d9304161cbcf5405b8a1ee0e87062"},{"_id":"public/img/fastblur/memory_1.png","modified":1458052052807,"shasum":"14e397afa644bcf3dac11daabd988cca961ad5d8"},{"_id":"public/img/fastblur/iosblur.jpg","modified":1458052052808,"shasum":"b7aad38c394a049c45cc60ddee04f916479d9ddc"},{"_id":"public/img/fastblur/fastblur_50.png","modified":1458052052812,"shasum":"db1b1ecd90c506c2fe3cb44e3bdac1167821cb0d"},{"_id":"public/img/fastblur/fastblur_35.png","modified":1458052052821,"shasum":"8ed56cf4cb45e436f3c79d3d2d70763cd81febae"},{"_id":"public/img/fastblur/fastblur_20.png","modified":1458052052824,"shasum":"0516ef3fc7dd353991431d0ce06e574a170a7b43"},{"_id":"public/img/fastblur/fastblur_100.png","modified":1458052052827,"shasum":"04082f0c83d266bc4a9c5051632fefb46d5b6c34"},{"_id":"public/img/fastblur/fastblur_10.png","modified":1458052052839,"shasum":"8df2d8d76e47bed7600511197b4287bbd864946e"},{"_id":"public/img/fastblur/androidblur_2.png","modified":1458052052841,"shasum":"6ea9cc7a4ce5338c9de262e064b129829d2d877a"},{"_id":"public/img/fastblur/androidblur_1.png","modified":1458052052843,"shasum":"dfc1003232f2bc079ad507ad9fd29e37aba3dc5e"},{"_id":"public/img/Disqus评论系统.png","modified":1458052052845,"shasum":"e313d38101a7a49f717ff8964c9d125eef3b284d"},{"_id":"public/favicon.ico","modified":1458052052846,"shasum":"bb38565775f52af7d2f1f0187ed9972a7b4f09a1"},{"_id":"public/tags/index.html","modified":1458052362074,"shasum":"48f5666a73a66681938d8f60fcc1a8c77d925d08"},{"_id":"public/guestbook/index.html","modified":1458052362113,"shasum":"cc64344f5b429bcb00c737fc8dfccea686f7c613"},{"_id":"public/2016/03/12/一种快速毛玻璃虚化效果实现/index.html","modified":1458054419333,"shasum":"235b8cea0938cb5854369f4f136d9ffb57729d10"},{"_id":"public/2016/02/20/计划清单/index.html","modified":1458052362343,"shasum":"7ee8926b7321fcd1f4009a542dc699f4968cb283"},{"_id":"public/2016/02/19/今年之计/index.html","modified":1458052362399,"shasum":"7043ee4e4feff58b39c4c7aefd651840d71aa3db"},{"_id":"public/2016/01/25/有趣的曲线在Android上的实现/index.html","modified":1458052362455,"shasum":"7f6993525b855c85c1bdac3d2894e6d8e0982ff4"},{"_id":"public/2016/01/02/交大－影/index.html","modified":1458052362506,"shasum":"c526261990a3713446b5b38e4b0b335a0248e634"},{"_id":"public/2015/12/29/我与代码的相知相遇/index.html","modified":1458052362584,"shasum":"5827e6a8c102b218330b42ae30e927a92d628c58"},{"_id":"public/2015/12/07/如何在一天之内搭建以你自己名字为域名的很cool的个人博客/index.html","modified":1458054419686,"shasum":"399deef143dca385994f501077c1f59fe1d3ef7a"},{"_id":"public/2015/12/06/说一说博客/index.html","modified":1458052362682,"shasum":"c5ebc3491837d1e534ca3c1ec4b1cc2f094ae9e7"},{"_id":"public/2015/12/05/Hey folks/index.html","modified":1458052362723,"shasum":"d0391328c49e75dc620f2968e77f6d10083eba2e"},{"_id":"public/archives/index.html","modified":1458052362771,"shasum":"7bc9b25c155310a18ba78541a0fc3b78075d8209"},{"_id":"public/archives/2015/index.html","modified":1458052362804,"shasum":"d88f210fd249c53be8d07a75319d333a9b9a40c4"},{"_id":"public/archives/2015/12/index.html","modified":1458052362846,"shasum":"dd41cb38d98775d5341ecc25a6ec1be041603d29"},{"_id":"public/archives/2016/index.html","modified":1458052362884,"shasum":"eb45cc086bd14616ede0608a40606c20bd5ea102"},{"_id":"public/archives/2016/01/index.html","modified":1458052362917,"shasum":"e48c938b3b822a6b3828892992a4a9a1a7611d5a"},{"_id":"public/archives/2016/02/index.html","modified":1458052362954,"shasum":"e49c6e444a7c1631789c5f286f566cb4d83cf78f"},{"_id":"public/archives/2016/03/index.html","modified":1458052362984,"shasum":"818d4997959ab0d4ed1066dafbf3e811bc93969d"},{"_id":"public/index.html","modified":1458054420068,"shasum":"132be97800258969855b1cdbc9c8b488e0de9bb4"},{"_id":"public/CNAME","modified":1458052053774,"shasum":"b6e903c363301141338985b51e3d46181253afe6"},{"_id":"public/tags/随笔/index.html","modified":1458052363021,"shasum":"9962da1f2fe0cd11d17ab3423ca2c82d1378aaf4"},{"_id":"public/tags/cool/index.html","modified":1458052363051,"shasum":"42d2bd46c8e99434cd07161ac579af8527f88a54"},{"_id":"public/tags/动效/index.html","modified":1458052363080,"shasum":"f9c7849541f2a55427180f64f1dc98bcc31933af"},{"_id":"public/tags/Goodbye2015-Hi-2016/index.html","modified":1458052363113,"shasum":"3a618647adf969324b5fba334c557b0240716084"},{"_id":"public/tags/一天变cool-系列/index.html","modified":1458052363145,"shasum":"ebaa04f00da1efaa8240037f2843f5bd63bbb59d"},{"_id":"public/tags/个人博客/index.html","modified":1458052363173,"shasum":"39bf9736203af6cd6af72dc0973b4f2344e58e91"},{"_id":"public/tags/学习计划/index.html","modified":1458052363208,"shasum":"5263010f092689726a3c23a9302c110ed1ca36e2"},{"_id":"public/tags/摄影/index.html","modified":1458052363235,"shasum":"6f32f81b24b6ed7e479f1faeb1d1681150a66837"},{"_id":"public/tags/Android/index.html","modified":1458052363265,"shasum":"b399d0e562a6c85b374b84d70090817b4fece1ec"},{"_id":"public/tags/welcome/index.html","modified":1458052363301,"shasum":"70a0f4839cf4b2f9f932d36eeff698c0c8054ecf"},{"_id":"public/2016/03/15/30条Android开发建议/index.html","modified":1458054419273,"shasum":"9ad5b26815126feef19ee082a31afb56025fe57d"}],"Category":[],"Data":[],"Page":[{"title":"tags","date":"2015-12-05T11:50:21.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"title: tags\ndate: 2015-12-05 19:50:21\ntype: \"tags\"\ncomments: false\n---\n","updated":"2015-12-30T13:26:22.000Z","path":"tags/index.html","layout":"page","_id":"ciltijn130000z6yxr4tletn7"},{"title":"guestbook","date":"2015-12-05T11:21:08.000Z","_content":"","source":"guestbook/index.md","raw":"title: guestbook\ndate: 2015-12-05 19:21:08\n---\n","updated":"2015-12-30T13:26:22.000Z","path":"guestbook/index.html","comments":1,"layout":"page","_id":"ciltijn1b0001z6yx7meeci50"}],"Post":[{"title":"说一说我和博客","date":"2015-12-06T13:39:28.000Z","_content":"\n![说一说我和博客](/img/说一说我和博客.jpg)\n\n## 我和博客的那些事\n一直以来在各种平台上写过博客。\n\n最早在新浪、博客园。那时的博客是以笔记摘要为主，看一本书，摘抄几句话，即成一文。写多了，慢慢感觉意义不大，也极少回顾。或者说，写那些博客没有个人的思考，故果断弃之。\n\n然后，开始在[简书](http://www.jianshu.com/users/da333fd63fe5/latest_articles)上写，逐渐记录自己的思考和技术为主，如在学习Android中对系统机制的思考和总结。在简书上也偶有佳作得到大家的喜欢，比如[如何在一天之内完成一款具备cool属性的Android产品](http://www.jianshu.com/p/cf496fc408b2)、[如何阅读Android系统源码－收藏必备](http://www.jianshu.com/p/b3580904d298)。这也激励了我更加努力并分享出更多优质的原创内容。另外，最近也开通了Medium博客平台，不过那上面主要写英文文章，此不细讲。\n\n然后，就是大家看到的个人博客网站。前夜，洗澡后头发没干，就乘机坐在被窝里搭了自己的博客。以前觉得个人博客和简书这类公共博客没什么差异，不过现在却发觉个人博客令人思想更自由，可以记录一切，更不怕随着博客平台的更换而丢失。\n\n<!-- more -->\n\n## 介绍下我的博客\n介绍博客之前，要先麻烦朋友记住一个名字：wingjay。为什么要记住它呢，因为域名是：wingjay.com啊！哈哈（冷）。\n\n目前我的博客内容是同时挂载在两个地方GitHub、GitCafe以同时支持两个域名访问。在此我要感谢这二位，让我省去一笔购买服务器的开销，也同时保证了国内国外都能正常访问。\n\n我的博客主要会包括**技术、艺术和思考**。\n\n - 技术，有两种。一是自己工作中接触到的技术如Android和服务器开发。另一种是自己认为很cool的技术，难道不是每个有追求的人都希望自己变得更cool吗？\n - 艺术，讲不清，包含很多。比如美好的移动设计或工业设计，比如一组让人心静的摄影作品，比如一杯凛冽粗暴的伏特加。这些都是我心中的艺术。\n - 思考，同样讲不清。不过我可以肯定的是，我的博客里每个文字都会出自自己的思考。比如对大爷大妈手牵手的思考，比如对某水果台各类脑残剧和琅琊榜对比的思考，比如对Google和Apple之争的思考。太多了。\n\n## 我为什么要写作\n我认为有两点。\n\n1. 博客是程序员的简历之一。对程序员而言，大多数人都是通过你的博客来认识你。而且，多写博客能促使我们去专研问题并与人分享，同时通过他人反馈来改善自我。\n2. 热爱。通过写作，我们可以记录思考，记录生活，记录技术成长。这难道不是一件很正能量的事情吗？\n\n## 我的写作风格\n简单，直接，文艺\n\n\n\n\n逗逼\n","source":"_posts/说一说博客.md","raw":"title: 说一说我和博客\ndate: 2015-12-06 21:39:28\ntags: 随笔\n---\n\n![说一说我和博客](/img/说一说我和博客.jpg)\n\n## 我和博客的那些事\n一直以来在各种平台上写过博客。\n\n最早在新浪、博客园。那时的博客是以笔记摘要为主，看一本书，摘抄几句话，即成一文。写多了，慢慢感觉意义不大，也极少回顾。或者说，写那些博客没有个人的思考，故果断弃之。\n\n然后，开始在[简书](http://www.jianshu.com/users/da333fd63fe5/latest_articles)上写，逐渐记录自己的思考和技术为主，如在学习Android中对系统机制的思考和总结。在简书上也偶有佳作得到大家的喜欢，比如[如何在一天之内完成一款具备cool属性的Android产品](http://www.jianshu.com/p/cf496fc408b2)、[如何阅读Android系统源码－收藏必备](http://www.jianshu.com/p/b3580904d298)。这也激励了我更加努力并分享出更多优质的原创内容。另外，最近也开通了Medium博客平台，不过那上面主要写英文文章，此不细讲。\n\n然后，就是大家看到的个人博客网站。前夜，洗澡后头发没干，就乘机坐在被窝里搭了自己的博客。以前觉得个人博客和简书这类公共博客没什么差异，不过现在却发觉个人博客令人思想更自由，可以记录一切，更不怕随着博客平台的更换而丢失。\n\n<!-- more -->\n\n## 介绍下我的博客\n介绍博客之前，要先麻烦朋友记住一个名字：wingjay。为什么要记住它呢，因为域名是：wingjay.com啊！哈哈（冷）。\n\n目前我的博客内容是同时挂载在两个地方GitHub、GitCafe以同时支持两个域名访问。在此我要感谢这二位，让我省去一笔购买服务器的开销，也同时保证了国内国外都能正常访问。\n\n我的博客主要会包括**技术、艺术和思考**。\n\n - 技术，有两种。一是自己工作中接触到的技术如Android和服务器开发。另一种是自己认为很cool的技术，难道不是每个有追求的人都希望自己变得更cool吗？\n - 艺术，讲不清，包含很多。比如美好的移动设计或工业设计，比如一组让人心静的摄影作品，比如一杯凛冽粗暴的伏特加。这些都是我心中的艺术。\n - 思考，同样讲不清。不过我可以肯定的是，我的博客里每个文字都会出自自己的思考。比如对大爷大妈手牵手的思考，比如对某水果台各类脑残剧和琅琊榜对比的思考，比如对Google和Apple之争的思考。太多了。\n\n## 我为什么要写作\n我认为有两点。\n\n1. 博客是程序员的简历之一。对程序员而言，大多数人都是通过你的博客来认识你。而且，多写博客能促使我们去专研问题并与人分享，同时通过他人反馈来改善自我。\n2. 热爱。通过写作，我们可以记录思考，记录生活，记录技术成长。这难道不是一件很正能量的事情吗？\n\n## 我的写作风格\n简单，直接，文艺\n\n\n\n\n逗逼\n","slug":"说一说博客","published":1,"updated":"2015-12-30T13:26:22.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciltijn1e0002z6yx8x9dcrce","sticky":0},{"title":"计划清单","date":"2016-02-20T11:09:52.000Z","_content":"![](https://drscdn.500px.org/photo/78381677/q%3D80_m%3D2000/fdcff9445034ced1fe48fd5f956a124e)\n\n本文长期更新，主要给自己用来记录计划要做的事项。\n\n<!-- more -->\n\n## 开源\n1. Android Fab\n\n2. 弹幕——好奇心日报\n\n## 博客\n1. Android - Drawable与bitmap、canvas、paint的关系\n2. SparseArray vs. HashMap LruCache on Android platform\n3. 100 Days of Google Dev series & Google I/O\n已完成：\n02 The Magic of LRU Cache\n进行中：\n65 Fun with ArrayMaps\n79 SparseArray Family Ties\n51 Smaller Pixel Formats\n59 Smaller PNG Files\n61 Android Development Patterns\n62 Re-using Bitmaps\n64 Android Performance Patterns – Performance Anxiety\n86 The price of ENUMs\n93 Double Layout Taxation\n100 Trimming and Sharing Memory\n排队：\n03 Google Play Services 7.5\n04 Push Notifications on the Open Web to increase engagement\n09 Using LINT for Performance Tips\n10 Supercharging page load\n11 Fingerprint and payments APIs\n12 Store Listing Experiments for Google Play\n16 Hidden Cost of Transparency\n17 Analyzing your App with Google Analytics\n20 New APIs in M for Android for Work\n21 Google Search for Developers\n23 Avoiding Allocations in onDraw()\n30 Strict Mode\n32 Promote your Apps with Google AdWords\n37 Custom Views and Performance\n38 Google’s International Fonts Noto\n41 Build a video chat app for Android, iOS and the Web\n44 Batching Background Work Until Later\n48 Introduction to the Physical Web\n72 Beware Autoboxing\n74 Google Play services 7.8\n75 Chat with Heidi Dohse about Cloud in Healthcare\n81 Introducing Face Detection in the Google Vision APIs\n88 Use WordPress APIs and Android Volley to build native apps\n89 Docker and Containers\n90 Developing for Android 6.0 Marshmallow\n95 Learn how to scale your applications with Google Compute Engine\n96 Chat with Sunil Vemuri about OK, Google\nhttps://www.youtube.com/watch?v=R5ON3iwx78M&index=2&list=PLOU2XLYxmsIJDPXCTt5TLDu67271PruEk\nhttp://www.ithome.com.tw/news/98805\nhttps://www.udacity.com/google\n\n4. Udacity TensorFlow by Google\n\n## idea\n1. 学习leancloud搭建后台，使用python flask，参考\nhttp://drakeet.me/leancloud-engine-guide\nhttp://drakeet.me/create-telegram-bot-with-python\n2. 开发个人微信公众号","source":"_posts/计划清单.md","raw":"title: 计划清单\ndate: 2016-02-20 19:09:52\ntags:\n---\n![](https://drscdn.500px.org/photo/78381677/q%3D80_m%3D2000/fdcff9445034ced1fe48fd5f956a124e)\n\n本文长期更新，主要给自己用来记录计划要做的事项。\n\n<!-- more -->\n\n## 开源\n1. Android Fab\n\n2. 弹幕——好奇心日报\n\n## 博客\n1. Android - Drawable与bitmap、canvas、paint的关系\n2. SparseArray vs. HashMap LruCache on Android platform\n3. 100 Days of Google Dev series & Google I/O\n已完成：\n02 The Magic of LRU Cache\n进行中：\n65 Fun with ArrayMaps\n79 SparseArray Family Ties\n51 Smaller Pixel Formats\n59 Smaller PNG Files\n61 Android Development Patterns\n62 Re-using Bitmaps\n64 Android Performance Patterns – Performance Anxiety\n86 The price of ENUMs\n93 Double Layout Taxation\n100 Trimming and Sharing Memory\n排队：\n03 Google Play Services 7.5\n04 Push Notifications on the Open Web to increase engagement\n09 Using LINT for Performance Tips\n10 Supercharging page load\n11 Fingerprint and payments APIs\n12 Store Listing Experiments for Google Play\n16 Hidden Cost of Transparency\n17 Analyzing your App with Google Analytics\n20 New APIs in M for Android for Work\n21 Google Search for Developers\n23 Avoiding Allocations in onDraw()\n30 Strict Mode\n32 Promote your Apps with Google AdWords\n37 Custom Views and Performance\n38 Google’s International Fonts Noto\n41 Build a video chat app for Android, iOS and the Web\n44 Batching Background Work Until Later\n48 Introduction to the Physical Web\n72 Beware Autoboxing\n74 Google Play services 7.8\n75 Chat with Heidi Dohse about Cloud in Healthcare\n81 Introducing Face Detection in the Google Vision APIs\n88 Use WordPress APIs and Android Volley to build native apps\n89 Docker and Containers\n90 Developing for Android 6.0 Marshmallow\n95 Learn how to scale your applications with Google Compute Engine\n96 Chat with Sunil Vemuri about OK, Google\nhttps://www.youtube.com/watch?v=R5ON3iwx78M&index=2&list=PLOU2XLYxmsIJDPXCTt5TLDu67271PruEk\nhttp://www.ithome.com.tw/news/98805\nhttps://www.udacity.com/google\n\n4. Udacity TensorFlow by Google\n\n## idea\n1. 学习leancloud搭建后台，使用python flask，参考\nhttp://drakeet.me/leancloud-engine-guide\nhttp://drakeet.me/create-telegram-bot-with-python\n2. 开发个人微信公众号","slug":"计划清单","published":1,"updated":"2016-02-22T07:37:15.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciltijn1l0005z6yxjil3hqom","sticky":0},{"title":"有趣的曲线在Android上的实现","date":"2016-01-25T10:41:43.000Z","_content":"\n直接上图：\n![ring](/img/有趣的曲线在Android上的实现/7.png)\n\n几日前在OF Course公众号看到一篇蛮有意思的文章－[简单法则的魅力](http://mp.weixin.qq.com/s?__biz=MzA4NTc5MDU5OQ==&mid=411441608&idx=1&sn=5e846a882f58a7ba1b5312bdbeaafccf&scene=23&srcid=0120GiYhMXjmNDoN9MFQj7f5#rd)，觉得里面的动效很有意思，能够基于简单的数学法则通过修改几个参数便画出千变万化的优美的曲线，实在有趣。而且这篇文章里还给出了代码，简直给力。\n\n于是忍不住，自己动手实现了一下，动态效果图如图，下面给出本人随意得出的其它曲线。\n\n<!-- more -->\n\n![ring](/img/有趣的曲线在Android上的实现/ring.gif)\n![ring](/img/有趣的曲线在Android上的实现/box.gif)\n![ring](/img/有趣的曲线在Android上的实现/1.png)\n![ring](/img/有趣的曲线在Android上的实现/2.png)\n![ring](/img/有趣的曲线在Android上的实现/3.png)\n![ring](/img/有趣的曲线在Android上的实现/4.png)\n![ring](/img/有趣的曲线在Android上的实现/5.png)\n![ring](/img/有趣的曲线在Android上的实现/6.png)\n![ring](/img/有趣的曲线在Android上的实现/7.png)\n![ring](/img/有趣的曲线在Android上的实现/8.png)\n![ring](/img/有趣的曲线在Android上的实现/9.jpg)\n![ring](/img/有趣的曲线在Android上的实现/10.png)\n![ring](/img/有趣的曲线在Android上的实现/11.png)","source":"_posts/有趣的曲线在Android上的实现.md","raw":"title: 有趣的曲线在Android上的实现\ntags:\n  - cool\n  - 动效\ndate: 2016-01-25 18:41:43\n---\n\n直接上图：\n![ring](/img/有趣的曲线在Android上的实现/7.png)\n\n几日前在OF Course公众号看到一篇蛮有意思的文章－[简单法则的魅力](http://mp.weixin.qq.com/s?__biz=MzA4NTc5MDU5OQ==&mid=411441608&idx=1&sn=5e846a882f58a7ba1b5312bdbeaafccf&scene=23&srcid=0120GiYhMXjmNDoN9MFQj7f5#rd)，觉得里面的动效很有意思，能够基于简单的数学法则通过修改几个参数便画出千变万化的优美的曲线，实在有趣。而且这篇文章里还给出了代码，简直给力。\n\n于是忍不住，自己动手实现了一下，动态效果图如图，下面给出本人随意得出的其它曲线。\n\n<!-- more -->\n\n![ring](/img/有趣的曲线在Android上的实现/ring.gif)\n![ring](/img/有趣的曲线在Android上的实现/box.gif)\n![ring](/img/有趣的曲线在Android上的实现/1.png)\n![ring](/img/有趣的曲线在Android上的实现/2.png)\n![ring](/img/有趣的曲线在Android上的实现/3.png)\n![ring](/img/有趣的曲线在Android上的实现/4.png)\n![ring](/img/有趣的曲线在Android上的实现/5.png)\n![ring](/img/有趣的曲线在Android上的实现/6.png)\n![ring](/img/有趣的曲线在Android上的实现/7.png)\n![ring](/img/有趣的曲线在Android上的实现/8.png)\n![ring](/img/有趣的曲线在Android上的实现/9.jpg)\n![ring](/img/有趣的曲线在Android上的实现/10.png)\n![ring](/img/有趣的曲线在Android上的实现/11.png)","slug":"有趣的曲线在Android上的实现","published":1,"updated":"2016-01-25T10:47:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciltijn1n0006z6yxalka812k","sticky":0},{"title":"我与代码的相知相遇","date":"2015-12-28T16:12:45.000Z","_content":"![](https://drscdn.500px.org/photo/3706985/m%3D2048/d9cba44c9d66f27d27e1628fa7f4606c)\n\nHi，我是wingjay\n------------------------------------------------------------------\n大家好，我是[《如何在一天之内搭建以你自己名字为域名且具备cool属性的个人博客》](http://www.jianshu.com/p/99665608d295)、[如何在一天之内完成一款具备cool属性的Android产品<简诗>](http://www.jianshu.com/p/cf496fc408b2)的作者[wingjay](https://github.com/wingjay)，今天抽空来和大家一起告别2015，迎接新的技术成长的一年。\n\n\n再过半年，我就要从交大硕士毕业了。\n------------------------------------------------------------------\n2013年9月入学交大，自动化小硕，从没想过未来会从事计算机相关行业，因为对于编程我唯一的背景就是大二那年的C语言课程。\n\n我是怎么开始对编程感兴趣的？不记得了，也不会有人关心。只知道那时逢人就介绍智能手机的硬件配置多么发烧，喜欢调侃小米的成功哲学，也跟风追着“大数据”和“云计算”这两朵云奔跑。\n\n慢慢的，觉得搞计算机的人很酷。\n\n那时，我正式入学。\n\n<!-- more -->\n\n也在那时，我缠着父母给我买了一款手机－小米2s。我记得我对着这款手机盯了快半个小时，乐的。\n\n然后开启了两年的研究生生涯。\n\n没有我想象的顺利，但也没有我想象的不堪。\n\n用两句话来概括这两年吧：\n\n1. 第一年我把除了马克思之外所有的课都认真学了一遍，还选修了诸如机器学习、模式识别和数据挖掘等课程，这一年，感觉踏实。\n\n2. 第二年，30%的时间去提心吊胆地帮导师干杂活；70%的时间背着导师更加提心吊胆地去学习编程，这一年，以为自己会消沉，后来没有。\n\n自学编程的那些日子\n------------------------------------------------------------------\n还是那句话，现在吃的苦，都是当年专业没选计算机时脑子进的水。\n\n2014年初，作为一名只会C语言的我而言，真正开始自学计算机，依次经历了以下几步：\n\n1. 14年3月，师兄说要学编程，先学基础。于是我过了一遍数据结构和操作系统的书，过的比较粗略；\n\n2. 14年4月，想学Android开发，在网上发现了Mars的教程视频。于是我每天只要有空就背着导师偷偷看视频，做笔记。学习Android的同时也顺带着学了些Java的知识。每天晚上还会在新浪博客或博客园上把自己的笔记记录上去，虽然这种做法并没什么作用，但那时觉得很happy。\n\n3. 14年6月，视频自学效果不佳，我非常苦恼。那时我非常希望有人能够来帮帮我这个新手，同时我每天去寻找实践的机会。要知道，作为一名研究生，导师每天管着你，不能放开学，很不爽的。不过，上天眷顾，我终于找到一份校内实习，技术开发，离实验室又近，每天还有80元的工资，天，那几天我感觉我复活了！\n\n4. 14年6月中到11月，开始学习网站开发。校内实习启动，我过上了白天实验室，晚上工作室的日子了。工作室四个人，两个大牛，两个菜鸟，我当然是后者。6月到11月，我饥渴地学习！开始做网站，前端、后端、数据库。这半年我差不多每天是白天在实验室干完活之后晚上去写代码，半年下来，差不多把前端的html、css、js和一些框架Bootstrap、jQuery等，后端的php，和如thinkphp等框架，还有数据库MySQL、MongoDB都学了一通。空闲时也自己配置过服务器，搭建自己的网站。\n\n5. 15年3月到5月，算是开始了Android开发学习之路吧。15年，也就是今年，三月开学时，工作室里两个人离开了，一个是被导师抓走干活了，另一个大三的准备毕业了。于是工作室就只剩我和一位大牛。说实话，有点寂寞，但我的热情并没有减少。相反，我仍旧专注于Android的开发和学习。实验室方面，到了今年，反而轻松了些，每天上午和晚上在工作室，下午跑回实验室蹲班。另外在实际的开发中，我发现以前视频学的东西和实际应用相差很大，可能那些更基础吧，总之我几乎又是从零开始去学习，从项目中自学。\n\n6. 15年5月，我学了近三个月的Android开发，虽然工作室另一位大牛偶尔会帮我，但多数时候还是我一头人默默对着电脑学习、研究和修bug。不过好歹这几个月时间把工作室之前的一款Android应用重新写了一遍，每天晚上学到深夜，冒着寒风骑车回宿舍的场景我记得清楚。最后开发完的应用，工作室的指导老师很满意，我也对自己比较满意。\n\n7. 15年5月中到6月，工作室只剩我一人了。我没有想到，在六月某一天，工作室的顶梁柱大牛说要去北京微软亚研院实习了，意味着整个工作室从最初的四个人只剩下我一个了。那时，我真感觉到有点孤单，看着身边做技术的小伙伴依次离开，到最后竟然只剩我自己一人。不过，我还是照常来工作室开发Android、学习，不过，这时只能一人去食堂吃饭，遇到问题也再没有人来指导，完全靠自己。\n\n8. 15年6月初，迷茫地寻找校外实习。我独自在工作室开发近一个月后，由于即将面临毕业，于是也开始寻找实习。那时摆在我眼前有两条路，大公司；创业公司。对我个人而言，我是追求技术成长的，不希望自己受限于某种技术，所以害怕大公司那种只让我一直从事某个项目的某个方面。所以在我心里，虽知大公司稳妥，但我更偏心于创业型公司。另外我也希望提高自己的英语，也希望有还不错的待遇，希望未来有好的职业发展规划。很多的希望，让我很迷茫，不知道能不能找到真正适合自己的企业。\n\n9. 15年6月中，确定实习公司Glow, 正式离开工作室。终于，我也要离开这个伴随我技术成长的地方了。这期间，我参加了一些公司的面试。大小公司都有，也拿到不少开发岗offer。当然，最后我选择了目前我所在的这家硅谷创业公司－－Glow。说到Glow，我就觉得有缘。一年前，我被Glow的招聘帖吸引，便去关注了公众号，说实话，Glow的Google背景、扁平式氛围一瞬间就吸引了我。不过接下来的一年再也没收到任何关于Glow的招聘信息，所以自己也就淡忘了，加之也觉得自己没戏，所以也就没有多想。直到今年找实习时，在路上走着突然想起这家公司，说实话那时除了Glow这个名字和这家公司很独特之外其他都不记得。于是我回到学校，把bbs重新翻了一遍，竟被我找回了那个招聘帖。之后大家就知道了，投递简历，电话面试，onsite面试。然后很快就入职了。\n\n10. 15年6月中到现在，Glow的Android开发实习生活。因为不想有软文的嫌疑，所以我也就不做太多介绍了。我只想说，在Glow的这半年，我和一堆Google大牛相处，技术成长很快。他们并不介怀我非计算机出身，也不担心我只有几个月的Android的开发背景。我想我唯一的优势就是努力了。开始时我还挺有压力，担心会拖他们的后腿，不过在他们的帮助下和我个人的不懈努力下，现在我已经能够很好的与他们合作，也得到了他们的认可。我最爱Glow的扁平氛围，我相信现在很多创业公司也如此，没有上下级，一心做好产品。\n\n在Glow的这半年，我不用提心吊胆担心导师随时来使唤我，我可以全身心来提高技术，而身边的人都随时准备帮助你。\n\n说实话，我感激自己这两年的坚持，感谢这两年遇到的大牛们。\n\n2016年的技术规划\n------------------------------------------------------------------\n2016年对我而言，是个大年。\n\n正式离开校园，步入工作。\n\n下面，简单列一下我的规划吧：\n\n1. 工作方面。目前我在Glow已经独立负责一整块的开发任务了，包括Android和服务器开发。我希望把自己在开源方面学到的新技术应用到我负责的模块上，持续地提高用户体验和稳定性，为用户提供更棒的作品。这点是我每天都在心心念念的。\n\n2. 个人技术方面。由于Glow不用加班，所以我平常会有很多的个人时间。我当然不准备把这些时间用在看剧和睡觉上。我会多去写作，之前在简书上写的几篇文章[《如何在一天之内搭建以你自己名字为域名且具备cool属性的个人博客》](http://www.jianshu.com/p/99665608d295)、[如何在一天之内完成一款具备cool属性的Android产品<简诗>](http://www.jianshu.com/p/cf496fc408b2)收获了不少读者，所以以后会继续努力。同时也会在[个人微博](http://weibo.com/1625892654)和[稀土](http://gold.xitu.io/#/user/562a410800b07d3623109a95)上多多分享优质文章。\n\n3. 开源方面。最近因为又忙实习又忙毕业写论文，就没有花太多时间做开源。只是贡献了两个库：[简诗](https://github.com/wingjay/jianshi) 和[BlurImageView](https://github.com/wingjay/BlurImageView)，加起来快一千个star左右。不过以后还会继续贡献优秀的库和大家分享的。\n\n4. [我的个人博客](http://wingjay.com) http://wingjay.com。\n除了技术，我也会开始提高自己的艺术方面的敏感度。比如开始接触建筑设计、文学方面的，一方面扩大自己的知识面，另一方面也是提高自己的感性思维吧。\n\n最近在读的书\n------------------------------------------------------------------\n1. 《一切始于设计－一个设计师的世博十日手记   －   迪人 著》\n这本书我看到了一位设计师对世界的认知，接触了世界各国的设计思想，如意大利、德国、法国等，收获很大！\n\n2. 《设计中的设计   －   原研哉 著》\n原研哉，无印良品设计总监。感受日本设计思想中留白这一概念，让人重新认识身边的事物。\n\n3. 《Android开发艺术探索  － 任玉刚 著》\n把Android里很多晦涩的概念讲解清楚，超喜欢里面对View的讲解，解开了我一个很大的困惑谜团。\n\n4. 《Android群英传  －  徐宜生 著》\n从实际开发的角度，讲解开发中常见的各种问题，结合上面那本书一起看，差不多能把多数开发问题搞明白。\n\n还有不少书，下次再来推荐吧！\n\n如果你也热爱技术，交个朋友吧\n------------------------------------------------------------------\n我是[wingjay](http://wingjay.com)，你可以通过我的[GitHub](https://github.com/wingjay)或者[简书平台](http://www.jianshu.com/users/da333fd63fe5/latest_articles)来找到我哦。\n\n谢谢！\n\n\n\n\n\n\n\n","source":"_posts/我与代码的相知相遇.md","raw":"title: 我与代码的相知相遇\ntags:\n  - Goodbye2015 Hi 2016\n  - 随笔\ndate: 2015-12-29 00:12:45\n---\n![](https://drscdn.500px.org/photo/3706985/m%3D2048/d9cba44c9d66f27d27e1628fa7f4606c)\n\nHi，我是wingjay\n------------------------------------------------------------------\n大家好，我是[《如何在一天之内搭建以你自己名字为域名且具备cool属性的个人博客》](http://www.jianshu.com/p/99665608d295)、[如何在一天之内完成一款具备cool属性的Android产品<简诗>](http://www.jianshu.com/p/cf496fc408b2)的作者[wingjay](https://github.com/wingjay)，今天抽空来和大家一起告别2015，迎接新的技术成长的一年。\n\n\n再过半年，我就要从交大硕士毕业了。\n------------------------------------------------------------------\n2013年9月入学交大，自动化小硕，从没想过未来会从事计算机相关行业，因为对于编程我唯一的背景就是大二那年的C语言课程。\n\n我是怎么开始对编程感兴趣的？不记得了，也不会有人关心。只知道那时逢人就介绍智能手机的硬件配置多么发烧，喜欢调侃小米的成功哲学，也跟风追着“大数据”和“云计算”这两朵云奔跑。\n\n慢慢的，觉得搞计算机的人很酷。\n\n那时，我正式入学。\n\n<!-- more -->\n\n也在那时，我缠着父母给我买了一款手机－小米2s。我记得我对着这款手机盯了快半个小时，乐的。\n\n然后开启了两年的研究生生涯。\n\n没有我想象的顺利，但也没有我想象的不堪。\n\n用两句话来概括这两年吧：\n\n1. 第一年我把除了马克思之外所有的课都认真学了一遍，还选修了诸如机器学习、模式识别和数据挖掘等课程，这一年，感觉踏实。\n\n2. 第二年，30%的时间去提心吊胆地帮导师干杂活；70%的时间背着导师更加提心吊胆地去学习编程，这一年，以为自己会消沉，后来没有。\n\n自学编程的那些日子\n------------------------------------------------------------------\n还是那句话，现在吃的苦，都是当年专业没选计算机时脑子进的水。\n\n2014年初，作为一名只会C语言的我而言，真正开始自学计算机，依次经历了以下几步：\n\n1. 14年3月，师兄说要学编程，先学基础。于是我过了一遍数据结构和操作系统的书，过的比较粗略；\n\n2. 14年4月，想学Android开发，在网上发现了Mars的教程视频。于是我每天只要有空就背着导师偷偷看视频，做笔记。学习Android的同时也顺带着学了些Java的知识。每天晚上还会在新浪博客或博客园上把自己的笔记记录上去，虽然这种做法并没什么作用，但那时觉得很happy。\n\n3. 14年6月，视频自学效果不佳，我非常苦恼。那时我非常希望有人能够来帮帮我这个新手，同时我每天去寻找实践的机会。要知道，作为一名研究生，导师每天管着你，不能放开学，很不爽的。不过，上天眷顾，我终于找到一份校内实习，技术开发，离实验室又近，每天还有80元的工资，天，那几天我感觉我复活了！\n\n4. 14年6月中到11月，开始学习网站开发。校内实习启动，我过上了白天实验室，晚上工作室的日子了。工作室四个人，两个大牛，两个菜鸟，我当然是后者。6月到11月，我饥渴地学习！开始做网站，前端、后端、数据库。这半年我差不多每天是白天在实验室干完活之后晚上去写代码，半年下来，差不多把前端的html、css、js和一些框架Bootstrap、jQuery等，后端的php，和如thinkphp等框架，还有数据库MySQL、MongoDB都学了一通。空闲时也自己配置过服务器，搭建自己的网站。\n\n5. 15年3月到5月，算是开始了Android开发学习之路吧。15年，也就是今年，三月开学时，工作室里两个人离开了，一个是被导师抓走干活了，另一个大三的准备毕业了。于是工作室就只剩我和一位大牛。说实话，有点寂寞，但我的热情并没有减少。相反，我仍旧专注于Android的开发和学习。实验室方面，到了今年，反而轻松了些，每天上午和晚上在工作室，下午跑回实验室蹲班。另外在实际的开发中，我发现以前视频学的东西和实际应用相差很大，可能那些更基础吧，总之我几乎又是从零开始去学习，从项目中自学。\n\n6. 15年5月，我学了近三个月的Android开发，虽然工作室另一位大牛偶尔会帮我，但多数时候还是我一头人默默对着电脑学习、研究和修bug。不过好歹这几个月时间把工作室之前的一款Android应用重新写了一遍，每天晚上学到深夜，冒着寒风骑车回宿舍的场景我记得清楚。最后开发完的应用，工作室的指导老师很满意，我也对自己比较满意。\n\n7. 15年5月中到6月，工作室只剩我一人了。我没有想到，在六月某一天，工作室的顶梁柱大牛说要去北京微软亚研院实习了，意味着整个工作室从最初的四个人只剩下我一个了。那时，我真感觉到有点孤单，看着身边做技术的小伙伴依次离开，到最后竟然只剩我自己一人。不过，我还是照常来工作室开发Android、学习，不过，这时只能一人去食堂吃饭，遇到问题也再没有人来指导，完全靠自己。\n\n8. 15年6月初，迷茫地寻找校外实习。我独自在工作室开发近一个月后，由于即将面临毕业，于是也开始寻找实习。那时摆在我眼前有两条路，大公司；创业公司。对我个人而言，我是追求技术成长的，不希望自己受限于某种技术，所以害怕大公司那种只让我一直从事某个项目的某个方面。所以在我心里，虽知大公司稳妥，但我更偏心于创业型公司。另外我也希望提高自己的英语，也希望有还不错的待遇，希望未来有好的职业发展规划。很多的希望，让我很迷茫，不知道能不能找到真正适合自己的企业。\n\n9. 15年6月中，确定实习公司Glow, 正式离开工作室。终于，我也要离开这个伴随我技术成长的地方了。这期间，我参加了一些公司的面试。大小公司都有，也拿到不少开发岗offer。当然，最后我选择了目前我所在的这家硅谷创业公司－－Glow。说到Glow，我就觉得有缘。一年前，我被Glow的招聘帖吸引，便去关注了公众号，说实话，Glow的Google背景、扁平式氛围一瞬间就吸引了我。不过接下来的一年再也没收到任何关于Glow的招聘信息，所以自己也就淡忘了，加之也觉得自己没戏，所以也就没有多想。直到今年找实习时，在路上走着突然想起这家公司，说实话那时除了Glow这个名字和这家公司很独特之外其他都不记得。于是我回到学校，把bbs重新翻了一遍，竟被我找回了那个招聘帖。之后大家就知道了，投递简历，电话面试，onsite面试。然后很快就入职了。\n\n10. 15年6月中到现在，Glow的Android开发实习生活。因为不想有软文的嫌疑，所以我也就不做太多介绍了。我只想说，在Glow的这半年，我和一堆Google大牛相处，技术成长很快。他们并不介怀我非计算机出身，也不担心我只有几个月的Android的开发背景。我想我唯一的优势就是努力了。开始时我还挺有压力，担心会拖他们的后腿，不过在他们的帮助下和我个人的不懈努力下，现在我已经能够很好的与他们合作，也得到了他们的认可。我最爱Glow的扁平氛围，我相信现在很多创业公司也如此，没有上下级，一心做好产品。\n\n在Glow的这半年，我不用提心吊胆担心导师随时来使唤我，我可以全身心来提高技术，而身边的人都随时准备帮助你。\n\n说实话，我感激自己这两年的坚持，感谢这两年遇到的大牛们。\n\n2016年的技术规划\n------------------------------------------------------------------\n2016年对我而言，是个大年。\n\n正式离开校园，步入工作。\n\n下面，简单列一下我的规划吧：\n\n1. 工作方面。目前我在Glow已经独立负责一整块的开发任务了，包括Android和服务器开发。我希望把自己在开源方面学到的新技术应用到我负责的模块上，持续地提高用户体验和稳定性，为用户提供更棒的作品。这点是我每天都在心心念念的。\n\n2. 个人技术方面。由于Glow不用加班，所以我平常会有很多的个人时间。我当然不准备把这些时间用在看剧和睡觉上。我会多去写作，之前在简书上写的几篇文章[《如何在一天之内搭建以你自己名字为域名且具备cool属性的个人博客》](http://www.jianshu.com/p/99665608d295)、[如何在一天之内完成一款具备cool属性的Android产品<简诗>](http://www.jianshu.com/p/cf496fc408b2)收获了不少读者，所以以后会继续努力。同时也会在[个人微博](http://weibo.com/1625892654)和[稀土](http://gold.xitu.io/#/user/562a410800b07d3623109a95)上多多分享优质文章。\n\n3. 开源方面。最近因为又忙实习又忙毕业写论文，就没有花太多时间做开源。只是贡献了两个库：[简诗](https://github.com/wingjay/jianshi) 和[BlurImageView](https://github.com/wingjay/BlurImageView)，加起来快一千个star左右。不过以后还会继续贡献优秀的库和大家分享的。\n\n4. [我的个人博客](http://wingjay.com) http://wingjay.com。\n除了技术，我也会开始提高自己的艺术方面的敏感度。比如开始接触建筑设计、文学方面的，一方面扩大自己的知识面，另一方面也是提高自己的感性思维吧。\n\n最近在读的书\n------------------------------------------------------------------\n1. 《一切始于设计－一个设计师的世博十日手记   －   迪人 著》\n这本书我看到了一位设计师对世界的认知，接触了世界各国的设计思想，如意大利、德国、法国等，收获很大！\n\n2. 《设计中的设计   －   原研哉 著》\n原研哉，无印良品设计总监。感受日本设计思想中留白这一概念，让人重新认识身边的事物。\n\n3. 《Android开发艺术探索  － 任玉刚 著》\n把Android里很多晦涩的概念讲解清楚，超喜欢里面对View的讲解，解开了我一个很大的困惑谜团。\n\n4. 《Android群英传  －  徐宜生 著》\n从实际开发的角度，讲解开发中常见的各种问题，结合上面那本书一起看，差不多能把多数开发问题搞明白。\n\n还有不少书，下次再来推荐吧！\n\n如果你也热爱技术，交个朋友吧\n------------------------------------------------------------------\n我是[wingjay](http://wingjay.com)，你可以通过我的[GitHub](https://github.com/wingjay)或者[简书平台](http://www.jianshu.com/users/da333fd63fe5/latest_articles)来找到我哦。\n\n谢谢！\n\n\n\n\n\n\n\n","slug":"我与代码的相知相遇","published":1,"updated":"2015-12-30T14:49:43.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciltijn1q000bz6yxp6zyf11m","sticky":0},{"title":"如何在一天之内搭建以你自己名字为域名又具备cool属性的个人博客","date":"2015-12-07T12:03:33.000Z","_content":"\n![个人博客](/img/我的博客.png)\n\n>对程序员而言，最好的简历就是个人博客和GitHub\n\n## 个人博客\n每个优秀的程序员都会有个人独占的一方网络空间，那里是他个人的舞台，听说过他的人会逐渐汇聚进来，认识他，熟悉他，鼓励他，赞扬他。而对他个人而言，他有了一个可以畅所欲言的小房间，他可以专研学术，聊聊情怀。同时和喜爱他的读者成为好友，共同成长。\n\n这难道不是一件很cool的事情吗？\n\n<!-- more -->\n\n## 先看成果\n教方法前先来看看最终的效果吧。[http://wingjay.com](http://wingjay.com)是本人搭建的个人博客，主要有以下几点：\n\n    1. 个人域名: wingjay.com\n    2. 无需购置服务器，本站同时挂载在Github Pages 和 GitCafe Pages上，免服务器费的同时还能做负载均衡，想想还有点小激动\n    3. 在GitHub上同时管理你的博客和相应代码，再也不用担心博客遗失\n    4. SSL支持，即\"http://\" -> \"https://\"，更安全也更高大上\n\n## 再看兵器\n - 博客框架：[Hexo 3](https://hexo.io)，这是一款能快速、简洁且高效的博客框架，支持[Markdown编辑](https://help.github.com/articles/markdown-basics/)，自动渲染出漂亮的静态页面。\n - 前端主题：[Next](https://github.com/iissnan/hexo-theme-next)，效果参考[http://wingjay.com](http://wingjay.com)\n - 域名购买：[万网](http://wanwang.aliyun.com/)，你可以选购自己名字的域名，一年几十元左右，两杯咖啡的钱。\n - SSL：[CloudFlare](https://www.cloudflare.com)\n\n\n## 抄起家伙\n本文写作方式是`安装流程主线` + `优质参考文章`。由于网络上关于Hexo搭建博客的教程玲琅满目，若读者完全自己动手则要一篇篇找，浪费时间走弯路；相反，若作者悉数摘抄进来，反倒未必符合各人情况，且不利阅读。\n\n所以，`主线`讲解思路，`参考`深入阅读。\n\n下文以搭建 http://wingjay.com 个人博客为例。\n\n### GitHub Pages\n在不购买服务器的前提下，我们的网站需要挂在GitHub Pages上。GitHub Pages是面向用户、组织和项目开放的公共静态页面搭建托管服务，可用于搭建个人博客。\n\n0. 你需要拥有一个[GitHub账号](https://github.com)，去完成新手任务吧。\n1. 进入[GitHub Pages](https://pages.github.com/)，一步步做，完成后就能在浏览器打开[http://wingjay.github.io](http://wingjay.github.io)了。\n\n至此，我们已经利用GitHub Pages搭建好了个人博客雏形了。下面要做的，就是个性化了。\n\n### 安装Hexo博客框架\n经过上面步骤，我们已经拥有了一个初步域名：http://username.github.io 加一个免费网络空间了。好比房间有了，但还没有任何家具。所以下面我们需要把空白的博客丰富起来。\n\n放心，不需要你手写一大堆html、css文件，也不用找jQuery来实现酷炫的页面效果。[Hexo](https://hexo.io)是一款博客框架，它会帮我们搭建。\n\n#### 安装Hexo\n参考[中文文档](https://hexo.io/docs/)或[英文文档](https://hexo.io/zh-cn/docs/index.html)。完成该步后，你的电脑便拥有了Git、Node.js和Hexo。\n\n#### GitHub管理\n为了让自己未来的博客和代码处在git管理之下，我们要把刚刚在Github上博客项目拉到本地。如本人创建的[https://github.com/wingjay/wingjay.github.io](https://github.com/wingjay/wingjay.github.io)，在本地创建文件夹，名字任意，此处设为`myblog`，进入该文件夹，把项目代码clone下来。\n```\ngit clone https://github.com/wingjay/wingjay.github.io\n```\n好了，此时会自动在`myblog`目录下创建子文件夹`wingjay.github.io`,那里就是我们博客的代码，以后的操作都在git的管理之下了，此时默认的branch为`master`。\n\n#### 初始化Hexo\n请参考[文档](https://hexo.io/docs/setup.html)。init命令中的`<folder>`就是文件夹`wingjay.github.io`。初始化后，`wingjay.github.io`里面就已经有完整的Hexo框架了。\n\n#### 熟悉Hexo\n为了让读者快速了解`Hexo`，我作几个简单介绍吧。当然，更多的还是需要仔细阅读[文档](https://hexo.io/docs/writing.html)才能了解更详细。\n\n![hexo目录结构](/img/hexo目录.png)\n\n - `_config.yml`是整体的配置文件，很多基础配置、插件配置等都需要在里面进行。要注意的是，该文件格式要求极为严格，缺少一个空格都会导致运行错误。小提示：不要用Tab缩进，用两个空格符。\n - `layout`，包括`draft(草稿)、page(页面)、post(文章)`。这个就是三种文件的基本格式，其中`post`是你发表的文章，会显示在你的网站里，一篇post会包括`title标题、date日期、tags标签`等信息；`draft`是草稿，只有你在本地能看到，必须要`publish`后才能成为`post`，draft和post差别是date，因为draft没有发表，所以不需要指定日期。`page`是一个页面，对应一个新的html页面，比如[博客内容展示页](http://wingjay.com/2015/12/06/%E8%AF%B4%E4%B8%80%E8%AF%B4%E5%8D%9A%E5%AE%A2/)是一个页面，[留言本](http://wingjay.com/guestbook/)也是一个页面。\n - `public文件夹`，这个文件夹是最终会发布到网站上的真实内容。怎么理解呢？我们可以把`public`文件夹当作是真正的被用户看到的，而其他的`source、themes`等都是为`public`服务的。Hexo里有一个很重要的指令`hexo generate`，这个指令就是利用所有代码里的配置信息、source里写的文章、themes里的样式，共同生成最终的`静态html文件`，存入`public`文件夹内。在我们执行了发布指令`hexo deploy`后，就会把`public`的内容部署到`GitHub Pages`上。当用户在访问我们的博客时，他们会看到public里生成的html文件。这个概念非常重要，即`代码和真实静态页面是独立的`。\n - `generate和deploy`，`generate`会把我们的配置、文章和主题结合起来生成一堆酷炫的html静态文件放在public里面。但此时用户还看不到`本地public文件`里的页面，我们必须用后一个指令`deploy`才能把静态文件部署到`GitHub Pages`上。不过，在部署前，需要配置让它自动部署到我们前面创建的[Github项目](https://github.com/wingjay/wingjay.github.io)中。\n - `deploy`相关配置。为了能够让项目自动把public文件夹的内容部署到[GitHub项目](https://github.com/wingjay/wingjay.github.io)中，我们可以按[部署文档](https://hexo.io/docs/deployment.html)进行配置，其中选择的`branch`为`master`。此后，每次运行deploy后，项目就会自动把public文件夹内容全部覆盖到[当前的GitHub项目master分支上](https://github.com/wingjay/wingjay.github.io/tree/master)。\n - `代码`和`静态文件`分开管理。根据上面知道，每次部署后，public文件内容会`覆盖`掉项目整个master分支。这样可以实现网站`静态文件`的版本控制，但是，仔细对比这个master分支，我们会发现里面**只剩下静态文件**了，我们的代码比如source、themes统统没有了，这就导致无法对代码进行版本管理了。这意味着我换一台电脑，我就再也找不到`代码`了，只剩下一堆之前编译出来的静态文件。所以，为了对代码也进行版本控制，我们创建一个[新的分支：code](https://github.com/wingjay/wingjay.github.io/tree/code)，然后在这个分支里进行代码控制，master里则保存部署的新的静态文件。大家可以自行比对这两个branch的内容差异。\n\n#### 配置Hexo\n做一些基础配置即可，请参考[配置文档](https://hexo.io/docs/configuration.html)\n\n#### 小结\n到这里，我们已经完成了hexo的配置，我们可以在GitHub用不同branch分别管理代码和静态文件。执行deploy操作后，刷新你的网页 http://username.github.io 你就能看到默认的内容了。\n\n但此时还是默认主题，不够美观，所以下一步要配置Next主题。\n\n### 配置主题Next\nHexo主题非常多，可以参考[丰富多彩的Hexo主题](https://hexo.io/themes/)，本文选Next为主题，样式参考[我的博客](http://wingjay.com)。\n\n进入配置阶段，最好的文档还是[官方文档](http://theme-next.iissnan.com/)，简单得不能再细致了。下面只提几点注意：\n\n- 第三方评论系统。评论系统很重要，你可以与读者进行更多交流，配置也简单，建议采用[DISQUS](https://disqus.com/)，更国际化一点，[配置见此](http://theme-next.iissnan.com/third-party-services.html#DISUQS)。另外，前期建议开启`不登陆评论`，即在Disqus的`Comment Rule`里允许`Guest comment`。\n- 创建留言板。熟悉`page`的创建与使用，[参考这里](http://www.arao.me/2015/hexo-next-theme-optimize-base/#为你的hexo网站NexT主题增加留言页)\n- 给自己博客做`SEO`。有好的SEO便于搜索引擎索引你的网站，随着以后读者增多，他们可以更好搜索到你的网站。[具体方法见此](http://www.arao.me/2015/hexo-next-theme-optimize-seo/)\n\n<!-- ![Disqus评论系统](/img/Disqus评论系统.png) -->\n\n### 替换自己的域名\n好了，经过上面的步骤，博客已经拥有了一个全新的主题啦。\n\n下面，我们要对域名 http://wingjay.github.io 下手啦。\n\n#### 购买域名\n速速前往[万网](http://wanwang.aliyun.com/)，支付宝刷的一声，你就拥有了一个闪闪发光的个人域名啦\n\n#### 域名解析_1\n以购买的域名`wingjay.com`为例，我们希望在访问这个域名时能自动进入Github Pages，所以我们要在万网建立一个CNAME纪录来帮我们做一个域名跳转：`wingjay.com` -> `wingjay.github.io`，`www.wingjay.com` -> `wingjay.github.io`。添加方法[参考这里](http://www.sudu.cn/service/detail/1/0/0/3/10036.html)，添加后可以看到两条记录：![域名解析](/img/域名解析.png)。然后万网会在世界各地的DNS服务器上添加这两条记录，当用户访问`wingjay.com`时会自动去访问`wingjay.github.io`。\n\n#### 域名解析_2\n但是，此时并不能成功访问，因为github pages是有限制的，它不允许任意域名都跳转过来，而是只限制一个域名，而且这个域名必须声明在CNAME文件中。\n\n所以，我们需要添加一个CNAME文件到项目的master中才行，[参考这里](https://help.github.com/articles/adding-a-cname-file-to-your-repository/)。读者可以参考本人的[CNAME文件内容](https://github.com/wingjay/wingjay.github.io/blob/master/CNAME)。\n\n不过，对于`Hexo 3`，**这里有一个坑要注意**：大家应该还记得上文说的，master分支里的内容都是自动生成的，而且会完全覆盖之前的内容。如果我们直接创建一个新文件CNAME，填好域名。但会发现在下一次部署后这个文件就消失了。不用惊讶，因为hexo并不会自动生成CNAME文件，所以在部署时被覆盖删除了。\n\n所以，我们就需要这个CNAME工具[hexo-generator-cname](https://github.com/leecrossley/hexo-generator-cname)，这时会自动在public里生成一个CNAME文件，把你的域名加进去再部署一下吧！\n\n### HTTP -> HTTPS\nHTTPS是安全版的HTTP协议，它在http协议与TCP之间加入SSL层，采用端口443，不仅会对传输数据加密，还会进行身份验证。当然个人博客并没有强制性要求采用该协议，这也只是本人的好奇而为。\n\n目前Github Pages已经支持https了，但是不支持自定义证书。不过我们可以利用[CloudFlare](https://www.cloudflare.com)来实现。具体实现可以[参考这里](https://www.benburwell.com/posts/configuring-cloudflare-universal-ssl/)\n\n说明：本网站的https正处在申请中\n\n### 疑难杂症\n1. 本地deploy成功，但是github上的master并没有收到该commit。\n目前不知道是什么原因，本人感觉是two-factor的开启，使得本地不具备权限直接push。比较无语。\n解决方法：\n在code分支上，创建一个.deploy的文件夹，在该文件夹内把master clone下来；\n当有新的改动后，generate后把public文件夹的内容拷入进上面clone的文件夹内；\n进入上面clone下来的文件夹，手动push到master上来更新。\n该思路就是自己维护一个master文件夹，手动把生成的public内容复制进去，再push上去。\n\n快捷命令：\nalias hexodeploy='cd ~/Documents/blog/wingjay.github.io;hexo generate -d;cp -R public/ .deploy/wingjay.github.io;cd .deploy/wingjay.github.io;git add .;git commit -m \"update\";git push origin master'\n\n\n## 总结\n经过上面的步骤，我们已经能够通过访问自己的域名进入自己酷炫的博客了。本文的任务也就告一段落。\n\n除了上面的功能，本人还完成了`支持双域名同时登陆`，其中，支持双域名的解决思路是考虑到[Github Pages的CNAME纪录只允许添加一个域名](https://help.github.com/articles/adding-a-cname-file-to-your-repository/)，所以本人又在[Gitcafe](https://gitcafe.com)上部署了一套。不过考虑到这点大家不一定能用的上，就没有做介绍，有需要的话可以看下文的联系方式联系我。\n\n## 一天变cool系列文章\n[如何在一天之内完成一款具备cool属性的Android产品<简诗>](http://www.jianshu.com/p/cf496fc408b2)\n\n[如何在一天之内搭建以你自己名字为域名且具备cool属性的个人博客](http://www.jianshu.com/p/99665608d295)\n\n## 关于作者\n欢迎各位关注\n[我的Github](https://github.com/wingjay): <https://github.com/wingjay> \n和 \n[我的个人博客](http://wingjay.com): <http://wingjay.com>\n和\n[微博 iam_wingjay](http://weibo.com/u/1625892654): <http://weibo.com/u/1625892654>\n如果有问题，可以给我留言或发邮件<mailto:yinjiesh@126.com>\n\n![](https://avatars0.githubusercontent.com/u/9619875?v=3&s=460)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/如何在一天之内搭建以你自己名字为域名的很cool的个人博客.md","raw":"title: 如何在一天之内搭建以你自己名字为域名又具备cool属性的个人博客\ntags:\n  - '<一天变cool>系列'\n  - 个人博客\ndate: 2015-12-07 20:03:33\n---\n\n![个人博客](/img/我的博客.png)\n\n>对程序员而言，最好的简历就是个人博客和GitHub\n\n## 个人博客\n每个优秀的程序员都会有个人独占的一方网络空间，那里是他个人的舞台，听说过他的人会逐渐汇聚进来，认识他，熟悉他，鼓励他，赞扬他。而对他个人而言，他有了一个可以畅所欲言的小房间，他可以专研学术，聊聊情怀。同时和喜爱他的读者成为好友，共同成长。\n\n这难道不是一件很cool的事情吗？\n\n<!-- more -->\n\n## 先看成果\n教方法前先来看看最终的效果吧。[http://wingjay.com](http://wingjay.com)是本人搭建的个人博客，主要有以下几点：\n\n    1. 个人域名: wingjay.com\n    2. 无需购置服务器，本站同时挂载在Github Pages 和 GitCafe Pages上，免服务器费的同时还能做负载均衡，想想还有点小激动\n    3. 在GitHub上同时管理你的博客和相应代码，再也不用担心博客遗失\n    4. SSL支持，即\"http://\" -> \"https://\"，更安全也更高大上\n\n## 再看兵器\n - 博客框架：[Hexo 3](https://hexo.io)，这是一款能快速、简洁且高效的博客框架，支持[Markdown编辑](https://help.github.com/articles/markdown-basics/)，自动渲染出漂亮的静态页面。\n - 前端主题：[Next](https://github.com/iissnan/hexo-theme-next)，效果参考[http://wingjay.com](http://wingjay.com)\n - 域名购买：[万网](http://wanwang.aliyun.com/)，你可以选购自己名字的域名，一年几十元左右，两杯咖啡的钱。\n - SSL：[CloudFlare](https://www.cloudflare.com)\n\n\n## 抄起家伙\n本文写作方式是`安装流程主线` + `优质参考文章`。由于网络上关于Hexo搭建博客的教程玲琅满目，若读者完全自己动手则要一篇篇找，浪费时间走弯路；相反，若作者悉数摘抄进来，反倒未必符合各人情况，且不利阅读。\n\n所以，`主线`讲解思路，`参考`深入阅读。\n\n下文以搭建 http://wingjay.com 个人博客为例。\n\n### GitHub Pages\n在不购买服务器的前提下，我们的网站需要挂在GitHub Pages上。GitHub Pages是面向用户、组织和项目开放的公共静态页面搭建托管服务，可用于搭建个人博客。\n\n0. 你需要拥有一个[GitHub账号](https://github.com)，去完成新手任务吧。\n1. 进入[GitHub Pages](https://pages.github.com/)，一步步做，完成后就能在浏览器打开[http://wingjay.github.io](http://wingjay.github.io)了。\n\n至此，我们已经利用GitHub Pages搭建好了个人博客雏形了。下面要做的，就是个性化了。\n\n### 安装Hexo博客框架\n经过上面步骤，我们已经拥有了一个初步域名：http://username.github.io 加一个免费网络空间了。好比房间有了，但还没有任何家具。所以下面我们需要把空白的博客丰富起来。\n\n放心，不需要你手写一大堆html、css文件，也不用找jQuery来实现酷炫的页面效果。[Hexo](https://hexo.io)是一款博客框架，它会帮我们搭建。\n\n#### 安装Hexo\n参考[中文文档](https://hexo.io/docs/)或[英文文档](https://hexo.io/zh-cn/docs/index.html)。完成该步后，你的电脑便拥有了Git、Node.js和Hexo。\n\n#### GitHub管理\n为了让自己未来的博客和代码处在git管理之下，我们要把刚刚在Github上博客项目拉到本地。如本人创建的[https://github.com/wingjay/wingjay.github.io](https://github.com/wingjay/wingjay.github.io)，在本地创建文件夹，名字任意，此处设为`myblog`，进入该文件夹，把项目代码clone下来。\n```\ngit clone https://github.com/wingjay/wingjay.github.io\n```\n好了，此时会自动在`myblog`目录下创建子文件夹`wingjay.github.io`,那里就是我们博客的代码，以后的操作都在git的管理之下了，此时默认的branch为`master`。\n\n#### 初始化Hexo\n请参考[文档](https://hexo.io/docs/setup.html)。init命令中的`<folder>`就是文件夹`wingjay.github.io`。初始化后，`wingjay.github.io`里面就已经有完整的Hexo框架了。\n\n#### 熟悉Hexo\n为了让读者快速了解`Hexo`，我作几个简单介绍吧。当然，更多的还是需要仔细阅读[文档](https://hexo.io/docs/writing.html)才能了解更详细。\n\n![hexo目录结构](/img/hexo目录.png)\n\n - `_config.yml`是整体的配置文件，很多基础配置、插件配置等都需要在里面进行。要注意的是，该文件格式要求极为严格，缺少一个空格都会导致运行错误。小提示：不要用Tab缩进，用两个空格符。\n - `layout`，包括`draft(草稿)、page(页面)、post(文章)`。这个就是三种文件的基本格式，其中`post`是你发表的文章，会显示在你的网站里，一篇post会包括`title标题、date日期、tags标签`等信息；`draft`是草稿，只有你在本地能看到，必须要`publish`后才能成为`post`，draft和post差别是date，因为draft没有发表，所以不需要指定日期。`page`是一个页面，对应一个新的html页面，比如[博客内容展示页](http://wingjay.com/2015/12/06/%E8%AF%B4%E4%B8%80%E8%AF%B4%E5%8D%9A%E5%AE%A2/)是一个页面，[留言本](http://wingjay.com/guestbook/)也是一个页面。\n - `public文件夹`，这个文件夹是最终会发布到网站上的真实内容。怎么理解呢？我们可以把`public`文件夹当作是真正的被用户看到的，而其他的`source、themes`等都是为`public`服务的。Hexo里有一个很重要的指令`hexo generate`，这个指令就是利用所有代码里的配置信息、source里写的文章、themes里的样式，共同生成最终的`静态html文件`，存入`public`文件夹内。在我们执行了发布指令`hexo deploy`后，就会把`public`的内容部署到`GitHub Pages`上。当用户在访问我们的博客时，他们会看到public里生成的html文件。这个概念非常重要，即`代码和真实静态页面是独立的`。\n - `generate和deploy`，`generate`会把我们的配置、文章和主题结合起来生成一堆酷炫的html静态文件放在public里面。但此时用户还看不到`本地public文件`里的页面，我们必须用后一个指令`deploy`才能把静态文件部署到`GitHub Pages`上。不过，在部署前，需要配置让它自动部署到我们前面创建的[Github项目](https://github.com/wingjay/wingjay.github.io)中。\n - `deploy`相关配置。为了能够让项目自动把public文件夹的内容部署到[GitHub项目](https://github.com/wingjay/wingjay.github.io)中，我们可以按[部署文档](https://hexo.io/docs/deployment.html)进行配置，其中选择的`branch`为`master`。此后，每次运行deploy后，项目就会自动把public文件夹内容全部覆盖到[当前的GitHub项目master分支上](https://github.com/wingjay/wingjay.github.io/tree/master)。\n - `代码`和`静态文件`分开管理。根据上面知道，每次部署后，public文件内容会`覆盖`掉项目整个master分支。这样可以实现网站`静态文件`的版本控制，但是，仔细对比这个master分支，我们会发现里面**只剩下静态文件**了，我们的代码比如source、themes统统没有了，这就导致无法对代码进行版本管理了。这意味着我换一台电脑，我就再也找不到`代码`了，只剩下一堆之前编译出来的静态文件。所以，为了对代码也进行版本控制，我们创建一个[新的分支：code](https://github.com/wingjay/wingjay.github.io/tree/code)，然后在这个分支里进行代码控制，master里则保存部署的新的静态文件。大家可以自行比对这两个branch的内容差异。\n\n#### 配置Hexo\n做一些基础配置即可，请参考[配置文档](https://hexo.io/docs/configuration.html)\n\n#### 小结\n到这里，我们已经完成了hexo的配置，我们可以在GitHub用不同branch分别管理代码和静态文件。执行deploy操作后，刷新你的网页 http://username.github.io 你就能看到默认的内容了。\n\n但此时还是默认主题，不够美观，所以下一步要配置Next主题。\n\n### 配置主题Next\nHexo主题非常多，可以参考[丰富多彩的Hexo主题](https://hexo.io/themes/)，本文选Next为主题，样式参考[我的博客](http://wingjay.com)。\n\n进入配置阶段，最好的文档还是[官方文档](http://theme-next.iissnan.com/)，简单得不能再细致了。下面只提几点注意：\n\n- 第三方评论系统。评论系统很重要，你可以与读者进行更多交流，配置也简单，建议采用[DISQUS](https://disqus.com/)，更国际化一点，[配置见此](http://theme-next.iissnan.com/third-party-services.html#DISUQS)。另外，前期建议开启`不登陆评论`，即在Disqus的`Comment Rule`里允许`Guest comment`。\n- 创建留言板。熟悉`page`的创建与使用，[参考这里](http://www.arao.me/2015/hexo-next-theme-optimize-base/#为你的hexo网站NexT主题增加留言页)\n- 给自己博客做`SEO`。有好的SEO便于搜索引擎索引你的网站，随着以后读者增多，他们可以更好搜索到你的网站。[具体方法见此](http://www.arao.me/2015/hexo-next-theme-optimize-seo/)\n\n<!-- ![Disqus评论系统](/img/Disqus评论系统.png) -->\n\n### 替换自己的域名\n好了，经过上面的步骤，博客已经拥有了一个全新的主题啦。\n\n下面，我们要对域名 http://wingjay.github.io 下手啦。\n\n#### 购买域名\n速速前往[万网](http://wanwang.aliyun.com/)，支付宝刷的一声，你就拥有了一个闪闪发光的个人域名啦\n\n#### 域名解析_1\n以购买的域名`wingjay.com`为例，我们希望在访问这个域名时能自动进入Github Pages，所以我们要在万网建立一个CNAME纪录来帮我们做一个域名跳转：`wingjay.com` -> `wingjay.github.io`，`www.wingjay.com` -> `wingjay.github.io`。添加方法[参考这里](http://www.sudu.cn/service/detail/1/0/0/3/10036.html)，添加后可以看到两条记录：![域名解析](/img/域名解析.png)。然后万网会在世界各地的DNS服务器上添加这两条记录，当用户访问`wingjay.com`时会自动去访问`wingjay.github.io`。\n\n#### 域名解析_2\n但是，此时并不能成功访问，因为github pages是有限制的，它不允许任意域名都跳转过来，而是只限制一个域名，而且这个域名必须声明在CNAME文件中。\n\n所以，我们需要添加一个CNAME文件到项目的master中才行，[参考这里](https://help.github.com/articles/adding-a-cname-file-to-your-repository/)。读者可以参考本人的[CNAME文件内容](https://github.com/wingjay/wingjay.github.io/blob/master/CNAME)。\n\n不过，对于`Hexo 3`，**这里有一个坑要注意**：大家应该还记得上文说的，master分支里的内容都是自动生成的，而且会完全覆盖之前的内容。如果我们直接创建一个新文件CNAME，填好域名。但会发现在下一次部署后这个文件就消失了。不用惊讶，因为hexo并不会自动生成CNAME文件，所以在部署时被覆盖删除了。\n\n所以，我们就需要这个CNAME工具[hexo-generator-cname](https://github.com/leecrossley/hexo-generator-cname)，这时会自动在public里生成一个CNAME文件，把你的域名加进去再部署一下吧！\n\n### HTTP -> HTTPS\nHTTPS是安全版的HTTP协议，它在http协议与TCP之间加入SSL层，采用端口443，不仅会对传输数据加密，还会进行身份验证。当然个人博客并没有强制性要求采用该协议，这也只是本人的好奇而为。\n\n目前Github Pages已经支持https了，但是不支持自定义证书。不过我们可以利用[CloudFlare](https://www.cloudflare.com)来实现。具体实现可以[参考这里](https://www.benburwell.com/posts/configuring-cloudflare-universal-ssl/)\n\n说明：本网站的https正处在申请中\n\n### 疑难杂症\n1. 本地deploy成功，但是github上的master并没有收到该commit。\n目前不知道是什么原因，本人感觉是two-factor的开启，使得本地不具备权限直接push。比较无语。\n解决方法：\n在code分支上，创建一个.deploy的文件夹，在该文件夹内把master clone下来；\n当有新的改动后，generate后把public文件夹的内容拷入进上面clone的文件夹内；\n进入上面clone下来的文件夹，手动push到master上来更新。\n该思路就是自己维护一个master文件夹，手动把生成的public内容复制进去，再push上去。\n\n快捷命令：\nalias hexodeploy='cd ~/Documents/blog/wingjay.github.io;hexo generate -d;cp -R public/ .deploy/wingjay.github.io;cd .deploy/wingjay.github.io;git add .;git commit -m \"update\";git push origin master'\n\n\n## 总结\n经过上面的步骤，我们已经能够通过访问自己的域名进入自己酷炫的博客了。本文的任务也就告一段落。\n\n除了上面的功能，本人还完成了`支持双域名同时登陆`，其中，支持双域名的解决思路是考虑到[Github Pages的CNAME纪录只允许添加一个域名](https://help.github.com/articles/adding-a-cname-file-to-your-repository/)，所以本人又在[Gitcafe](https://gitcafe.com)上部署了一套。不过考虑到这点大家不一定能用的上，就没有做介绍，有需要的话可以看下文的联系方式联系我。\n\n## 一天变cool系列文章\n[如何在一天之内完成一款具备cool属性的Android产品<简诗>](http://www.jianshu.com/p/cf496fc408b2)\n\n[如何在一天之内搭建以你自己名字为域名且具备cool属性的个人博客](http://www.jianshu.com/p/99665608d295)\n\n## 关于作者\n欢迎各位关注\n[我的Github](https://github.com/wingjay): <https://github.com/wingjay> \n和 \n[我的个人博客](http://wingjay.com): <http://wingjay.com>\n和\n[微博 iam_wingjay](http://weibo.com/u/1625892654): <http://weibo.com/u/1625892654>\n如果有问题，可以给我留言或发邮件<mailto:yinjiesh@126.com>\n\n![](https://avatars0.githubusercontent.com/u/9619875?v=3&s=460)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"如何在一天之内搭建以你自己名字为域名的很cool的个人博客","published":1,"updated":"2016-01-25T10:43:03.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciltijn1s000fz6yx8xkdj60w","sticky":0},{"title":"今年之计","date":"2016-02-19T08:39:37.000Z","_content":"\n![今年之计](https://drscdn.500px.org/photo/40352952/q%3D80_m%3D2000/b8ea73af7f5aef17d99af0e0bf1ee1b0)\n\n结束了家中热闹的腊月，提早返回校中，好好为今年做一番规划。\n\n俗话说得好：一年之计在于春。\n\n今年两件事：\n\n1. 毕业\n2. 步入职场\n\n<!-- more -->\n## 毕业\n关于毕业之事此不多言，已尽最大努力，后望一切顺利。\n\n## 职业\n对于职业能力方面，下面几点是今年的重点：\n\n#### Android技术\n1. 公司。作为一家创业公司的Android developer，今年会花大量的时间在工作中不断提高自己的android技术水平。\n\n2. 研究。工作中的技术学习一般都是任务驱动型，即以解决实际问题为最终目标，这种做法的缺陷是很多时候难以对某个问题进行深入研究。所以，之后要加强这方面的研究，即在工作中解决实际问题后应抽时间来进行细细研究，整理入博客中。\n\n3. 开源。开源项目要保持下去。记录工作中自己开发的不错的组件等积极开源，并多多维护。\n\n4. 翻译。多翻译国外优秀文章，一方面扩展视野，另一方面提高英语。\n\n#### 机器学习\n作为一门互联网职业人员，我显然明白技术的日新月异和更新换代实属必然。\n所以，在夯实Android技术之外，还应该抽出时间来学习其它技术。此处本人选择机器学习作为一个方向来充实自己，准备通过对google提供的在线课程和TensorFlow工具进行较为深入的学习。\n\n[Udacity TensorFlow by Google](udacity.com/course/deep-learning--ud730)\n[Udacity博客](blog.udacity.com/2016/01/putting-deep-learning-to-work.html)\n\n#### 设计与艺术\n无论是为了产品开发或个人审美，都值得花时间提高自己的设计艺术方面的嗅觉与敏感度。\n另外，将设计与技术结合起来，更不失为一件妙事。\n这一步主要通过阅读书籍，浏览设计网站与app来感知。\n\n这里有一些不错的资源：\n[Processing资源](http://mp.weixin.qq.com/s?__biz=MzA5OTgyMDk3Mg==&mid=402850288&idx=1&sn=9bd2856a17128c857d2b864293d0f94d&scene=23&srcid=0216rQN75xcQeFJPiNvNHdin#rd)\n\n#### 英语\n这个就不多提了，无论阅读还是口语都需要提高！\n\n上面这四点，是今年的核心。每一点都还需要细化并渗入到以后的工作学习中，争取有实质性提高。\n\n## 生活\n一个不懂的享受生活的人是悲哀的，因为他会丧失很多的幸福感。\n因此，后面我会开始注重培养自己的爱好，参加一些有意思的活动，结交一些有想法的朋友。\n\n#### 体育\n篮球羽毛球爬山户外，都是我喜欢的，希望以后在周末多抽空参与相关活动。\n平日里可以参与跑步、健身等活动。\n\n只有拥有强健体魄才能更加乐观，更加懂得感悟生活的美。\n\n#### 健康饮食\n一方面注重营养均衡，不要像以前只为好吃。（当然，好吃还是很重要哒）\n另一方面要适量，保持好的体型，拒绝肥胖。\n\n## 阅读\n下面是今年要读书籍的大类，具体还待更新：\n\n1. 技术：Android、机器学习\n2. 艺术设计\n[Nature of Code online](http://natureofcode.com/book/introduction/)\n3. 历史\n\n本文持续更新...\n\n\n\n\n","source":"_posts/今年之计.md","raw":"title: 今年之计\ndate: 2016-02-19 16:39:37\ntags: \n\t- 学习计划\n---\n\n![今年之计](https://drscdn.500px.org/photo/40352952/q%3D80_m%3D2000/b8ea73af7f5aef17d99af0e0bf1ee1b0)\n\n结束了家中热闹的腊月，提早返回校中，好好为今年做一番规划。\n\n俗话说得好：一年之计在于春。\n\n今年两件事：\n\n1. 毕业\n2. 步入职场\n\n<!-- more -->\n## 毕业\n关于毕业之事此不多言，已尽最大努力，后望一切顺利。\n\n## 职业\n对于职业能力方面，下面几点是今年的重点：\n\n#### Android技术\n1. 公司。作为一家创业公司的Android developer，今年会花大量的时间在工作中不断提高自己的android技术水平。\n\n2. 研究。工作中的技术学习一般都是任务驱动型，即以解决实际问题为最终目标，这种做法的缺陷是很多时候难以对某个问题进行深入研究。所以，之后要加强这方面的研究，即在工作中解决实际问题后应抽时间来进行细细研究，整理入博客中。\n\n3. 开源。开源项目要保持下去。记录工作中自己开发的不错的组件等积极开源，并多多维护。\n\n4. 翻译。多翻译国外优秀文章，一方面扩展视野，另一方面提高英语。\n\n#### 机器学习\n作为一门互联网职业人员，我显然明白技术的日新月异和更新换代实属必然。\n所以，在夯实Android技术之外，还应该抽出时间来学习其它技术。此处本人选择机器学习作为一个方向来充实自己，准备通过对google提供的在线课程和TensorFlow工具进行较为深入的学习。\n\n[Udacity TensorFlow by Google](udacity.com/course/deep-learning--ud730)\n[Udacity博客](blog.udacity.com/2016/01/putting-deep-learning-to-work.html)\n\n#### 设计与艺术\n无论是为了产品开发或个人审美，都值得花时间提高自己的设计艺术方面的嗅觉与敏感度。\n另外，将设计与技术结合起来，更不失为一件妙事。\n这一步主要通过阅读书籍，浏览设计网站与app来感知。\n\n这里有一些不错的资源：\n[Processing资源](http://mp.weixin.qq.com/s?__biz=MzA5OTgyMDk3Mg==&mid=402850288&idx=1&sn=9bd2856a17128c857d2b864293d0f94d&scene=23&srcid=0216rQN75xcQeFJPiNvNHdin#rd)\n\n#### 英语\n这个就不多提了，无论阅读还是口语都需要提高！\n\n上面这四点，是今年的核心。每一点都还需要细化并渗入到以后的工作学习中，争取有实质性提高。\n\n## 生活\n一个不懂的享受生活的人是悲哀的，因为他会丧失很多的幸福感。\n因此，后面我会开始注重培养自己的爱好，参加一些有意思的活动，结交一些有想法的朋友。\n\n#### 体育\n篮球羽毛球爬山户外，都是我喜欢的，希望以后在周末多抽空参与相关活动。\n平日里可以参与跑步、健身等活动。\n\n只有拥有强健体魄才能更加乐观，更加懂得感悟生活的美。\n\n#### 健康饮食\n一方面注重营养均衡，不要像以前只为好吃。（当然，好吃还是很重要哒）\n另一方面要适量，保持好的体型，拒绝肥胖。\n\n## 阅读\n下面是今年要读书籍的大类，具体还待更新：\n\n1. 技术：Android、机器学习\n2. 艺术设计\n[Nature of Code online](http://natureofcode.com/book/introduction/)\n3. 历史\n\n本文持续更新...\n\n\n\n\n","slug":"今年之计","published":1,"updated":"2016-02-19T10:59:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciltijn1u000kz6yxbcx9199u","sticky":0},{"title":"交大－影","date":"2016-01-02T08:31:11.000Z","_content":"\n周六，元旦刚过。\n\n校园内空空荡荡，图书馆内座无虚席。\n\n![](/img/交大－影/library.jpg)\n\n也罢，找不到座位，就出去逛逛咱交大满园的秋色吧，顺便体验一把新入手6s的照相性能。\n\n<!-- more -->\n\n![](/img/交大－影/library_outside.jpg)\n\n不得不说咱的图书馆融入了“天圆地方”的建筑理念，耐看。\n\n\n![](/img/交大－影/laker.jpg)\n\n下午斜斜夕阳和静静的湖水，真想找个椅子听听音乐休憩一番\n\n![](/img/交大－影/hehua.jpg)\n\n炎炎夏日的烂漫荷花如今也破败不堪。\n\n![](/img/交大－影/tuya.jpg)\n\n交大特色涂鸦墙，记载了多少岁月的印记，和青春的不羁。\n\n![](/img/交大－影/love.jpg)\n\n校园爱情，真美。一生若能遇到一个真爱，你不得不好好珍惜。\n\n![](/img/交大－影/huxiaohe.jpg)\n\n校园内静静流淌的护校河，让我想起曾在干旱的帝都，路上连水洼都难觅。\n\n![](/img/交大－影/dom.jpg)\n\n说实话交大的住宿条件不错，空调＋套间。唯一遗憾的是住在一楼的我们很需要阳光！\n\n交大很优美，很沉静。\n\n交大的同学们很聪明，很踏实。\n\n在交大的岁月很短暂，却很珍贵。\n","source":"_posts/交大－影.md","raw":"title: 交大－影\ntags:\n  - 摄影\ndate: 2016-01-02 16:31:11\n---\n\n周六，元旦刚过。\n\n校园内空空荡荡，图书馆内座无虚席。\n\n![](/img/交大－影/library.jpg)\n\n也罢，找不到座位，就出去逛逛咱交大满园的秋色吧，顺便体验一把新入手6s的照相性能。\n\n<!-- more -->\n\n![](/img/交大－影/library_outside.jpg)\n\n不得不说咱的图书馆融入了“天圆地方”的建筑理念，耐看。\n\n\n![](/img/交大－影/laker.jpg)\n\n下午斜斜夕阳和静静的湖水，真想找个椅子听听音乐休憩一番\n\n![](/img/交大－影/hehua.jpg)\n\n炎炎夏日的烂漫荷花如今也破败不堪。\n\n![](/img/交大－影/tuya.jpg)\n\n交大特色涂鸦墙，记载了多少岁月的印记，和青春的不羁。\n\n![](/img/交大－影/love.jpg)\n\n校园爱情，真美。一生若能遇到一个真爱，你不得不好好珍惜。\n\n![](/img/交大－影/huxiaohe.jpg)\n\n校园内静静流淌的护校河，让我想起曾在干旱的帝都，路上连水洼都难觅。\n\n![](/img/交大－影/dom.jpg)\n\n说实话交大的住宿条件不错，空调＋套间。唯一遗憾的是住在一楼的我们很需要阳光！\n\n交大很优美，很沉静。\n\n交大的同学们很聪明，很踏实。\n\n在交大的岁月很短暂，却很珍贵。\n","slug":"交大－影","published":1,"updated":"2016-02-20T11:22:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciltijn1w000nz6yx2up4p9uw","sticky":0},{"title":"一种快速毛玻璃虚化效果实现","date":"2016-03-12T01:30:50.000Z","_content":"![个人博客](/img/fastblur/iosblur.jpg)\n\n在iOS设备上我们随处可见毛玻璃效果，而且最近越来越多的场合应用到了这种美观的虚化效果，包括本人的一个开源项目[BlureImageView](https://github.com/wingjay/BlurImageView)也是受此启发。所以，恰到好处的虚化效果能很好的改善用户体验，而且也能让你的app显得更加优雅。\n\n不过，我们目前在android上很少见到毛玻璃效果，我认为很重要的原因是性能问题，虚化一张图片所需要的时间会因设备而异，如果为了虚化使得用户需要刻意等待，那么就是弊大于利。另外，Google官方提供的renderScript一般只是做一些小幅度的虚化，很难达到毛玻璃这类深度虚化效果。\n\n所以本文的角度是能够在android设备上快速实现毛玻璃效果。\n\n<!-- more -->\n\n\n![blur1](/img/fastblur/androidblur_1.png)\n![blur2](/img/fastblur/androidblur_2.png)\n\n### StackBlur\n首先，为了实现毛玻璃效果，本文采用的是[`StackBlur`模糊算法](http://www.quasimondo.com/StackBlurForCanvas/StackBlurDemo.html)，这种算法应用非常广泛，能得到非常良好的毛玻璃效果。在这里，我们使用的是它的Java实现代码[FastBlur.java](https://github.com/wingjay/BlurImageView/blob/master/blurimageviewlib/src/main/java/com/wingjay/blurimageviewlib/FastBlurUtil.java)。\n\n\tpublic static Bitmap doBlur(Bitmap sentBitmap, int radius, boolean canReuseInBitmap)\n可以看出，使用方法非常简单，传入待虚化的bitmap、虚化程序(一般为8)、和是否重用flag。\n\n然后，如果要对上面这张图片进行虚化，我们可以通过把它转化成bitmap传入虚化，看起来很简单就解决了，但事实并非如此。\n\n### OOM\n如果直接把一张大图传入，很容易就会发生OOM内存溢出\n\n\t03-11 21:02:02.014 16727-16742/com.wingjay.jayandroid I/art: Clamp target GC heap from 109MB to 96MB\n\t03-11 21:02:02.026 16727-16727/com.wingjay.jayandroid I/art: Clamp target GC heap from 109MB to 96MB\n\t03-11 21:02:02.030 16727-16727/com.wingjay.jayandroid I/art: Clamp target GC heap from 109MB to 96MB\n\t03-11 21:02:02.031 16727-16727/com.wingjay.jayandroid I/art: Forcing collection of SoftReferences for 30MB allocation\n\t03-11 21:02:02.035 16727-16727/com.wingjay.jayandroid I/art: Clamp target GC heap from 109MB to 96MB\n\t03-11 21:02:02.036 16727-16727/com.wingjay.jayandroid E/art: Throwing OutOfMemoryError \"Failed to allocate a 32175012 byte allocation with 2648672 free bytes and 2MB until OOM\"\n\t03-11 21:02:02.036 16727-16727/com.wingjay.jayandroid D/AndroidRuntime: Shutting down VM\n这是我直接对原图进行虚化得到的log信息。可以看出当虚化开始时，虚拟机开始不断进行内存回收，包括把所有软引用的内存回收。然而，仍然导致了内存溢出。\n\n那就意味着我只能虚化小图，这样才能防止内存溢出。但是我并不想换其他图，那么，我们就应该把这张图`缩放`。\n\n### ReScale\n\n\tpublic static Bitmap createScaledBitmap(Bitmap src, int dstWidth, int dstHeight, boolean filter) {}\n我们可以利用这个function来进行bitmap的缩放。其中前三个参数很明显，其中宽高我们可以选择为原图尺寸的1/10；第四个filter是指缩放的效果，filter为true则会得到一个边缘平滑的bitmap，反之，则会得到边缘锯齿、pixelrelated的bitmap。这里我们要对缩放的图片进行虚化，所以无所谓边缘效果，`filter=false`。\n\n所以，我们要使用\n\n\tint scaleRatio = 10;\n\tint blurRadius = 8;\n\tBitmap scaledBitmap = Bitmap.createScaledBitmap(originBitmap,\n        originBitmap.getWidth() / scaleRatio,\n        originBitmap.getHeight() / scaleRatio,\n        false);\n\tBitmap blurBitmap = FastBlur.doBlur(scaledBitmap, blurRadius, true);\n    imageView.setScaleType(ImageView.ScaleType.CENTER_CROP);\n    imageView.setImageBitmap(blurBitmap);\n可以得到如下效果:\n![scaleRatio_10](/img/fastblur/fastblur_10.png)\n\n从图中可以看出，首先可以确定思路是对的；然后，可以看出毛玻璃效果还不是特别的明显。为了得到如iOS那样的虚化效果，我们有两种方法：\n\n- 增大scaleRatio缩放比，使用一样更小的bitmap去虚化可以得到更好的模糊效果，而且有利于占用内存的减小；\n- 增大blurRadius，可以得到更高程度的虚化，不过会导致CPU更加intensive\n\n这里本人通过`增大缩放比`来实验。\n\n- scaleRatio = 20\n![scaleRatio_20](/img/fastblur/fastblur_20.png)\n- scaleRatio = 35\n![scaleRatio_35](/img/fastblur/fastblur_35.png)\n- scaleRatio = 50\n![scaleRatio_50](/img/fastblur/fastblur_50.png)\n- scaleRatio = 100\n![scaleRatio_100](/img/fastblur/fastblur_100.png)\n\n通过上面对比图我们可以找出最适合自己的虚化效果。\n\n### Performance analysis\n那么，要实现这样的效果，是否具有损害用户体验的风险呢？下面，我们从`消耗时间`和`占据内存`的角度来进行分析。\n\n#### Time Consuming\n为了分析虚化一张图片所消耗的时间，本文通过同时虚化`100`来获取平均消耗时间。以期对虚化耗时和不同缩放比对耗时的影响得到一定的认识。\n\n\tlong start = System.currentTimeMillis();\n    Bitmap scaledBitmap, blurBitmap;\n    int scaleRatio = 10;\n    int loopCount = 100\n    for (int i=0; i<loopCount; i++) {\n      scaledBitmap = Bitmap.createScaledBitmap(originBitmap,\n          originBitmap.getWidth() / scaleRatio,\n          originBitmap.getHeight() / scaleRatio,\n          false);\n      blurBitmap = FastBlur.doBlur(scaledBitmap, 8, true);\n    }\n    Log.i(\"blurtime\", String.valueOf(System.currentTimeMillis() - start));\n\n- scaleRatio = 10: 耗时`887ms`，平均耗时`8.87ms`;\n- scaleRatio = 20: 耗时`224ms`，平均耗时`2.24ms`;\n- scaleRatio = 35: 耗时`99ms`，平均耗时`0.99ms`;\n- scaleRatio = 50: 耗时`55ms`，平均耗时`0.55ms`;\n- scaleRatio = 100: 耗时`29ms`，平均耗时`0.29ms`;\n\n为了方便读者了解效果，我通过多组数据拟合了下面的曲线：\n![](/img/fastblur/timeconsume_statisic.png)\n\n从该模拟图可以看出时间随着缩放比的增大而不断减小，当缩放比达到30以上时所消耗的时间不到1ms，因此，我认为应该是完全不会产生时延破坏用户体验的。\n\n#### Memory Consuming\n既然时间没问题，那么，主要问题：内存占用就来了，所以我们需要考察生成一张虚化图片所占用的内存。\n\n为了测试对一张图片进行虚化所占用内存的变化，我们改变虚化次数，即修改上面的`loopCount`并观察对内存的变化。其中scaleRatio = 10，以获得相对较大的内存消耗。\n\n- loopCount = 1\n![](/img/fastblur/memory_1.png)\n- loopCount = 10\n![](/img/fastblur/memory_10.png)\n- loopCount = 20\n![](/img/fastblur/memory_20.png)\n- loopCount = 50\n![](/img/fastblur/memory_50.png)\n- loopCount = 100\n![](/img/fastblur/memory_100.png)\n- loopCount = 300\n![](/img/fastblur/memory_300.png)\n\n从上面的内存消耗图，可以看出虚化的确会占用一定内存，如果大量的虚化同时发生，则会由于UI线程突然加载很多bitmap而导致内存抖动。\n\n#### Conclusion\n希望大家如果有其他测试方法或者意见多多留言，从而继续改进性能。\n\n附上本文所采用的![测试图](/img/fastblur/test_pic.jpeg)\n\n谢谢！\n\n## Reach me\n欢迎各位关注\n[我的Github](https://github.com/wingjay): <https://github.com/wingjay> \n和 \n[我的个人博客](http://wingjay.com): <http://wingjay.com>\n和\n[我的简书](http://www.jianshu.com/users/da333fd63fe5/latest_articles): <http://www.jianshu.com/users/da333fd63fe5/latest_articles>\n和\n[微博 iam_wingjay](http://weibo.com/u/1625892654): <http://weibo.com/u/1625892654>\n如果有问题，可以给我留言或发邮件<mailto:yinjiesh@126.com>\n\n![](https://avatars0.githubusercontent.com/u/9619875?v=3&s=460)\n\n\n","source":"_posts/一种快速毛玻璃虚化效果实现.md","raw":"title: 一种快速毛玻璃虚化效果实现\ndate: 2016-03-12 09:30:50\ntags:\n\t- Android\n---\n![个人博客](/img/fastblur/iosblur.jpg)\n\n在iOS设备上我们随处可见毛玻璃效果，而且最近越来越多的场合应用到了这种美观的虚化效果，包括本人的一个开源项目[BlureImageView](https://github.com/wingjay/BlurImageView)也是受此启发。所以，恰到好处的虚化效果能很好的改善用户体验，而且也能让你的app显得更加优雅。\n\n不过，我们目前在android上很少见到毛玻璃效果，我认为很重要的原因是性能问题，虚化一张图片所需要的时间会因设备而异，如果为了虚化使得用户需要刻意等待，那么就是弊大于利。另外，Google官方提供的renderScript一般只是做一些小幅度的虚化，很难达到毛玻璃这类深度虚化效果。\n\n所以本文的角度是能够在android设备上快速实现毛玻璃效果。\n\n<!-- more -->\n\n\n![blur1](/img/fastblur/androidblur_1.png)\n![blur2](/img/fastblur/androidblur_2.png)\n\n### StackBlur\n首先，为了实现毛玻璃效果，本文采用的是[`StackBlur`模糊算法](http://www.quasimondo.com/StackBlurForCanvas/StackBlurDemo.html)，这种算法应用非常广泛，能得到非常良好的毛玻璃效果。在这里，我们使用的是它的Java实现代码[FastBlur.java](https://github.com/wingjay/BlurImageView/blob/master/blurimageviewlib/src/main/java/com/wingjay/blurimageviewlib/FastBlurUtil.java)。\n\n\tpublic static Bitmap doBlur(Bitmap sentBitmap, int radius, boolean canReuseInBitmap)\n可以看出，使用方法非常简单，传入待虚化的bitmap、虚化程序(一般为8)、和是否重用flag。\n\n然后，如果要对上面这张图片进行虚化，我们可以通过把它转化成bitmap传入虚化，看起来很简单就解决了，但事实并非如此。\n\n### OOM\n如果直接把一张大图传入，很容易就会发生OOM内存溢出\n\n\t03-11 21:02:02.014 16727-16742/com.wingjay.jayandroid I/art: Clamp target GC heap from 109MB to 96MB\n\t03-11 21:02:02.026 16727-16727/com.wingjay.jayandroid I/art: Clamp target GC heap from 109MB to 96MB\n\t03-11 21:02:02.030 16727-16727/com.wingjay.jayandroid I/art: Clamp target GC heap from 109MB to 96MB\n\t03-11 21:02:02.031 16727-16727/com.wingjay.jayandroid I/art: Forcing collection of SoftReferences for 30MB allocation\n\t03-11 21:02:02.035 16727-16727/com.wingjay.jayandroid I/art: Clamp target GC heap from 109MB to 96MB\n\t03-11 21:02:02.036 16727-16727/com.wingjay.jayandroid E/art: Throwing OutOfMemoryError \"Failed to allocate a 32175012 byte allocation with 2648672 free bytes and 2MB until OOM\"\n\t03-11 21:02:02.036 16727-16727/com.wingjay.jayandroid D/AndroidRuntime: Shutting down VM\n这是我直接对原图进行虚化得到的log信息。可以看出当虚化开始时，虚拟机开始不断进行内存回收，包括把所有软引用的内存回收。然而，仍然导致了内存溢出。\n\n那就意味着我只能虚化小图，这样才能防止内存溢出。但是我并不想换其他图，那么，我们就应该把这张图`缩放`。\n\n### ReScale\n\n\tpublic static Bitmap createScaledBitmap(Bitmap src, int dstWidth, int dstHeight, boolean filter) {}\n我们可以利用这个function来进行bitmap的缩放。其中前三个参数很明显，其中宽高我们可以选择为原图尺寸的1/10；第四个filter是指缩放的效果，filter为true则会得到一个边缘平滑的bitmap，反之，则会得到边缘锯齿、pixelrelated的bitmap。这里我们要对缩放的图片进行虚化，所以无所谓边缘效果，`filter=false`。\n\n所以，我们要使用\n\n\tint scaleRatio = 10;\n\tint blurRadius = 8;\n\tBitmap scaledBitmap = Bitmap.createScaledBitmap(originBitmap,\n        originBitmap.getWidth() / scaleRatio,\n        originBitmap.getHeight() / scaleRatio,\n        false);\n\tBitmap blurBitmap = FastBlur.doBlur(scaledBitmap, blurRadius, true);\n    imageView.setScaleType(ImageView.ScaleType.CENTER_CROP);\n    imageView.setImageBitmap(blurBitmap);\n可以得到如下效果:\n![scaleRatio_10](/img/fastblur/fastblur_10.png)\n\n从图中可以看出，首先可以确定思路是对的；然后，可以看出毛玻璃效果还不是特别的明显。为了得到如iOS那样的虚化效果，我们有两种方法：\n\n- 增大scaleRatio缩放比，使用一样更小的bitmap去虚化可以得到更好的模糊效果，而且有利于占用内存的减小；\n- 增大blurRadius，可以得到更高程度的虚化，不过会导致CPU更加intensive\n\n这里本人通过`增大缩放比`来实验。\n\n- scaleRatio = 20\n![scaleRatio_20](/img/fastblur/fastblur_20.png)\n- scaleRatio = 35\n![scaleRatio_35](/img/fastblur/fastblur_35.png)\n- scaleRatio = 50\n![scaleRatio_50](/img/fastblur/fastblur_50.png)\n- scaleRatio = 100\n![scaleRatio_100](/img/fastblur/fastblur_100.png)\n\n通过上面对比图我们可以找出最适合自己的虚化效果。\n\n### Performance analysis\n那么，要实现这样的效果，是否具有损害用户体验的风险呢？下面，我们从`消耗时间`和`占据内存`的角度来进行分析。\n\n#### Time Consuming\n为了分析虚化一张图片所消耗的时间，本文通过同时虚化`100`来获取平均消耗时间。以期对虚化耗时和不同缩放比对耗时的影响得到一定的认识。\n\n\tlong start = System.currentTimeMillis();\n    Bitmap scaledBitmap, blurBitmap;\n    int scaleRatio = 10;\n    int loopCount = 100\n    for (int i=0; i<loopCount; i++) {\n      scaledBitmap = Bitmap.createScaledBitmap(originBitmap,\n          originBitmap.getWidth() / scaleRatio,\n          originBitmap.getHeight() / scaleRatio,\n          false);\n      blurBitmap = FastBlur.doBlur(scaledBitmap, 8, true);\n    }\n    Log.i(\"blurtime\", String.valueOf(System.currentTimeMillis() - start));\n\n- scaleRatio = 10: 耗时`887ms`，平均耗时`8.87ms`;\n- scaleRatio = 20: 耗时`224ms`，平均耗时`2.24ms`;\n- scaleRatio = 35: 耗时`99ms`，平均耗时`0.99ms`;\n- scaleRatio = 50: 耗时`55ms`，平均耗时`0.55ms`;\n- scaleRatio = 100: 耗时`29ms`，平均耗时`0.29ms`;\n\n为了方便读者了解效果，我通过多组数据拟合了下面的曲线：\n![](/img/fastblur/timeconsume_statisic.png)\n\n从该模拟图可以看出时间随着缩放比的增大而不断减小，当缩放比达到30以上时所消耗的时间不到1ms，因此，我认为应该是完全不会产生时延破坏用户体验的。\n\n#### Memory Consuming\n既然时间没问题，那么，主要问题：内存占用就来了，所以我们需要考察生成一张虚化图片所占用的内存。\n\n为了测试对一张图片进行虚化所占用内存的变化，我们改变虚化次数，即修改上面的`loopCount`并观察对内存的变化。其中scaleRatio = 10，以获得相对较大的内存消耗。\n\n- loopCount = 1\n![](/img/fastblur/memory_1.png)\n- loopCount = 10\n![](/img/fastblur/memory_10.png)\n- loopCount = 20\n![](/img/fastblur/memory_20.png)\n- loopCount = 50\n![](/img/fastblur/memory_50.png)\n- loopCount = 100\n![](/img/fastblur/memory_100.png)\n- loopCount = 300\n![](/img/fastblur/memory_300.png)\n\n从上面的内存消耗图，可以看出虚化的确会占用一定内存，如果大量的虚化同时发生，则会由于UI线程突然加载很多bitmap而导致内存抖动。\n\n#### Conclusion\n希望大家如果有其他测试方法或者意见多多留言，从而继续改进性能。\n\n附上本文所采用的![测试图](/img/fastblur/test_pic.jpeg)\n\n谢谢！\n\n## Reach me\n欢迎各位关注\n[我的Github](https://github.com/wingjay): <https://github.com/wingjay> \n和 \n[我的个人博客](http://wingjay.com): <http://wingjay.com>\n和\n[我的简书](http://www.jianshu.com/users/da333fd63fe5/latest_articles): <http://www.jianshu.com/users/da333fd63fe5/latest_articles>\n和\n[微博 iam_wingjay](http://weibo.com/u/1625892654): <http://weibo.com/u/1625892654>\n如果有问题，可以给我留言或发邮件<mailto:yinjiesh@126.com>\n\n![](https://avatars0.githubusercontent.com/u/9619875?v=3&s=460)\n\n\n","slug":"一种快速毛玻璃虚化效果实现","published":1,"updated":"2016-03-12T05:16:48.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciltijn1z000qz6yxkp0yt7fk","sticky":0},{"title":"Hey folks","date":"2015-12-05T13:39:28.000Z","_content":"\n![Hey folks](/img/hey_folks.jpg)\n\nHi, I'm Jay! Welcome!\n\nThis is my first post here and I will write more here. Interested with me? Keep your eyes here!\n\nThanks!","source":"_posts/Hey folks.md","raw":"title: Hey folks\ntags: welcome\ndate: 2015-12-05 21:39:28\n---\n\n![Hey folks](/img/hey_folks.jpg)\n\nHi, I'm Jay! Welcome!\n\nThis is my first post here and I will write more here. Interested with me? Keep your eyes here!\n\nThanks!","slug":"Hey folks","published":1,"updated":"2015-12-30T13:26:22.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciltijn21000tz6yxl11q4w8h","sticky":0},{"title":"30条Android开发建议","date":"2016-03-15T04:03:03.000Z","_content":"#![](https://cdn-images-1.medium.com/max/2000/1*4kl1dDdzNf6hMHdnOQzd7w.jpeg)\n\n    There are two kinds of people ：\n     those who learn the hard way and those who learn by taking someone’s advice. \n\n<!-- more -->\n\n本文主要用来收集Android开发中积累的一些宝贵经验，这些经验中有一些约定熟成且经过检验的建议，有一些结合最新技术的实践。无论是菜鸟还是大神，都应该学会阅读别人的经验，并结合自己的思考转化成对自己有用的知识，这才是最快的成长之路。另外，对于这些建议，我会尽量翔实的进行说明以确保能够顺利快速应用到实际开发中。\n\n## 介绍\n下面以这篇文章：[Building Android Apps — 30 things that experience made me learn the hard way](https://medium.com/@cesarmcferreira/building-android-apps-30-things-that-experience-made-me-learn-the-hard-way-313680430bf9#.efowqynql)为核心，对其中提出的每一点建议进行较为深入的分析探究，最终整理成一篇完整的文章。当然，本文还在不断更新中。\n\n#### 第三方库 \n在你添加每一个third party library之前，请认真考虑是否真的需要这个library。\n#### OverDraw\n如果用户看不到，那就不要进行绘制(draw)，或者说，不要`过度绘制 OverDraw`\n`OverDraw`会导致GPU浪费，也会导致app的速度变慢。为了减少这种危害，我们可以利用[`Debug GPU Overdraw Tool`](http://developer.android.com/tools/performance/debug-gpu-overdraw/index.html)来观察app里的绘制情况，然后可以使用[Hierarchy Viewer](http://developer.android.com/tools/performance/hierarchy-viewer/index.html)来进行优化。 \n#### 数据库\n除非不得不，否则不要使用`database`\n#### 65k methods limit\n`Dalvik 65K methods limit`你很快就会遇到的，不过放心，[`multidexing`](https://medium.com/@rotxed/dex-skys-the-limit-no-65k-methods-is-28e6cb40cf71)会帮助你。\n什么是`Dalvik 65K methods limit`？我们知道，我们写完java code之后，dx tool会把java编译成Dalivik虚拟机能识别的`DEX`文件，这个文件里最多能够索引`65536个method`。关于这个有两点要注意：\n1. 这些method是指能够`索引(reference)`到的，而不是`定义(define)`的。或者说，如果你定义了一个方法，但这个方法并没有被调用，那么就不算在内。\n2. 这些method不仅仅是开发人员自己写的，还包括所有第三方library里面的method。\n\n所以，我们总共可以索引`65536`个方法，包括自己写的和引入第三方库里的。\n那么，我们如何能快速知道我们的app里已经有多少个method了呢？    \n- bash script: [dex-method-counts](https://github.com/mihaip/dex-method-counts)。这个工具可以快速计算，并且提供一个清晰的视图来阅读。\n- [dex.sh](https://gist.github.com/JakeWharton/6002797) by Jake Wharton。这个工具由于采用了递归算法，所以耗时比较长。(Jake大神还写了一篇有趣的分析文章[Play Services 5.0 Is A Monolith Abomination](http://jakewharton.com/play-services-is-a-monolith/)，针对Play Services 5.0太大的问题进行了分析，有空时我再翻译下给各位。虽然[Play Services 6.5已经模块化，更加轻量级了](http://android-developers.blogspot.it/2014/12/google-play-services-and-dex-method.html)）。\n     \n现在，既然我们已经知道了自家app里的method数了，那么如何来处理这种情况呢？\n- [Multidex](http://developer.android.com/tools/building/multidex.html)，官方提供的解决方案，[这篇文章](http://blog.osom.info/2014/10/multi-dex-to-rescue-from-infamous-65536.html)里有详细的使用方法，此不赘述。\n- [ProGuard](http://developer.android.com/tools/help/proguard.html)\n`ProGuard`可以把code里unnecessary的method移除，压缩apk，当然还有`代码混淆`的奇效。\n- 再创建一个`DEX File`。把app里可以独立的模块或code提取出来，放到一个独立的dex文件里，你可以使用[Custom ClassLoader](http://android-developers.blogspot.it/2011/07/custom-class-loading-in-dalvik.html)来加载这些类，然后使用`接口`或`反射`来调用这些方法。不过，这个过程还是比较麻烦的。\n\n#### [RxJava](https://github.com/ReactiveX/RxJava)＋[RxAndroid](https://github.com/ReactiveX/RxAndroid)＋[Retrolambda](https://github.com/orfjackal/retrolambda)\n使用前可以通过[这篇gist](https://gist.github.com/cesarferreira/510aa2456dc0879f559f#file-rxjava-md)来了解`RxJava, RxAndroid & Retrolambda`的结合用法。这个组合可以优雅的在不同线程中处理事务，同时能够方便的实现数据流动和及时响应，而且Retrolambda能够精简你的code。其中，核心的两个概念是`Observables`和`Subscribers`，前者对外提供数据，后者监听并消费这些数据。\n另外，这里有一个看起来不错的项目[Learning RxJava for Android by example](https://github.com/kaushikgopal/RxJava-Android-Samples)，等空闲时再去阅读下code。\n\n#### [Retrofit](http://square.github.io/retrofit/) ＋ RxJava\n利用[Retrofit](http://square.github.io/retrofit/)与RxJava结合，为你的app提供网络请求服务。\n你可以参考这个[超赞的例子](https://gist.github.com/cesarferreira/da1e8fc5742ab1e581b7)，让你快速感受二者结合使用方法。\n\n#### 按`feature`来分package，而不是按`layer`\n这是这篇文章提出的一个点，文中认为分package就像公司安排座位，要按照`team`来分而不是按照每个人的职位来分，即按照负责一个app的`developer、designer、pm`坐在一起，而不是把所有`developer`坐在一起，所有`designer`坐在一起。所以，原文作者认为把一个feature相关的如`Activity ` `adapter`等都放在一起。\n\n不过，我认为按feature也有坏处，那就是`复用`，拿adapter来讲，一个app里很多adapter是类似且可以复用的，如果我们把各个adapter拆倒各个角落里，就很难提取其中的关联来创建一个`BaseAdapter`了。而且，`不同feature之间也有很多公用的东西`，比如一个自定义view，那就很难界定应该放在哪个feature包里了。相反，我们把所有自定义view放在一起，这样也有助于我们发现某些自定义view的区别，然后在refactor时可以提取公用的东西来`复用`。\n\n关于这点，欢迎读者给出自己意见。\n\n#### [加速Gradle](https://medium.com/the-engineering-team/speeding-up-gradle-builds-619c442113cb#.vpoaqdivn)\n\n#### 架构：使用clean Architecture\n这里有两篇优质文章:[Architecting Android…The clean way?](http://fernandocejas.com/2014/09/03/architecting-android-the-clean-way/)和[Architecting Android…The evolution](http://fernandocejas.com/2015/07/18/architecting-android-the-evolution/) 分别介绍并用code实现了一个Clean架构。后面我也会专门分析下这种架构，因为对于任何一个project而言，最初的好的架构是非常重要的！所以，如果你想提高自己，那么`架构`这一关是必经之路。\n\n#### 测试你的app\n虽然做测试需要花费你不少时间，但一旦你完成了这一步，以后的开发会更加快速，app也会更加稳定。\n这里有个哥们，[对`unit test`进行了细致的点评](http://stackoverflow.com/a/67500/794485)。\n\n#### 使用`依赖注入`神器[Dagger](http://google.github.io/dagger/)\n如果你不知道什么是`依赖注入`，你可以先读一下这篇文章[Dependency injection on Android: Dagger (Part 1)](http://antonioleiva.com/dependency-injection-android-dagger-part-1/)，或者这篇[依赖注入](https://github.com/android-cn/blog/tree/master/java/dependency-injection)。简单来说，依赖注入替代了传统创建对象的`new`操作，当需要创建一个class的实例时，使用依赖注入从外部直接获取一个实例，具体这个实例是如何创建的不需要关心，由一个对象库统一管理每个对象的创建过程，并直接对外提供对象。这样做的好处是我们不用管实例是怎么创建的，这种抽象可以使得每个对象的创建过程变得可扩展性，只要在对象库里修改一次，那么所有用到这个实例的地方都随之变更。例如在测试时，我们希望某个mock某个对象的数据，就可以修改注入的对象。\n\n依赖注入有不少工具，不过Dagger2使用的是`编译时代码生成(code generation)`方式而不是`反射(reflection)`，所以它的性能比较出众。[这篇文章](http://fernandocejas.com/2015/04/11/tasting-dagger-2-on-android/)有对Dagger2的实践和分析。\n\n#### [对EditText使用合适的输入类型](http://developer.android.com/training/keyboard-input/style.html)\n\n#### 关注新的开源library\n你可以通过[Android Arsenal](http://android-arsenal.com/cc)来保持对开源项目的关注，同时利用这个工具[dryrun](https://github.com/cesarferreira/dryrun)来快速将开源项目跑在genymotion以看到实际效果。\n\n#### Service\n如果你创建了Service，那么一旦这个Service完成了自己的使命，就应该立即清理掉它\n\n#### 使用[AccountManager](http://developer.android.com/reference/android/accounts/AccountManager.html)来统一管理用户的帐号密码。\n\n#### 使用`持续集成CI(Continuous Integration)`来编译并发布你的beta和release build\n持续集成可以帮助你方便的编译并发布项目，不过，不要去搭建你们自己的CI服务器，因为你需要花费太多的时间来处理硬盘空间、安全问题和预防SSL攻击等问题。你可以尝试Jenkins、circleci、 travis 或者 shippable，这些价格并不贵，而且能帮你省很多事情。\n\n#### 自动发布到Play Store\n你可以使用这个工具[gradle-play-publisher](https://github.com/Triple-T/gradle-play-publisher)来帮助你自动上传apk到Play Store上\n\n#### 开始考虑用svg替代png\n理由很简单，android developer应该很熟悉每次导入一张图片时都需要生成四五种不同大小的png图片并放入到对应文件夹。与其维护这么多图片，显然使用一张svg图片更加方便。而且，google也在不断提供相关的支持，除了基本的[Vector Drawable](http://developer.android.com/tools/help/vector-asset-studio.html)，从最新的[Support Library](http://android-developers.blogspot.com/2016/02/android-support-library-232.html)我们也能看到google也在鼓励developer们使用svg。\n\n不过，svg也有自己的限制，比如它比较适合小icon，因为它最终会生成bitmap加载以供显示，所以这需要一定的cpu支持。当然总体来讲svg还是更优的，至少大家可以不用再维护四五张不同尺寸的图片了。\n\n#### 将一些library的类进行抽象，从而方便后期替换library\n例如，一旦我们打log会使用`Log.i()`，但是，如果后面我们突然想换成`Timber.i()`就会很麻烦，需要一个个log找到来替换。但是，如果我们抽象出一个`AppLogger`来，全部调用`AppLogger.i()`来记log，那么我们只要简单的在`AppLogger`内部替换掉具体实现就可以了。\n\n#### 监控网络连接类型，区分`移动数据流量`和`Wi-Fi`；同样，可以监控`电量`和`充电状态`\n对于不同网络类型，我们可以动态改变我们的UI，比如大图可以选择在`Wi-Fi`下才加载，而在`移动数据流量`则不加载。对于`电量`也是类似的逻辑。用户一定会很感谢app做的这种自适应的。\n\n#### User Interface is like a joke.If you have to explain it, it's not that good.\n\n#### 先写slow但是right的代码，再去进行优化\n\n## 小结\n本文长期更新，会保持跟踪最新的技术和研究实践经验，为大家提供有效有用的经验，少走坑。\n\n## Reach me\n欢迎各位关注\n[我的Github](https://github.com/wingjay): <https://github.com/wingjay> \n和 \n[我的个人博客](http://wingjay.com): <http://wingjay.com>\n和\n[我的简书](http://www.jianshu.com/users/da333fd63fe5/latest_articles): <http://www.jianshu.com/users/da333fd63fe5/latest_articles>\n和\n[微博 iam_wingjay](http://weibo.com/u/1625892654): <http://weibo.com/u/1625892654>\n如果有问题，可以给我留言或发邮件<mailto:yinjiesh@126.com>\n\n![](https://avatars0.githubusercontent.com/u/9619875?v=3&s=460)","source":"_posts/30条Android开发建议.md","raw":"title: 30条Android开发建议\ndate: 2016-03-15 12:03:03\ntags: \n\t- Android\n---\n#![](https://cdn-images-1.medium.com/max/2000/1*4kl1dDdzNf6hMHdnOQzd7w.jpeg)\n\n    There are two kinds of people ：\n     those who learn the hard way and those who learn by taking someone’s advice. \n\n<!-- more -->\n\n本文主要用来收集Android开发中积累的一些宝贵经验，这些经验中有一些约定熟成且经过检验的建议，有一些结合最新技术的实践。无论是菜鸟还是大神，都应该学会阅读别人的经验，并结合自己的思考转化成对自己有用的知识，这才是最快的成长之路。另外，对于这些建议，我会尽量翔实的进行说明以确保能够顺利快速应用到实际开发中。\n\n## 介绍\n下面以这篇文章：[Building Android Apps — 30 things that experience made me learn the hard way](https://medium.com/@cesarmcferreira/building-android-apps-30-things-that-experience-made-me-learn-the-hard-way-313680430bf9#.efowqynql)为核心，对其中提出的每一点建议进行较为深入的分析探究，最终整理成一篇完整的文章。当然，本文还在不断更新中。\n\n#### 第三方库 \n在你添加每一个third party library之前，请认真考虑是否真的需要这个library。\n#### OverDraw\n如果用户看不到，那就不要进行绘制(draw)，或者说，不要`过度绘制 OverDraw`\n`OverDraw`会导致GPU浪费，也会导致app的速度变慢。为了减少这种危害，我们可以利用[`Debug GPU Overdraw Tool`](http://developer.android.com/tools/performance/debug-gpu-overdraw/index.html)来观察app里的绘制情况，然后可以使用[Hierarchy Viewer](http://developer.android.com/tools/performance/hierarchy-viewer/index.html)来进行优化。 \n#### 数据库\n除非不得不，否则不要使用`database`\n#### 65k methods limit\n`Dalvik 65K methods limit`你很快就会遇到的，不过放心，[`multidexing`](https://medium.com/@rotxed/dex-skys-the-limit-no-65k-methods-is-28e6cb40cf71)会帮助你。\n什么是`Dalvik 65K methods limit`？我们知道，我们写完java code之后，dx tool会把java编译成Dalivik虚拟机能识别的`DEX`文件，这个文件里最多能够索引`65536个method`。关于这个有两点要注意：\n1. 这些method是指能够`索引(reference)`到的，而不是`定义(define)`的。或者说，如果你定义了一个方法，但这个方法并没有被调用，那么就不算在内。\n2. 这些method不仅仅是开发人员自己写的，还包括所有第三方library里面的method。\n\n所以，我们总共可以索引`65536`个方法，包括自己写的和引入第三方库里的。\n那么，我们如何能快速知道我们的app里已经有多少个method了呢？    \n- bash script: [dex-method-counts](https://github.com/mihaip/dex-method-counts)。这个工具可以快速计算，并且提供一个清晰的视图来阅读。\n- [dex.sh](https://gist.github.com/JakeWharton/6002797) by Jake Wharton。这个工具由于采用了递归算法，所以耗时比较长。(Jake大神还写了一篇有趣的分析文章[Play Services 5.0 Is A Monolith Abomination](http://jakewharton.com/play-services-is-a-monolith/)，针对Play Services 5.0太大的问题进行了分析，有空时我再翻译下给各位。虽然[Play Services 6.5已经模块化，更加轻量级了](http://android-developers.blogspot.it/2014/12/google-play-services-and-dex-method.html)）。\n     \n现在，既然我们已经知道了自家app里的method数了，那么如何来处理这种情况呢？\n- [Multidex](http://developer.android.com/tools/building/multidex.html)，官方提供的解决方案，[这篇文章](http://blog.osom.info/2014/10/multi-dex-to-rescue-from-infamous-65536.html)里有详细的使用方法，此不赘述。\n- [ProGuard](http://developer.android.com/tools/help/proguard.html)\n`ProGuard`可以把code里unnecessary的method移除，压缩apk，当然还有`代码混淆`的奇效。\n- 再创建一个`DEX File`。把app里可以独立的模块或code提取出来，放到一个独立的dex文件里，你可以使用[Custom ClassLoader](http://android-developers.blogspot.it/2011/07/custom-class-loading-in-dalvik.html)来加载这些类，然后使用`接口`或`反射`来调用这些方法。不过，这个过程还是比较麻烦的。\n\n#### [RxJava](https://github.com/ReactiveX/RxJava)＋[RxAndroid](https://github.com/ReactiveX/RxAndroid)＋[Retrolambda](https://github.com/orfjackal/retrolambda)\n使用前可以通过[这篇gist](https://gist.github.com/cesarferreira/510aa2456dc0879f559f#file-rxjava-md)来了解`RxJava, RxAndroid & Retrolambda`的结合用法。这个组合可以优雅的在不同线程中处理事务，同时能够方便的实现数据流动和及时响应，而且Retrolambda能够精简你的code。其中，核心的两个概念是`Observables`和`Subscribers`，前者对外提供数据，后者监听并消费这些数据。\n另外，这里有一个看起来不错的项目[Learning RxJava for Android by example](https://github.com/kaushikgopal/RxJava-Android-Samples)，等空闲时再去阅读下code。\n\n#### [Retrofit](http://square.github.io/retrofit/) ＋ RxJava\n利用[Retrofit](http://square.github.io/retrofit/)与RxJava结合，为你的app提供网络请求服务。\n你可以参考这个[超赞的例子](https://gist.github.com/cesarferreira/da1e8fc5742ab1e581b7)，让你快速感受二者结合使用方法。\n\n#### 按`feature`来分package，而不是按`layer`\n这是这篇文章提出的一个点，文中认为分package就像公司安排座位，要按照`team`来分而不是按照每个人的职位来分，即按照负责一个app的`developer、designer、pm`坐在一起，而不是把所有`developer`坐在一起，所有`designer`坐在一起。所以，原文作者认为把一个feature相关的如`Activity ` `adapter`等都放在一起。\n\n不过，我认为按feature也有坏处，那就是`复用`，拿adapter来讲，一个app里很多adapter是类似且可以复用的，如果我们把各个adapter拆倒各个角落里，就很难提取其中的关联来创建一个`BaseAdapter`了。而且，`不同feature之间也有很多公用的东西`，比如一个自定义view，那就很难界定应该放在哪个feature包里了。相反，我们把所有自定义view放在一起，这样也有助于我们发现某些自定义view的区别，然后在refactor时可以提取公用的东西来`复用`。\n\n关于这点，欢迎读者给出自己意见。\n\n#### [加速Gradle](https://medium.com/the-engineering-team/speeding-up-gradle-builds-619c442113cb#.vpoaqdivn)\n\n#### 架构：使用clean Architecture\n这里有两篇优质文章:[Architecting Android…The clean way?](http://fernandocejas.com/2014/09/03/architecting-android-the-clean-way/)和[Architecting Android…The evolution](http://fernandocejas.com/2015/07/18/architecting-android-the-evolution/) 分别介绍并用code实现了一个Clean架构。后面我也会专门分析下这种架构，因为对于任何一个project而言，最初的好的架构是非常重要的！所以，如果你想提高自己，那么`架构`这一关是必经之路。\n\n#### 测试你的app\n虽然做测试需要花费你不少时间，但一旦你完成了这一步，以后的开发会更加快速，app也会更加稳定。\n这里有个哥们，[对`unit test`进行了细致的点评](http://stackoverflow.com/a/67500/794485)。\n\n#### 使用`依赖注入`神器[Dagger](http://google.github.io/dagger/)\n如果你不知道什么是`依赖注入`，你可以先读一下这篇文章[Dependency injection on Android: Dagger (Part 1)](http://antonioleiva.com/dependency-injection-android-dagger-part-1/)，或者这篇[依赖注入](https://github.com/android-cn/blog/tree/master/java/dependency-injection)。简单来说，依赖注入替代了传统创建对象的`new`操作，当需要创建一个class的实例时，使用依赖注入从外部直接获取一个实例，具体这个实例是如何创建的不需要关心，由一个对象库统一管理每个对象的创建过程，并直接对外提供对象。这样做的好处是我们不用管实例是怎么创建的，这种抽象可以使得每个对象的创建过程变得可扩展性，只要在对象库里修改一次，那么所有用到这个实例的地方都随之变更。例如在测试时，我们希望某个mock某个对象的数据，就可以修改注入的对象。\n\n依赖注入有不少工具，不过Dagger2使用的是`编译时代码生成(code generation)`方式而不是`反射(reflection)`，所以它的性能比较出众。[这篇文章](http://fernandocejas.com/2015/04/11/tasting-dagger-2-on-android/)有对Dagger2的实践和分析。\n\n#### [对EditText使用合适的输入类型](http://developer.android.com/training/keyboard-input/style.html)\n\n#### 关注新的开源library\n你可以通过[Android Arsenal](http://android-arsenal.com/cc)来保持对开源项目的关注，同时利用这个工具[dryrun](https://github.com/cesarferreira/dryrun)来快速将开源项目跑在genymotion以看到实际效果。\n\n#### Service\n如果你创建了Service，那么一旦这个Service完成了自己的使命，就应该立即清理掉它\n\n#### 使用[AccountManager](http://developer.android.com/reference/android/accounts/AccountManager.html)来统一管理用户的帐号密码。\n\n#### 使用`持续集成CI(Continuous Integration)`来编译并发布你的beta和release build\n持续集成可以帮助你方便的编译并发布项目，不过，不要去搭建你们自己的CI服务器，因为你需要花费太多的时间来处理硬盘空间、安全问题和预防SSL攻击等问题。你可以尝试Jenkins、circleci、 travis 或者 shippable，这些价格并不贵，而且能帮你省很多事情。\n\n#### 自动发布到Play Store\n你可以使用这个工具[gradle-play-publisher](https://github.com/Triple-T/gradle-play-publisher)来帮助你自动上传apk到Play Store上\n\n#### 开始考虑用svg替代png\n理由很简单，android developer应该很熟悉每次导入一张图片时都需要生成四五种不同大小的png图片并放入到对应文件夹。与其维护这么多图片，显然使用一张svg图片更加方便。而且，google也在不断提供相关的支持，除了基本的[Vector Drawable](http://developer.android.com/tools/help/vector-asset-studio.html)，从最新的[Support Library](http://android-developers.blogspot.com/2016/02/android-support-library-232.html)我们也能看到google也在鼓励developer们使用svg。\n\n不过，svg也有自己的限制，比如它比较适合小icon，因为它最终会生成bitmap加载以供显示，所以这需要一定的cpu支持。当然总体来讲svg还是更优的，至少大家可以不用再维护四五张不同尺寸的图片了。\n\n#### 将一些library的类进行抽象，从而方便后期替换library\n例如，一旦我们打log会使用`Log.i()`，但是，如果后面我们突然想换成`Timber.i()`就会很麻烦，需要一个个log找到来替换。但是，如果我们抽象出一个`AppLogger`来，全部调用`AppLogger.i()`来记log，那么我们只要简单的在`AppLogger`内部替换掉具体实现就可以了。\n\n#### 监控网络连接类型，区分`移动数据流量`和`Wi-Fi`；同样，可以监控`电量`和`充电状态`\n对于不同网络类型，我们可以动态改变我们的UI，比如大图可以选择在`Wi-Fi`下才加载，而在`移动数据流量`则不加载。对于`电量`也是类似的逻辑。用户一定会很感谢app做的这种自适应的。\n\n#### User Interface is like a joke.If you have to explain it, it's not that good.\n\n#### 先写slow但是right的代码，再去进行优化\n\n## 小结\n本文长期更新，会保持跟踪最新的技术和研究实践经验，为大家提供有效有用的经验，少走坑。\n\n## Reach me\n欢迎各位关注\n[我的Github](https://github.com/wingjay): <https://github.com/wingjay> \n和 \n[我的个人博客](http://wingjay.com): <http://wingjay.com>\n和\n[我的简书](http://www.jianshu.com/users/da333fd63fe5/latest_articles): <http://www.jianshu.com/users/da333fd63fe5/latest_articles>\n和\n[微博 iam_wingjay](http://weibo.com/u/1625892654): <http://weibo.com/u/1625892654>\n如果有问题，可以给我留言或发邮件<mailto:yinjiesh@126.com>\n\n![](https://avatars0.githubusercontent.com/u/9619875?v=3&s=460)","slug":"30条Android开发建议","published":1,"updated":"2016-03-15T15:00:18.000Z","_id":"ciltiqac800004yyx1i37m0wa","comments":1,"layout":"post","photos":[],"link":"","sticky":0}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ciltijn1e0002z6yx8x9dcrce","tag_id":"ciltijn1i0003z6yxgmlhkz74","_id":"ciltijn1j0004z6yx979kmlq8"},{"post_id":"ciltijn1n0006z6yxalka812k","tag_id":"ciltijn1o0007z6yxg8lx1fad","_id":"ciltijn1p0009z6yxv3e02474"},{"post_id":"ciltijn1n0006z6yxalka812k","tag_id":"ciltijn1o0008z6yxhzr1fmyd","_id":"ciltijn1p000az6yx9c8tt9lt"},{"post_id":"ciltijn1q000bz6yxp6zyf11m","tag_id":"ciltijn1q000cz6yx3900p8dv","_id":"ciltijn1q000dz6yxh5w46vte"},{"post_id":"ciltijn1q000bz6yxp6zyf11m","tag_id":"ciltijn1i0003z6yxgmlhkz74","_id":"ciltijn1r000ez6yxlxq1j7kh"},{"post_id":"ciltijn1s000fz6yx8xkdj60w","tag_id":"ciltijn1t000gz6yxottw42it","_id":"ciltijn1t000iz6yxo8m9yfjv"},{"post_id":"ciltijn1s000fz6yx8xkdj60w","tag_id":"ciltijn1t000hz6yxiv1porpq","_id":"ciltijn1t000jz6yxq8zbogrj"},{"post_id":"ciltijn1u000kz6yxbcx9199u","tag_id":"ciltijn1v000lz6yxts4uf6l2","_id":"ciltijn1v000mz6yx5oi338yg"},{"post_id":"ciltijn1w000nz6yx2up4p9uw","tag_id":"ciltijn1y000oz6yxtyo8o2ks","_id":"ciltijn1y000pz6yx3353c324"},{"post_id":"ciltijn1z000qz6yxkp0yt7fk","tag_id":"ciltijn20000rz6yxiuxpi5xc","_id":"ciltijn20000sz6yxejboj6b3"},{"post_id":"ciltijn21000tz6yxl11q4w8h","tag_id":"ciltijn22000uz6yxpvy95hku","_id":"ciltijn22000vz6yxvqd5nz4n"},{"post_id":"ciltiqac800004yyx1i37m0wa","tag_id":"ciltijn20000rz6yxiuxpi5xc","_id":"ciltiqace00014yyxsaveoybn"}],"Tag":[{"name":"随笔","_id":"ciltijn1i0003z6yxgmlhkz74"},{"name":"cool","_id":"ciltijn1o0007z6yxg8lx1fad"},{"name":"动效","_id":"ciltijn1o0008z6yxhzr1fmyd"},{"name":"Goodbye2015 Hi 2016","_id":"ciltijn1q000cz6yx3900p8dv"},{"name":"<一天变cool>系列","_id":"ciltijn1t000gz6yxottw42it"},{"name":"个人博客","_id":"ciltijn1t000hz6yxiv1porpq"},{"name":"学习计划","_id":"ciltijn1v000lz6yxts4uf6l2"},{"name":"摄影","_id":"ciltijn1y000oz6yxtyo8o2ks"},{"name":"Android","_id":"ciltijn20000rz6yxiuxpi5xc"},{"name":"welcome","_id":"ciltijn22000uz6yxpvy95hku"}]}}