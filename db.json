{"meta":{"version":1,"warehouse":"1.0.3"},"models":{"Asset":[{"_id":"source/robots.txt","path":"robots.txt","modified":0},{"_id":"source/img/说一说我和博客.jpg","path":"img/说一说我和博客.jpg","modified":0},{"_id":"source/img/我的博客.png","path":"img/我的博客.png","modified":0},{"_id":"source/img/域名解析.png","path":"img/域名解析.png","modified":0},{"_id":"source/img/hey_folks.jpg","path":"img/hey_folks.jpg","modified":0},{"_id":"source/img/hexo目录.png","path":"img/hexo目录.png","modified":0},{"_id":"source/img/Disqus评论系统.png","path":"img/Disqus评论系统.png","modified":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":0}],"Cache":[{"_id":"source/_posts/如何在一天之内搭建以你自己名字为域名的很cool的个人博客.md","shasum":"86ab14a98d6076eb7a56b3f04089652e1a32a543","modified":1451320834000},{"_id":"source/_posts/我与代码的相知相遇.md","shasum":"4888f262fb69671f56f551ff628546ac81e520cb","modified":1451320479000},{"_id":"source/_posts/说一说博客.md","shasum":"cc72f8f8cc200df66593936d5d56a88c58a4cdba","modified":1450702287000},{"_id":"source/_posts/Hey folks.md","shasum":"6f66763ffdde3337e7b053a1c7935e319601fefe","modified":1450702287000},{"_id":"source/favicon.ico","shasum":"bb38565775f52af7d2f1f0187ed9972a7b4f09a1","modified":1450702287000},{"_id":"source/guestbook/index.md","shasum":"a367851e76c80c3e94afb026f9f22ba373b054c6","modified":1450702287000},{"_id":"source/img/域名解析.png","shasum":"e3cd6594465e22ed3b2a872e1b63212862097011","modified":1450702287000},{"_id":"source/robots.txt","shasum":"6123a9417ecb039cb56a5b45c3e0450e30196e35","modified":1450702287000},{"_id":"source/tags/index.md","shasum":"c60250d4ddd679b6841a052c754d7756a2f0be52","modified":1450702287000},{"_id":"source/img/Disqus评论系统.png","shasum":"e313d38101a7a49f717ff8964c9d125eef3b284d","modified":1450702287000},{"_id":"source/img/hexo目录.png","shasum":"826cebfed96a6407234bf963baf6921c398195e1","modified":1450702287000},{"_id":"source/img/hey_folks.jpg","shasum":"b0a05bc1ed1669615ead2c5c9b7947f2b0d3968c","modified":1450702287000},{"_id":"source/img/说一说我和博客.jpg","shasum":"0dee97f7d6615ad884b262e82982db52b2a29358","modified":1450702287000},{"_id":"source/img/我的博客.png","shasum":"9239c9f1baa1d5073c98d07186fc791b2b466203","modified":1450702287000},{"_id":"public/robots.txt","modified":1451319210658,"shasum":"6123a9417ecb039cb56a5b45c3e0450e30196e35"},{"_id":"public/img/说一说我和博客.jpg","modified":1451319210663,"shasum":"0dee97f7d6615ad884b262e82982db52b2a29358"},{"_id":"public/img/我的博客.png","modified":1451319210667,"shasum":"9239c9f1baa1d5073c98d07186fc791b2b466203"},{"_id":"public/img/域名解析.png","modified":1451319210670,"shasum":"e3cd6594465e22ed3b2a872e1b63212862097011"},{"_id":"public/img/hey_folks.jpg","modified":1451319210672,"shasum":"b0a05bc1ed1669615ead2c5c9b7947f2b0d3968c"},{"_id":"public/img/hexo目录.png","modified":1451319210674,"shasum":"826cebfed96a6407234bf963baf6921c398195e1"},{"_id":"public/img/Disqus评论系统.png","modified":1451319210676,"shasum":"e313d38101a7a49f717ff8964c9d125eef3b284d"},{"_id":"public/favicon.ico","modified":1451319210678,"shasum":"bb38565775f52af7d2f1f0187ed9972a7b4f09a1"},{"_id":"public/tags/index.html","modified":1451319210679,"shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709"},{"_id":"public/guestbook/index.html","modified":1451319210680,"shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709"},{"_id":"public/2015/12/29/我与代码的相知相遇/index.html","modified":1451319210682,"shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709"},{"_id":"public/2015/12/07/如何在一天之内搭建以你自己名字为域名的很cool的个人博客/index.html","modified":1451319210684,"shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709"},{"_id":"public/2015/12/06/说一说博客/index.html","modified":1451319210687,"shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709"},{"_id":"public/2015/12/05/Hey folks/index.html","modified":1451319210704,"shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709"},{"_id":"public/archives/index.html","modified":1451319210705,"shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709"},{"_id":"public/archives/2015/index.html","modified":1451319210706,"shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709"},{"_id":"public/archives/2015/12/index.html","modified":1451319210709,"shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709"},{"_id":"public/CNAME","modified":1451319210711,"shasum":"b6e903c363301141338985b51e3d46181253afe6"},{"_id":"public/index.html","modified":1451319210712,"shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709"},{"_id":"public/tags/welcome/index.html","modified":1451319210713,"shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709"},{"_id":"public/tags/随笔/index.html","modified":1451319210714,"shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709"},{"_id":"public/tags/Goodbye2015-Hi-2016/index.html","modified":1451319210716,"shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709"},{"_id":"public/tags/一天变cool-系列/index.html","modified":1451319210717,"shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709"},{"_id":"public/tags/个人博客/index.html","modified":1451319210717,"shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709"}],"Category":[],"Data":[],"Page":[{"title":"tags","date":"2015-12-05T11:50:21.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"title: tags\ndate: 2015-12-05 19:50:21\ntype: \"tags\"\ncomments: false\n---\n","updated":"2015-12-21T12:51:27.000Z","path":"tags/index.html","layout":"page","_id":"ciiq5zhle0003l9w8cntwj0wn"},{"title":"guestbook","date":"2015-12-05T11:21:08.000Z","_content":"","source":"guestbook/index.md","raw":"title: guestbook\ndate: 2015-12-05 19:21:08\n---\n","updated":"2015-12-21T12:51:27.000Z","path":"guestbook/index.html","comments":1,"layout":"page","_id":"ciiq5zhlh0004l9w8go95qnh2"}],"Post":[{"title":"Hey folks","date":"2015-12-05T13:39:28.000Z","_content":"\n![Hey folks](/img/hey_folks.jpg)\n\nHi, I'm Jay! Welcome!\n\nThis is my first post here and I will write more here. Interested with me? Keep your eyes here!\n\nThanks!","source":"_posts/Hey folks.md","raw":"title: Hey folks\ntags: welcome\ndate: 2015-12-05 21:39:28\n---\n\n![Hey folks](/img/hey_folks.jpg)\n\nHi, I'm Jay! Welcome!\n\nThis is my first post here and I will write more here. Interested with me? Keep your eyes here!\n\nThanks!","slug":"Hey folks","published":1,"updated":"2015-12-21T12:51:27.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciiq5zhl40000l9w8rb50i06t"},{"title":"说一说我和博客","date":"2015-12-06T13:39:28.000Z","_content":"\n![说一说我和博客](/img/说一说我和博客.jpg)\n\n## 我和博客的那些事\n一直以来在各种平台上写过博客。\n\n最早在新浪、博客园。那时的博客是以笔记摘要为主，看一本书，摘抄几句话，即成一文。写多了，慢慢感觉意义不大，也极少回顾。或者说，写那些博客没有个人的思考，故果断弃之。\n\n然后，开始在[简书](http://www.jianshu.com/users/da333fd63fe5/latest_articles)上写，逐渐记录自己的思考和技术为主，如在学习Android中对系统机制的思考和总结。在简书上也偶有佳作得到大家的喜欢，比如[如何在一天之内完成一款具备cool属性的Android产品](http://www.jianshu.com/p/cf496fc408b2)、[如何阅读Android系统源码－收藏必备](http://www.jianshu.com/p/b3580904d298)。这也激励了我更加努力并分享出更多优质的原创内容。另外，最近也开通了Medium博客平台，不过那上面主要写英文文章，此不细讲。\n\n然后，就是大家看到的个人博客网站。前夜，洗澡后头发没干，就乘机坐在被窝里搭了自己的博客。以前觉得个人博客和简书这类公共博客没什么差异，不过现在却发觉个人博客令人思想更自由，可以记录一切，更不怕随着博客平台的更换而丢失。\n\n<!-- more -->\n\n## 介绍下我的博客\n介绍博客之前，要先麻烦朋友记住一个名字：wingjay。为什么要记住它呢，因为域名是：wingjay.com啊！哈哈（冷）。\n\n目前我的博客内容是同时挂载在两个地方GitHub、GitCafe以同时支持两个域名访问。在此我要感谢这二位，让我省去一笔购买服务器的开销，也同时保证了国内国外都能正常访问。\n\n我的博客主要会包括**技术、艺术和思考**。\n\n - 技术，有两种。一是自己工作中接触到的技术如Android和服务器开发。另一种是自己认为很cool的技术，难道不是每个有追求的人都希望自己变得更cool吗？\n - 艺术，讲不清，包含很多。比如美好的移动设计或工业设计，比如一组让人心静的摄影作品，比如一杯凛冽粗暴的伏特加。这些都是我心中的艺术。\n - 思考，同样讲不清。不过我可以肯定的是，我的博客里每个文字都会出自自己的思考。比如对大爷大妈手牵手的思考，比如对某水果台各类脑残剧和琅琊榜对比的思考，比如对Google和Apple之争的思考。太多了。\n\n## 我为什么要写作\n我认为有两点。\n\n1. 博客是程序员的简历之一。对程序员而言，大多数人都是通过你的博客来认识你。而且，多写博客能促使我们去专研问题并与人分享，同时通过他人反馈来改善自我。\n2. 热爱。通过写作，我们可以记录思考，记录生活，记录技术成长。这难道不是一件很正能量的事情吗？\n\n## 我的写作风格\n简单，直接，文艺\n\n\n\n\n逗逼\n","source":"_posts/说一说博客.md","raw":"title: 说一说我和博客\ndate: 2015-12-06 21:39:28\ntags: 随笔\n---\n\n![说一说我和博客](/img/说一说我和博客.jpg)\n\n## 我和博客的那些事\n一直以来在各种平台上写过博客。\n\n最早在新浪、博客园。那时的博客是以笔记摘要为主，看一本书，摘抄几句话，即成一文。写多了，慢慢感觉意义不大，也极少回顾。或者说，写那些博客没有个人的思考，故果断弃之。\n\n然后，开始在[简书](http://www.jianshu.com/users/da333fd63fe5/latest_articles)上写，逐渐记录自己的思考和技术为主，如在学习Android中对系统机制的思考和总结。在简书上也偶有佳作得到大家的喜欢，比如[如何在一天之内完成一款具备cool属性的Android产品](http://www.jianshu.com/p/cf496fc408b2)、[如何阅读Android系统源码－收藏必备](http://www.jianshu.com/p/b3580904d298)。这也激励了我更加努力并分享出更多优质的原创内容。另外，最近也开通了Medium博客平台，不过那上面主要写英文文章，此不细讲。\n\n然后，就是大家看到的个人博客网站。前夜，洗澡后头发没干，就乘机坐在被窝里搭了自己的博客。以前觉得个人博客和简书这类公共博客没什么差异，不过现在却发觉个人博客令人思想更自由，可以记录一切，更不怕随着博客平台的更换而丢失。\n\n<!-- more -->\n\n## 介绍下我的博客\n介绍博客之前，要先麻烦朋友记住一个名字：wingjay。为什么要记住它呢，因为域名是：wingjay.com啊！哈哈（冷）。\n\n目前我的博客内容是同时挂载在两个地方GitHub、GitCafe以同时支持两个域名访问。在此我要感谢这二位，让我省去一笔购买服务器的开销，也同时保证了国内国外都能正常访问。\n\n我的博客主要会包括**技术、艺术和思考**。\n\n - 技术，有两种。一是自己工作中接触到的技术如Android和服务器开发。另一种是自己认为很cool的技术，难道不是每个有追求的人都希望自己变得更cool吗？\n - 艺术，讲不清，包含很多。比如美好的移动设计或工业设计，比如一组让人心静的摄影作品，比如一杯凛冽粗暴的伏特加。这些都是我心中的艺术。\n - 思考，同样讲不清。不过我可以肯定的是，我的博客里每个文字都会出自自己的思考。比如对大爷大妈手牵手的思考，比如对某水果台各类脑残剧和琅琊榜对比的思考，比如对Google和Apple之争的思考。太多了。\n\n## 我为什么要写作\n我认为有两点。\n\n1. 博客是程序员的简历之一。对程序员而言，大多数人都是通过你的博客来认识你。而且，多写博客能促使我们去专研问题并与人分享，同时通过他人反馈来改善自我。\n2. 热爱。通过写作，我们可以记录思考，记录生活，记录技术成长。这难道不是一件很正能量的事情吗？\n\n## 我的写作风格\n简单，直接，文艺\n\n\n\n\n逗逼\n","slug":"说一说博客","published":1,"updated":"2015-12-21T12:51:27.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciiq5zhlj0005l9w87c8nawze"},{"title":"我与代码的相知相遇","date":"2015-12-28T16:12:45.000Z","_content":"![](https://drscdn.500px.org/photo/3706985/m%3D2048/d9cba44c9d66f27d27e1628fa7f4606c)\n\nHi，我是wingjay\n------------------------------------------------------------------\n大家好，我是[《如何在一天之内搭建以你自己名字为域名且具备cool属性的个人博客》](http://www.jianshu.com/p/99665608d295)、[如何在一天之内完成一款具备cool属性的Android产品<简诗>](http://www.jianshu.com/p/cf496fc408b2)的作者[wingjay](https://github.com/wingjay)，今天抽空来和大家一起告别2015，迎接新的技术成长的一年。\n\n\n再过半年，我就要从交大硕士毕业了。\n------------------------------------------------------------------\n2013年9月入学交大，自动化小硕，从没想过未来会从事计算机相关行业，因为对于编程我唯一的背景就是大二那年的C语言课程。\n\n我是怎么开始对编程感兴趣的？不记得了，也不会有人关心。只知道那时逢人就介绍智能手机的硬件配置多么发烧，喜欢调侃小米的成功哲学，也跟风追着“大数据”和“云计算”这两朵云奔跑。\n\n慢慢的，觉得搞计算机的人很酷。\n\n那时，我正式入学。\n\n也在那时，我缠着父母给我买了一款手机－小米2s。我记得我对着这款手机盯了快半个小时，乐的。\n\n然后开启了两年的研究生生涯。\n\n没有我想象的顺利，但也没有我想象的不堪。\n\n用两句话来概括这两年吧：\n\n1. 第一年我把除了马克思之外所有的课都认真学了一遍，还选修了诸如机器学习、模式识别和数据挖掘等课程，这一年，感觉踏实。\n\n2. 第二年，30%的时间去提心吊胆地帮导师干杂活；70%的时间背着导师更加提心吊胆地去学习编程，这一年，以为自己会消沉，后来没有。\n\n自学编程的那些日子\n------------------------------------------------------------------\n还是那句话，现在吃的苦，都是当年专业没选计算机时脑子进的水。\n\n2014年初，作为一名只会C语言的我而言，真正开始自学计算机，依次经历了以下几步：\n\n1. 14年3月，师兄说要学编程，先学基础。于是我过了一遍数据结构和操作系统的书，过的比较粗略；\n\n2. 14年4月，想学Android开发，在网上发现了Mars的教程视频。于是我每天只要有空就背着导师偷偷看视频，做笔记。学习Android的同时也顺带着学了些Java的知识。每天晚上还会在新浪博客或博客园上把自己的笔记记录上去，虽然这种做法并没什么作用，但那时觉得很happy。\n\n3. 14年6月，视频自学效果不佳，我非常苦恼。那时我非常希望有人能够来帮帮我这个新手，同时我每天去寻找实践的机会。要知道，作为一名研究生，导师每天管着你，不能放开学，很不爽的。不过，上天眷顾，我终于找到一份校内实习，技术开发，离实验室又近，每天还有80元的工资，天，那几天我感觉我复活了！\n\n4. 14年6月中到11月，开始学习网站开发。校内实习启动，我过上了白天实验室，晚上工作室的日子了。工作室四个人，两个大牛，两个菜鸟，我当然是后者。6月到11月，我饥渴地学习！开始做网站，前端、后端、数据库。这半年我差不多每天是白天在实验室干完活之后晚上去写代码，半年下来，差不多把前端的html、css、js和一些框架Bootstrap、jQuery等，后端的php，和如thinkphp等框架，还有数据库MySQL、MongoDB都学了一通。空闲时也自己配置过服务器，搭建自己的网站。\n\n5. 15年3月到5月，算是开始了Android开发学习之路吧。15年，也就是今年，三月开学时，工作室里两个人离开了，一个是被导师抓走干活了，另一个大三的准备毕业了。于是工作室就只剩我和一位大牛。说实话，有点寂寞，但我的热情并没有减少。相反，我仍旧专注于Android的开发和学习。实验室方面，到了今年，反而轻松了些，每天上午和晚上在工作室，下午跑回实验室蹲班。另外在实际的开发中，我发现以前视频学的东西和实际应用相差很大，可能那些更基础吧，总之我几乎又是从零开始去学习，从项目中自学。\n\n6. 15年5月，我学了近三个月的Android开发，虽然工作室另一位大牛偶尔会帮我，但多数时候还是我一头人默默对着电脑学习、研究和修bug。不过好歹这几个月时间把工作室之前的一款Android应用重新写了一遍，每天晚上学到深夜，冒着寒风骑车回宿舍的场景我记得清楚。最后开发完的应用，工作室的指导老师很满意，我也对自己比较满意。\n\n7. 15年5月中到6月，工作室只剩我一人了。我没有想到，在六月某一天，工作室的顶梁柱大牛说要去北京微软亚研院实习了，意味着整个工作室从最初的四个人只剩下我一个了。那时，我真感觉到有点孤单，看着身边做技术的小伙伴依次离开，到最后竟然只剩我自己一人。不过，我还是照常来工作室开发Android、学习，不过，这时只能一人去食堂吃饭，遇到问题也再没有人来指导，完全靠自己。\n\n8. 15年6月初，迷茫地寻找校外实习。我独自在工作室开发近一个月后，由于即将面临毕业，于是也开始寻找实习。那时摆在我眼前有两条路，大公司；创业公司。对我个人而言，我是追求技术成长的，不希望自己受限于某种技术，所以害怕大公司那种只让我一直从事某个项目的某个方面。所以在我心里，虽知大公司稳妥，但我更偏心于创业型公司。另外我也希望提高自己的英语，也希望有还不错的待遇，希望未来有好的职业发展规划。很多的希望，让我很迷茫，不知道能不能找到真正适合自己的企业。\n\n9. 15年6月中，确定实习公司Glow, 正式离开工作室。终于，我也要离开这个伴随我技术成长的地方了。这期间，我参加了一些公司的面试。大小公司都有，也拿到不少开发岗offer。当然，最后我选择了目前我所在的这家硅谷创业公司－－Glow。说到Glow，我就觉得有缘。一年前，我被Glow的招聘帖吸引，便去关注了公众号，说实话，Glow的Google背景、扁平式氛围一瞬间就吸引了我。不过接下来的一年再也没收到任何关于Glow的招聘信息，所以自己也就淡忘了，加之也觉得自己没戏，所以也就没有多想。直到今年找实习时，在路上走着突然想起这家公司，说实话那时除了Glow这个名字和这家公司很独特之外其他都不记得。于是我回到学校，把bbs重新翻了一遍，竟被我找回了那个招聘帖。之后大家就知道了，投递简历，电话面试，onsite面试。然后很快就入职了。\n\n10. 15年6月中到现在，Glow的Android开发实习生活。因为不想有软文的嫌疑，所以我也就不做太多介绍了。我只想说，在Glow的这半年，我和一堆Google大牛相处，技术成长很快。他们并不介怀我非计算机出身，也不担心我只有几个月的Android的开发背景。我想我唯一的优势就是努力了。开始时我还挺有压力，担心会拖他们的后腿，不过在他们的帮助下和我个人的不懈努力下，现在我已经能够很好的与他们合作，也得到了他们的认可。我最爱Glow的扁平氛围，我相信现在很多创业公司也如此，没有上下级，一心做好产品。\n\n在Glow的这半年，我不用提心吊胆担心导师随时来使唤我，我可以全身心来提高技术，而身边的人都随时准备帮助你。\n\n说实话，我感激自己这两年的坚持，感谢这两年遇到的大牛们。\n\n2016年的技术规划\n------------------------------------------------------------------\n2016年对我而言，是个大年。\n\n正式离开校园，步入工作。\n\n下面，简单列一下我的规划吧：\n\n1. 工作方面。目前我在Glow已经独立负责一整块的开发任务了，包括Android和服务器开发。我希望把自己在开源方面学到的新技术应用到我负责的模块上，持续地提高用户体验和稳定性，为用户提供更棒的作品。这点是我每天都在心心念念的。\n\n2. 个人技术方面。由于Glow不用加班，所以我平常会有很多的个人时间。我当然不准备把这些时间用在看剧和睡觉上。我会多去写作，之前在简书上写的几篇文章[《如何在一天之内搭建以你自己名字为域名且具备cool属性的个人博客》](http://www.jianshu.com/p/99665608d295)、[如何在一天之内完成一款具备cool属性的Android产品<简诗>](http://www.jianshu.com/p/cf496fc408b2)收获了不少读者，所以以后会继续努力。同时也会在[个人微博](http://weibo.com/1625892654)和[稀土](http://gold.xitu.io/#/user/562a410800b07d3623109a95)上多多分享优质文章。\n\n3. 开源方面。最近因为又忙实习又忙毕业写论文，就没有花太多时间做开源。只是贡献了两个库：[简诗](https://github.com/wingjay/jianshi) 和[BlurImageView](https://github.com/wingjay/BlurImageView)，加起来快一千个star左右。不过以后还会继续贡献优秀的库和大家分享的。\n\n4. [我的个人博客](http://wingjay.com) http://wingjay.com。\n除了技术，我也会开始提高自己的艺术方面的敏感度。比如开始接触建筑设计、文学方面的，一方面扩大自己的知识面，另一方面也是提高自己的感性思维吧。\n\n最近在读的书\n------------------------------------------------------------------\n1. 《一切始于设计－一个设计师的世博十日手记   －   迪人 著》\n这本书我看到了一位设计师对世界的认知，接触了世界各国的设计思想，如意大利、德国、法国等，收获很大！\n\n2. 《设计中的设计   －   原研哉 著》\n原研哉，无印良品设计总监。感受日本设计思想中留白这一概念，让人重新认识身边的事物。\n\n3. 《Android开发艺术探索  － 任玉刚 著》\n把Android里很多晦涩的概念讲解清楚，超喜欢里面对View的讲解，解开了我一个很大的困惑谜团。\n\n4. 《Android群英传  －  徐宜生 著》\n从实际开发的角度，讲解开发中常见的各种问题，结合上面那本书一起看，差不多能把多数开发问题搞明白。\n\n还有不少书，下次再来推荐吧！\n\n如果你也热爱技术，交个朋友吧\n------------------------------------------------------------------\n我是[wingjay](http://wingjay.com)，你可以通过我的[GitHub](https://github.com/wingjay)或者[简书平台](http://www.jianshu.com/users/da333fd63fe5/latest_articles)来找到我哦。\n\n谢谢！\n\n\n\n\n\n\n\n","source":"_posts/我与代码的相知相遇.md","raw":"title: 我与代码的相知相遇\ntags:\n  - Goodbye2015 Hi 2016\n  - 随笔\ndate: 2015-12-29 00:12:45\n---\n![](https://drscdn.500px.org/photo/3706985/m%3D2048/d9cba44c9d66f27d27e1628fa7f4606c)\n\nHi，我是wingjay\n------------------------------------------------------------------\n大家好，我是[《如何在一天之内搭建以你自己名字为域名且具备cool属性的个人博客》](http://www.jianshu.com/p/99665608d295)、[如何在一天之内完成一款具备cool属性的Android产品<简诗>](http://www.jianshu.com/p/cf496fc408b2)的作者[wingjay](https://github.com/wingjay)，今天抽空来和大家一起告别2015，迎接新的技术成长的一年。\n\n\n再过半年，我就要从交大硕士毕业了。\n------------------------------------------------------------------\n2013年9月入学交大，自动化小硕，从没想过未来会从事计算机相关行业，因为对于编程我唯一的背景就是大二那年的C语言课程。\n\n我是怎么开始对编程感兴趣的？不记得了，也不会有人关心。只知道那时逢人就介绍智能手机的硬件配置多么发烧，喜欢调侃小米的成功哲学，也跟风追着“大数据”和“云计算”这两朵云奔跑。\n\n慢慢的，觉得搞计算机的人很酷。\n\n那时，我正式入学。\n\n也在那时，我缠着父母给我买了一款手机－小米2s。我记得我对着这款手机盯了快半个小时，乐的。\n\n然后开启了两年的研究生生涯。\n\n没有我想象的顺利，但也没有我想象的不堪。\n\n用两句话来概括这两年吧：\n\n1. 第一年我把除了马克思之外所有的课都认真学了一遍，还选修了诸如机器学习、模式识别和数据挖掘等课程，这一年，感觉踏实。\n\n2. 第二年，30%的时间去提心吊胆地帮导师干杂活；70%的时间背着导师更加提心吊胆地去学习编程，这一年，以为自己会消沉，后来没有。\n\n自学编程的那些日子\n------------------------------------------------------------------\n还是那句话，现在吃的苦，都是当年专业没选计算机时脑子进的水。\n\n2014年初，作为一名只会C语言的我而言，真正开始自学计算机，依次经历了以下几步：\n\n1. 14年3月，师兄说要学编程，先学基础。于是我过了一遍数据结构和操作系统的书，过的比较粗略；\n\n2. 14年4月，想学Android开发，在网上发现了Mars的教程视频。于是我每天只要有空就背着导师偷偷看视频，做笔记。学习Android的同时也顺带着学了些Java的知识。每天晚上还会在新浪博客或博客园上把自己的笔记记录上去，虽然这种做法并没什么作用，但那时觉得很happy。\n\n3. 14年6月，视频自学效果不佳，我非常苦恼。那时我非常希望有人能够来帮帮我这个新手，同时我每天去寻找实践的机会。要知道，作为一名研究生，导师每天管着你，不能放开学，很不爽的。不过，上天眷顾，我终于找到一份校内实习，技术开发，离实验室又近，每天还有80元的工资，天，那几天我感觉我复活了！\n\n4. 14年6月中到11月，开始学习网站开发。校内实习启动，我过上了白天实验室，晚上工作室的日子了。工作室四个人，两个大牛，两个菜鸟，我当然是后者。6月到11月，我饥渴地学习！开始做网站，前端、后端、数据库。这半年我差不多每天是白天在实验室干完活之后晚上去写代码，半年下来，差不多把前端的html、css、js和一些框架Bootstrap、jQuery等，后端的php，和如thinkphp等框架，还有数据库MySQL、MongoDB都学了一通。空闲时也自己配置过服务器，搭建自己的网站。\n\n5. 15年3月到5月，算是开始了Android开发学习之路吧。15年，也就是今年，三月开学时，工作室里两个人离开了，一个是被导师抓走干活了，另一个大三的准备毕业了。于是工作室就只剩我和一位大牛。说实话，有点寂寞，但我的热情并没有减少。相反，我仍旧专注于Android的开发和学习。实验室方面，到了今年，反而轻松了些，每天上午和晚上在工作室，下午跑回实验室蹲班。另外在实际的开发中，我发现以前视频学的东西和实际应用相差很大，可能那些更基础吧，总之我几乎又是从零开始去学习，从项目中自学。\n\n6. 15年5月，我学了近三个月的Android开发，虽然工作室另一位大牛偶尔会帮我，但多数时候还是我一头人默默对着电脑学习、研究和修bug。不过好歹这几个月时间把工作室之前的一款Android应用重新写了一遍，每天晚上学到深夜，冒着寒风骑车回宿舍的场景我记得清楚。最后开发完的应用，工作室的指导老师很满意，我也对自己比较满意。\n\n7. 15年5月中到6月，工作室只剩我一人了。我没有想到，在六月某一天，工作室的顶梁柱大牛说要去北京微软亚研院实习了，意味着整个工作室从最初的四个人只剩下我一个了。那时，我真感觉到有点孤单，看着身边做技术的小伙伴依次离开，到最后竟然只剩我自己一人。不过，我还是照常来工作室开发Android、学习，不过，这时只能一人去食堂吃饭，遇到问题也再没有人来指导，完全靠自己。\n\n8. 15年6月初，迷茫地寻找校外实习。我独自在工作室开发近一个月后，由于即将面临毕业，于是也开始寻找实习。那时摆在我眼前有两条路，大公司；创业公司。对我个人而言，我是追求技术成长的，不希望自己受限于某种技术，所以害怕大公司那种只让我一直从事某个项目的某个方面。所以在我心里，虽知大公司稳妥，但我更偏心于创业型公司。另外我也希望提高自己的英语，也希望有还不错的待遇，希望未来有好的职业发展规划。很多的希望，让我很迷茫，不知道能不能找到真正适合自己的企业。\n\n9. 15年6月中，确定实习公司Glow, 正式离开工作室。终于，我也要离开这个伴随我技术成长的地方了。这期间，我参加了一些公司的面试。大小公司都有，也拿到不少开发岗offer。当然，最后我选择了目前我所在的这家硅谷创业公司－－Glow。说到Glow，我就觉得有缘。一年前，我被Glow的招聘帖吸引，便去关注了公众号，说实话，Glow的Google背景、扁平式氛围一瞬间就吸引了我。不过接下来的一年再也没收到任何关于Glow的招聘信息，所以自己也就淡忘了，加之也觉得自己没戏，所以也就没有多想。直到今年找实习时，在路上走着突然想起这家公司，说实话那时除了Glow这个名字和这家公司很独特之外其他都不记得。于是我回到学校，把bbs重新翻了一遍，竟被我找回了那个招聘帖。之后大家就知道了，投递简历，电话面试，onsite面试。然后很快就入职了。\n\n10. 15年6月中到现在，Glow的Android开发实习生活。因为不想有软文的嫌疑，所以我也就不做太多介绍了。我只想说，在Glow的这半年，我和一堆Google大牛相处，技术成长很快。他们并不介怀我非计算机出身，也不担心我只有几个月的Android的开发背景。我想我唯一的优势就是努力了。开始时我还挺有压力，担心会拖他们的后腿，不过在他们的帮助下和我个人的不懈努力下，现在我已经能够很好的与他们合作，也得到了他们的认可。我最爱Glow的扁平氛围，我相信现在很多创业公司也如此，没有上下级，一心做好产品。\n\n在Glow的这半年，我不用提心吊胆担心导师随时来使唤我，我可以全身心来提高技术，而身边的人都随时准备帮助你。\n\n说实话，我感激自己这两年的坚持，感谢这两年遇到的大牛们。\n\n2016年的技术规划\n------------------------------------------------------------------\n2016年对我而言，是个大年。\n\n正式离开校园，步入工作。\n\n下面，简单列一下我的规划吧：\n\n1. 工作方面。目前我在Glow已经独立负责一整块的开发任务了，包括Android和服务器开发。我希望把自己在开源方面学到的新技术应用到我负责的模块上，持续地提高用户体验和稳定性，为用户提供更棒的作品。这点是我每天都在心心念念的。\n\n2. 个人技术方面。由于Glow不用加班，所以我平常会有很多的个人时间。我当然不准备把这些时间用在看剧和睡觉上。我会多去写作，之前在简书上写的几篇文章[《如何在一天之内搭建以你自己名字为域名且具备cool属性的个人博客》](http://www.jianshu.com/p/99665608d295)、[如何在一天之内完成一款具备cool属性的Android产品<简诗>](http://www.jianshu.com/p/cf496fc408b2)收获了不少读者，所以以后会继续努力。同时也会在[个人微博](http://weibo.com/1625892654)和[稀土](http://gold.xitu.io/#/user/562a410800b07d3623109a95)上多多分享优质文章。\n\n3. 开源方面。最近因为又忙实习又忙毕业写论文，就没有花太多时间做开源。只是贡献了两个库：[简诗](https://github.com/wingjay/jianshi) 和[BlurImageView](https://github.com/wingjay/BlurImageView)，加起来快一千个star左右。不过以后还会继续贡献优秀的库和大家分享的。\n\n4. [我的个人博客](http://wingjay.com) http://wingjay.com。\n除了技术，我也会开始提高自己的艺术方面的敏感度。比如开始接触建筑设计、文学方面的，一方面扩大自己的知识面，另一方面也是提高自己的感性思维吧。\n\n最近在读的书\n------------------------------------------------------------------\n1. 《一切始于设计－一个设计师的世博十日手记   －   迪人 著》\n这本书我看到了一位设计师对世界的认知，接触了世界各国的设计思想，如意大利、德国、法国等，收获很大！\n\n2. 《设计中的设计   －   原研哉 著》\n原研哉，无印良品设计总监。感受日本设计思想中留白这一概念，让人重新认识身边的事物。\n\n3. 《Android开发艺术探索  － 任玉刚 著》\n把Android里很多晦涩的概念讲解清楚，超喜欢里面对View的讲解，解开了我一个很大的困惑谜团。\n\n4. 《Android群英传  －  徐宜生 著》\n从实际开发的角度，讲解开发中常见的各种问题，结合上面那本书一起看，差不多能把多数开发问题搞明白。\n\n还有不少书，下次再来推荐吧！\n\n如果你也热爱技术，交个朋友吧\n------------------------------------------------------------------\n我是[wingjay](http://wingjay.com)，你可以通过我的[GitHub](https://github.com/wingjay)或者[简书平台](http://www.jianshu.com/users/da333fd63fe5/latest_articles)来找到我哦。\n\n谢谢！\n\n\n\n\n\n\n\n","slug":"我与代码的相知相遇","published":1,"updated":"2015-12-28T16:34:39.000Z","_id":"ciiq5zhll0008l9w8mnnxmba0","comments":1,"layout":"post","photos":[],"link":""},{"title":"如何在一天之内搭建以你自己名字为域名又具备cool属性的个人博客","date":"2015-12-07T12:03:33.000Z","_content":"\n![个人博客](/img/我的博客.png)\n\n>对程序员而言，最好的简历就是个人博客和GitHub\n\n## 个人222博客\n每个优秀的程序员都会有个人独占的一方网络空间，那里是他个人的舞台，听说过他的人会逐渐汇聚进来，认识他，熟悉他，鼓励他，赞扬他。而对他个人而言，他有了一个可以畅所欲言的小房间，他可以专研学术，聊聊情怀。同时和喜爱他的读者成为好友，共同成长。\n\n这难道不是一件很cool的事情吗？\n\n<!-- more -->\n\n## 先看成果\n教方法前先来看看最终的效果吧。[http://wingjay.com](http://wingjay.com)是本人搭建的个人博客，主要有以下几点：\n\n    1. 个人域名: wingjay.com\n    2. 无需购置服务器，本站同时挂载在Github Pages 和 GitCafe Pages上，免服务器费的同时还能做负载均衡，想想还有点小激动\n    3. 在GitHub上同时管理你的博客和相应代码，再也不用担心博客遗失\n    4. SSL支持，即\"http://\" -> \"https://\"，更安全也更高大上\n\n## 再看兵器\n - 博客框架：[Hexo 3](https://hexo.io)，这是一款能快速、简洁且高效的博客框架，支持[Markdown编辑](https://help.github.com/articles/markdown-basics/)，自动渲染出漂亮的静态页面。\n - 前端主题：[Next](https://github.com/iissnan/hexo-theme-next)，效果参考[http://wingjay.com](http://wingjay.com)\n - 域名购买：[万网](http://wanwang.aliyun.com/)，你可以选购自己名字的域名，一年几十元左右，两杯咖啡的钱。\n - SSL：[CloudFlare](https://www.cloudflare.com)\n\n\n## 抄起家伙\n本文写作方式是`安装流程主线` + `优质参考文章`。由于网络上关于Hexo搭建博客的教程玲琅满目，若读者完全自己动手则要一篇篇找，浪费时间走弯路；相反，若作者悉数摘抄进来，反倒未必符合各人情况，且不利阅读。\n\n所以，`主线`讲解思路，`参考`深入阅读。\n\n下文以搭建 http://wingjay.com 个人博客为例。\n\n### GitHub Pages\n在不购买服务器的前提下，我们的网站需要挂在GitHub Pages上。GitHub Pages是面向用户、组织和项目开放的公共静态页面搭建托管服务，可用于搭建个人博客。\n\n0. 你需要拥有一个[GitHub账号](https://github.com)，去完成新手任务吧。\n1. 进入[GitHub Pages](https://pages.github.com/)，一步步做，完成后就能在浏览器打开[http://wingjay.github.io](http://wingjay.github.io)了。\n\n至此，我们已经利用GitHub Pages搭建好了个人博客雏形了。下面要做的，就是个性化了。\n\n### 安装Hexo博客框架\n经过上面步骤，我们已经拥有了一个初步域名：http://username.github.io 加一个免费网络空间了。好比房间有了，但还没有任何家具。所以下面我们需要把空白的博客丰富起来。\n\n放心，不需要你手写一大堆html、css文件，也不用找jQuery来实现酷炫的页面效果。[Hexo](https://hexo.io)是一款博客框架，它会帮我们搭建。\n\n#### 安装Hexo\n参考[中文文档](https://hexo.io/docs/)或[英文文档](https://hexo.io/zh-cn/docs/index.html)。完成该步后，你的电脑便拥有了Git、Node.js和Hexo。\n\n#### GitHub管理\n为了让自己未来的博客和代码处在git管理之下，我们要把刚刚在Github上博客项目拉到本地。如本人创建的[https://github.com/wingjay/wingjay.github.io](https://github.com/wingjay/wingjay.github.io)，在本地创建文件夹，名字任意，此处设为`myblog`，进入该文件夹，把项目代码clone下来。\n```\ngit clone https://github.com/wingjay/wingjay.github.io\n```\n好了，此时会自动在`myblog`目录下创建子文件夹`wingjay.github.io`,那里就是我们博客的代码，以后的操作都在git的管理之下了，此时默认的branch为`master`。\n\n#### 初始化Hexo\n请参考[文档](https://hexo.io/docs/setup.html)。init命令中的`<folder>`就是文件夹`wingjay.github.io`。初始化后，`wingjay.github.io`里面就已经有完整的Hexo框架了。\n\n#### 熟悉Hexo\n为了让读者快速了解`Hexo`，我作几个简单介绍吧。当然，更多的还是需要仔细阅读[文档](https://hexo.io/docs/writing.html)才能了解更详细。\n\n![hexo目录结构](/img/hexo目录.png)\n\n - `_config.yml`是整体的配置文件，很多基础配置、插件配置等都需要在里面进行。要注意的是，该文件格式要求极为严格，缺少一个空格都会导致运行错误。小提示：不要用Tab缩进，用两个空格符。\n - `layout`，包括`draft(草稿)、page(页面)、post(文章)`。这个就是三种文件的基本格式，其中`post`是你发表的文章，会显示在你的网站里，一篇post会包括`title标题、date日期、tags标签`等信息；`draft`是草稿，只有你在本地能看到，必须要`publish`后才能成为`post`，draft和post差别是date，因为draft没有发表，所以不需要指定日期。`page`是一个页面，对应一个新的html页面，比如[博客内容展示页](http://wingjay.com/2015/12/06/%E8%AF%B4%E4%B8%80%E8%AF%B4%E5%8D%9A%E5%AE%A2/)是一个页面，[留言本](http://wingjay.com/guestbook/)也是一个页面。\n - `public文件夹`，这个文件夹是最终会发布到网站上的真实内容。怎么理解呢？我们可以把`public`文件夹当作是真正的被用户看到的，而其他的`source、themes`等都是为`public`服务的。Hexo里有一个很重要的指令`hexo generate`，这个指令就是利用所有代码里的配置信息、source里写的文章、themes里的样式，共同生成最终的`静态html文件`，存入`public`文件夹内。在我们执行了发布指令`hexo deploy`后，就会把`public`的内容部署到`GitHub Pages`上。当用户在访问我们的博客时，他们会看到public里生成的html文件。这个概念非常重要，即`代码和真实静态页面是独立的`。\n - `generate和deploy`，`generate`会把我们的配置、文章和主题结合起来生成一堆酷炫的html静态文件放在public里面。但此时用户还看不到`本地public文件`里的页面，我们必须用后一个指令`deploy`才能把静态文件部署到`GitHub Pages`上。不过，在部署前，需要配置让它自动部署到我们前面创建的[Github项目](https://github.com/wingjay/wingjay.github.io)中。\n - `deploy`相关配置。为了能够让项目自动把public文件夹的内容部署到[GitHub项目](https://github.com/wingjay/wingjay.github.io)中，我们可以按[部署文档](https://hexo.io/docs/deployment.html)进行配置，其中选择的`branch`为`master`。此后，每次运行deploy后，项目就会自动把public文件夹内容全部覆盖到[当前的GitHub项目master分支上](https://github.com/wingjay/wingjay.github.io/tree/master)。\n - `代码`和`静态文件`分开管理。根据上面知道，每次部署后，public文件内容会`覆盖`掉项目整个master分支。这样可以实现网站`静态文件`的版本控制，但是，仔细对比这个master分支，我们会发现里面**只剩下静态文件**了，我们的代码比如source、themes统统没有了，这就导致无法对代码进行版本管理了。这意味着我换一台电脑，我就再也找不到`代码`了，只剩下一堆之前编译出来的静态文件。所以，为了对代码也进行版本控制，我们创建一个[新的分支：code](https://github.com/wingjay/wingjay.github.io/tree/code)，然后在这个分支里进行代码控制，master里则保存部署的新的静态文件。大家可以自行比对这两个branch的内容差异。\n\n#### 配置Hexo\n做一些基础配置即可，请参考[配置文档](https://hexo.io/docs/configuration.html)\n\n#### 小结\n到这里，我们已经完成了hexo的配置，我们可以在GitHub用不同branch分别管理代码和静态文件。执行deploy操作后，刷新你的网页 http://username.github.io 你就能看到默认的内容了。\n\n但此时还是默认主题，不够美观，所以下一步要配置Next主题。\n\n### 配置主题Next\nHexo主题非常多，可以参考[丰富多彩的Hexo主题](https://hexo.io/themes/)，本文选Next为主题，样式参考[我的博客](http://wingjay.com)。\n\n进入配置阶段，最好的文档还是[官方文档](http://theme-next.iissnan.com/)，简单得不能再细致了。下面只提几点注意：\n\n- 第三方评论系统。评论系统很重要，你可以与读者进行更多交流，配置也简单，建议采用[DISQUS](https://disqus.com/)，更国际化一点，[配置见此](http://theme-next.iissnan.com/third-party-services.html#DISUQS)。另外，前期建议开启`不登陆评论`，即在Disqus的`Comment Rule`里允许`Guest comment`。\n- 创建留言板。熟悉`page`的创建与使用，[参考这里](http://www.arao.me/2015/hexo-next-theme-optimize-base/#为你的hexo网站NexT主题增加留言页)\n- 给自己博客做`SEO`。有好的SEO便于搜索引擎索引你的网站，随着以后读者增多，他们可以更好搜索到你的网站。[具体方法见此](http://www.arao.me/2015/hexo-next-theme-optimize-seo/)\n\n<!-- ![Disqus评论系统](/img/Disqus评论系统.png) -->\n\n### 替换自己的域名\n好了，经过上面的步骤，博客已经拥有了一个全新的主题啦。\n\n下面，我们要对域名 http://wingjay.github.io 下手啦。\n\n#### 购买域名\n速速前往[万网](http://wanwang.aliyun.com/)，支付宝刷的一声，你就拥有了一个闪闪发光的个人域名啦\n\n#### 域名解析_1\n以购买的域名`wingjay.com`为例，我们希望在访问这个域名时能自动进入Github Pages，所以我们要在万网建立一个CNAME纪录来帮我们做一个域名跳转：`wingjay.com` -> `wingjay.github.io`，`www.wingjay.com` -> `wingjay.github.io`。添加方法[参考这里](http://www.sudu.cn/service/detail/1/0/0/3/10036.html)，添加后可以看到两条记录：![域名解析](/img/域名解析.png)。然后万网会在世界各地的DNS服务器上添加这两条记录，当用户访问`wingjay.com`时会自动去访问`wingjay.github.io`。\n\n#### 域名解析_2\n但是，此时并不能成功访问，因为github pages是有限制的，它不允许任意域名都跳转过来，而是只限制一个域名，而且这个域名必须声明在CNAME文件中。\n\n所以，我们需要添加一个CNAME文件到项目的master中才行，[参考这里](https://help.github.com/articles/adding-a-cname-file-to-your-repository/)。读者可以参考本人的[CNAME文件内容](https://github.com/wingjay/wingjay.github.io/blob/master/CNAME)。\n\n不过，对于`Hexo 3`，**这里有一个坑要注意**：大家应该还记得上文说的，master分支里的内容都是自动生成的，而且会完全覆盖之前的内容。如果我们直接创建一个新文件CNAME，填好域名。但会发现在下一次部署后这个文件就消失了。不用惊讶，因为hexo并不会自动生成CNAME文件，所以在部署时被覆盖删除了。\n\n所以，我们就需要这个CNAME工具[hexo-generator-cname](https://github.com/leecrossley/hexo-generator-cname)，这时会自动在public里生成一个CNAME文件，把你的域名加进去再部署一下吧！\n\n### HTTP -> HTTPS\nHTTPS是安全版的HTTP协议，它在http协议与TCP之间加入SSL层，采用端口443，不仅会对传输数据加密，还会进行身份验证。当然个人博客并没有强制性要求采用该协议，这也只是本人的好奇而为。\n\n目前Github Pages已经支持https了，但是不支持自定义证书。不过我们可以利用[CloudFlare](https://www.cloudflare.com)来实现。具体实现可以[参考这里](https://www.benburwell.com/posts/configuring-cloudflare-universal-ssl/)\n\n说明：本网站的https正处在申请中\n\n## 总结\n经过上面的步骤，我们已经能够通过访问自己的域名进入自己酷炫的博客了。本文的任务也就告一段落。\n\n除了上面的功能，本人还完成了`支持双域名同时登陆`，其中，支持双域名的解决思路是考虑到[Github Pages的CNAME纪录只允许添加一个域名](https://help.github.com/articles/adding-a-cname-file-to-your-repository/)，所以本人又在[Gitcafe](https://gitcafe.com)上部署了一套。不过考虑到这点大家不一定能用的上，就没有做介绍，有需要的话可以看下文的联系方式联系我。\n\n## 一天变cool系列文章\n[如何在一天之内完成一款具备cool属性的Android产品<简诗>](http://www.jianshu.com/p/cf496fc408b2)\n\n[如何在一天之内搭建以你自己名字为域名且具备cool属性的个人博客](http://www.jianshu.com/p/99665608d295)\n\n## 关于作者\n欢迎各位关注\n[我的Github](https://github.com/wingjay): <https://github.com/wingjay> \n和 \n[我的个人博客](http://wingjay.com): <http://wingjay.com>\n和\n[微博 iam_wingjay](http://weibo.com/u/1625892654): <http://weibo.com/u/1625892654>\n如果有问题，可以给我留言或发邮件<mailto:yinjiesh@126.com>\n\n![](https://avatars0.githubusercontent.com/u/9619875?v=3&s=460)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/如何在一天之内搭建以你自己名字为域名的很cool的个人博客.md","raw":"title: 如何在一天之内搭建以你自己名字为域名又具备cool属性的个人博客\ntags:\n  - '<一天变cool>系列'\n  - 个人博客\ndate: 2015-12-07 20:03:33\n---\n\n![个人博客](/img/我的博客.png)\n\n>对程序员而言，最好的简历就是个人博客和GitHub\n\n## 个人222博客\n每个优秀的程序员都会有个人独占的一方网络空间，那里是他个人的舞台，听说过他的人会逐渐汇聚进来，认识他，熟悉他，鼓励他，赞扬他。而对他个人而言，他有了一个可以畅所欲言的小房间，他可以专研学术，聊聊情怀。同时和喜爱他的读者成为好友，共同成长。\n\n这难道不是一件很cool的事情吗？\n\n<!-- more -->\n\n## 先看成果\n教方法前先来看看最终的效果吧。[http://wingjay.com](http://wingjay.com)是本人搭建的个人博客，主要有以下几点：\n\n    1. 个人域名: wingjay.com\n    2. 无需购置服务器，本站同时挂载在Github Pages 和 GitCafe Pages上，免服务器费的同时还能做负载均衡，想想还有点小激动\n    3. 在GitHub上同时管理你的博客和相应代码，再也不用担心博客遗失\n    4. SSL支持，即\"http://\" -> \"https://\"，更安全也更高大上\n\n## 再看兵器\n - 博客框架：[Hexo 3](https://hexo.io)，这是一款能快速、简洁且高效的博客框架，支持[Markdown编辑](https://help.github.com/articles/markdown-basics/)，自动渲染出漂亮的静态页面。\n - 前端主题：[Next](https://github.com/iissnan/hexo-theme-next)，效果参考[http://wingjay.com](http://wingjay.com)\n - 域名购买：[万网](http://wanwang.aliyun.com/)，你可以选购自己名字的域名，一年几十元左右，两杯咖啡的钱。\n - SSL：[CloudFlare](https://www.cloudflare.com)\n\n\n## 抄起家伙\n本文写作方式是`安装流程主线` + `优质参考文章`。由于网络上关于Hexo搭建博客的教程玲琅满目，若读者完全自己动手则要一篇篇找，浪费时间走弯路；相反，若作者悉数摘抄进来，反倒未必符合各人情况，且不利阅读。\n\n所以，`主线`讲解思路，`参考`深入阅读。\n\n下文以搭建 http://wingjay.com 个人博客为例。\n\n### GitHub Pages\n在不购买服务器的前提下，我们的网站需要挂在GitHub Pages上。GitHub Pages是面向用户、组织和项目开放的公共静态页面搭建托管服务，可用于搭建个人博客。\n\n0. 你需要拥有一个[GitHub账号](https://github.com)，去完成新手任务吧。\n1. 进入[GitHub Pages](https://pages.github.com/)，一步步做，完成后就能在浏览器打开[http://wingjay.github.io](http://wingjay.github.io)了。\n\n至此，我们已经利用GitHub Pages搭建好了个人博客雏形了。下面要做的，就是个性化了。\n\n### 安装Hexo博客框架\n经过上面步骤，我们已经拥有了一个初步域名：http://username.github.io 加一个免费网络空间了。好比房间有了，但还没有任何家具。所以下面我们需要把空白的博客丰富起来。\n\n放心，不需要你手写一大堆html、css文件，也不用找jQuery来实现酷炫的页面效果。[Hexo](https://hexo.io)是一款博客框架，它会帮我们搭建。\n\n#### 安装Hexo\n参考[中文文档](https://hexo.io/docs/)或[英文文档](https://hexo.io/zh-cn/docs/index.html)。完成该步后，你的电脑便拥有了Git、Node.js和Hexo。\n\n#### GitHub管理\n为了让自己未来的博客和代码处在git管理之下，我们要把刚刚在Github上博客项目拉到本地。如本人创建的[https://github.com/wingjay/wingjay.github.io](https://github.com/wingjay/wingjay.github.io)，在本地创建文件夹，名字任意，此处设为`myblog`，进入该文件夹，把项目代码clone下来。\n```\ngit clone https://github.com/wingjay/wingjay.github.io\n```\n好了，此时会自动在`myblog`目录下创建子文件夹`wingjay.github.io`,那里就是我们博客的代码，以后的操作都在git的管理之下了，此时默认的branch为`master`。\n\n#### 初始化Hexo\n请参考[文档](https://hexo.io/docs/setup.html)。init命令中的`<folder>`就是文件夹`wingjay.github.io`。初始化后，`wingjay.github.io`里面就已经有完整的Hexo框架了。\n\n#### 熟悉Hexo\n为了让读者快速了解`Hexo`，我作几个简单介绍吧。当然，更多的还是需要仔细阅读[文档](https://hexo.io/docs/writing.html)才能了解更详细。\n\n![hexo目录结构](/img/hexo目录.png)\n\n - `_config.yml`是整体的配置文件，很多基础配置、插件配置等都需要在里面进行。要注意的是，该文件格式要求极为严格，缺少一个空格都会导致运行错误。小提示：不要用Tab缩进，用两个空格符。\n - `layout`，包括`draft(草稿)、page(页面)、post(文章)`。这个就是三种文件的基本格式，其中`post`是你发表的文章，会显示在你的网站里，一篇post会包括`title标题、date日期、tags标签`等信息；`draft`是草稿，只有你在本地能看到，必须要`publish`后才能成为`post`，draft和post差别是date，因为draft没有发表，所以不需要指定日期。`page`是一个页面，对应一个新的html页面，比如[博客内容展示页](http://wingjay.com/2015/12/06/%E8%AF%B4%E4%B8%80%E8%AF%B4%E5%8D%9A%E5%AE%A2/)是一个页面，[留言本](http://wingjay.com/guestbook/)也是一个页面。\n - `public文件夹`，这个文件夹是最终会发布到网站上的真实内容。怎么理解呢？我们可以把`public`文件夹当作是真正的被用户看到的，而其他的`source、themes`等都是为`public`服务的。Hexo里有一个很重要的指令`hexo generate`，这个指令就是利用所有代码里的配置信息、source里写的文章、themes里的样式，共同生成最终的`静态html文件`，存入`public`文件夹内。在我们执行了发布指令`hexo deploy`后，就会把`public`的内容部署到`GitHub Pages`上。当用户在访问我们的博客时，他们会看到public里生成的html文件。这个概念非常重要，即`代码和真实静态页面是独立的`。\n - `generate和deploy`，`generate`会把我们的配置、文章和主题结合起来生成一堆酷炫的html静态文件放在public里面。但此时用户还看不到`本地public文件`里的页面，我们必须用后一个指令`deploy`才能把静态文件部署到`GitHub Pages`上。不过，在部署前，需要配置让它自动部署到我们前面创建的[Github项目](https://github.com/wingjay/wingjay.github.io)中。\n - `deploy`相关配置。为了能够让项目自动把public文件夹的内容部署到[GitHub项目](https://github.com/wingjay/wingjay.github.io)中，我们可以按[部署文档](https://hexo.io/docs/deployment.html)进行配置，其中选择的`branch`为`master`。此后，每次运行deploy后，项目就会自动把public文件夹内容全部覆盖到[当前的GitHub项目master分支上](https://github.com/wingjay/wingjay.github.io/tree/master)。\n - `代码`和`静态文件`分开管理。根据上面知道，每次部署后，public文件内容会`覆盖`掉项目整个master分支。这样可以实现网站`静态文件`的版本控制，但是，仔细对比这个master分支，我们会发现里面**只剩下静态文件**了，我们的代码比如source、themes统统没有了，这就导致无法对代码进行版本管理了。这意味着我换一台电脑，我就再也找不到`代码`了，只剩下一堆之前编译出来的静态文件。所以，为了对代码也进行版本控制，我们创建一个[新的分支：code](https://github.com/wingjay/wingjay.github.io/tree/code)，然后在这个分支里进行代码控制，master里则保存部署的新的静态文件。大家可以自行比对这两个branch的内容差异。\n\n#### 配置Hexo\n做一些基础配置即可，请参考[配置文档](https://hexo.io/docs/configuration.html)\n\n#### 小结\n到这里，我们已经完成了hexo的配置，我们可以在GitHub用不同branch分别管理代码和静态文件。执行deploy操作后，刷新你的网页 http://username.github.io 你就能看到默认的内容了。\n\n但此时还是默认主题，不够美观，所以下一步要配置Next主题。\n\n### 配置主题Next\nHexo主题非常多，可以参考[丰富多彩的Hexo主题](https://hexo.io/themes/)，本文选Next为主题，样式参考[我的博客](http://wingjay.com)。\n\n进入配置阶段，最好的文档还是[官方文档](http://theme-next.iissnan.com/)，简单得不能再细致了。下面只提几点注意：\n\n- 第三方评论系统。评论系统很重要，你可以与读者进行更多交流，配置也简单，建议采用[DISQUS](https://disqus.com/)，更国际化一点，[配置见此](http://theme-next.iissnan.com/third-party-services.html#DISUQS)。另外，前期建议开启`不登陆评论`，即在Disqus的`Comment Rule`里允许`Guest comment`。\n- 创建留言板。熟悉`page`的创建与使用，[参考这里](http://www.arao.me/2015/hexo-next-theme-optimize-base/#为你的hexo网站NexT主题增加留言页)\n- 给自己博客做`SEO`。有好的SEO便于搜索引擎索引你的网站，随着以后读者增多，他们可以更好搜索到你的网站。[具体方法见此](http://www.arao.me/2015/hexo-next-theme-optimize-seo/)\n\n<!-- ![Disqus评论系统](/img/Disqus评论系统.png) -->\n\n### 替换自己的域名\n好了，经过上面的步骤，博客已经拥有了一个全新的主题啦。\n\n下面，我们要对域名 http://wingjay.github.io 下手啦。\n\n#### 购买域名\n速速前往[万网](http://wanwang.aliyun.com/)，支付宝刷的一声，你就拥有了一个闪闪发光的个人域名啦\n\n#### 域名解析_1\n以购买的域名`wingjay.com`为例，我们希望在访问这个域名时能自动进入Github Pages，所以我们要在万网建立一个CNAME纪录来帮我们做一个域名跳转：`wingjay.com` -> `wingjay.github.io`，`www.wingjay.com` -> `wingjay.github.io`。添加方法[参考这里](http://www.sudu.cn/service/detail/1/0/0/3/10036.html)，添加后可以看到两条记录：![域名解析](/img/域名解析.png)。然后万网会在世界各地的DNS服务器上添加这两条记录，当用户访问`wingjay.com`时会自动去访问`wingjay.github.io`。\n\n#### 域名解析_2\n但是，此时并不能成功访问，因为github pages是有限制的，它不允许任意域名都跳转过来，而是只限制一个域名，而且这个域名必须声明在CNAME文件中。\n\n所以，我们需要添加一个CNAME文件到项目的master中才行，[参考这里](https://help.github.com/articles/adding-a-cname-file-to-your-repository/)。读者可以参考本人的[CNAME文件内容](https://github.com/wingjay/wingjay.github.io/blob/master/CNAME)。\n\n不过，对于`Hexo 3`，**这里有一个坑要注意**：大家应该还记得上文说的，master分支里的内容都是自动生成的，而且会完全覆盖之前的内容。如果我们直接创建一个新文件CNAME，填好域名。但会发现在下一次部署后这个文件就消失了。不用惊讶，因为hexo并不会自动生成CNAME文件，所以在部署时被覆盖删除了。\n\n所以，我们就需要这个CNAME工具[hexo-generator-cname](https://github.com/leecrossley/hexo-generator-cname)，这时会自动在public里生成一个CNAME文件，把你的域名加进去再部署一下吧！\n\n### HTTP -> HTTPS\nHTTPS是安全版的HTTP协议，它在http协议与TCP之间加入SSL层，采用端口443，不仅会对传输数据加密，还会进行身份验证。当然个人博客并没有强制性要求采用该协议，这也只是本人的好奇而为。\n\n目前Github Pages已经支持https了，但是不支持自定义证书。不过我们可以利用[CloudFlare](https://www.cloudflare.com)来实现。具体实现可以[参考这里](https://www.benburwell.com/posts/configuring-cloudflare-universal-ssl/)\n\n说明：本网站的https正处在申请中\n\n## 总结\n经过上面的步骤，我们已经能够通过访问自己的域名进入自己酷炫的博客了。本文的任务也就告一段落。\n\n除了上面的功能，本人还完成了`支持双域名同时登陆`，其中，支持双域名的解决思路是考虑到[Github Pages的CNAME纪录只允许添加一个域名](https://help.github.com/articles/adding-a-cname-file-to-your-repository/)，所以本人又在[Gitcafe](https://gitcafe.com)上部署了一套。不过考虑到这点大家不一定能用的上，就没有做介绍，有需要的话可以看下文的联系方式联系我。\n\n## 一天变cool系列文章\n[如何在一天之内完成一款具备cool属性的Android产品<简诗>](http://www.jianshu.com/p/cf496fc408b2)\n\n[如何在一天之内搭建以你自己名字为域名且具备cool属性的个人博客](http://www.jianshu.com/p/99665608d295)\n\n## 关于作者\n欢迎各位关注\n[我的Github](https://github.com/wingjay): <https://github.com/wingjay> \n和 \n[我的个人博客](http://wingjay.com): <http://wingjay.com>\n和\n[微博 iam_wingjay](http://weibo.com/u/1625892654): <http://weibo.com/u/1625892654>\n如果有问题，可以给我留言或发邮件<mailto:yinjiesh@126.com>\n\n![](https://avatars0.githubusercontent.com/u/9619875?v=3&s=460)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"如何在一天之内搭建以你自己名字为域名的很cool的个人博客","published":1,"updated":"2015-12-28T16:40:34.000Z","_id":"ciiq5zhln000cl9w84rnr0xh6","comments":1,"layout":"post","photos":[],"link":""}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ciiq5zhl40000l9w8rb50i06t","tag_id":"ciiq5zhla0001l9w8onfdysq8","_id":"ciiq5zhlc0002l9w8yjjldspm"},{"post_id":"ciiq5zhlj0005l9w87c8nawze","tag_id":"ciiq5zhlk0006l9w85s4cejeu","_id":"ciiq5zhlk0007l9w8jdvaofaf"},{"post_id":"ciiq5zhll0008l9w8mnnxmba0","tag_id":"ciiq5zhlm0009l9w8dtawif7l","_id":"ciiq5zhlm000al9w8o3zdj3x2"},{"post_id":"ciiq5zhll0008l9w8mnnxmba0","tag_id":"ciiq5zhlk0006l9w85s4cejeu","_id":"ciiq5zhlm000bl9w8d9a92ikm"},{"post_id":"ciiq5zhln000cl9w84rnr0xh6","tag_id":"ciiq5zhlo000dl9w8j6c4r6ua","_id":"ciiq5zhlo000fl9w86l9o1q0h"},{"post_id":"ciiq5zhln000cl9w84rnr0xh6","tag_id":"ciiq5zhlo000el9w8k7rnr0m9","_id":"ciiq5zhlo000gl9w8jeg7u0uy"}],"Tag":[{"name":"welcome","_id":"ciiq5zhla0001l9w8onfdysq8"},{"name":"随笔","_id":"ciiq5zhlk0006l9w85s4cejeu"},{"name":"Goodbye2015 Hi 2016","_id":"ciiq5zhlm0009l9w8dtawif7l"},{"name":"<一天变cool>系列","_id":"ciiq5zhlo000dl9w8j6c4r6ua"},{"name":"个人博客","_id":"ciiq5zhlo000el9w8k7rnr0m9"}]}}